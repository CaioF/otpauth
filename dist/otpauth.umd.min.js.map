{"version":3,"file":"otpauth.umd.min.js","sources":["../src/utils/encoding/uint.js","../node_modules/jssha/dist/sha.mjs","../src/utils/global-scope.js","../src/utils/crypto/node-crypto.js","../src/utils/is-node.js","../src/utils/crypto/hmac-digest.js","../src/utils/encoding/base32.js","../src/utils/encoding/hex.js","../src/utils/encoding/latin1.js","../src/utils/encoding/utf8.js","../src/secret.js","../src/utils/crypto/random-bytes.js","../src/utils/crypto/timing-safe-equal.js","../src/hotp.js","../src/utils/pad.js","../src/totp.js","../src/uri.js","../src/version.js"],"sourcesContent":["/**\n * Converts an integer to an ArrayBuffer.\n * @param {number} num Integer.\n * @returns {ArrayBuffer} ArrayBuffer.\n */\nconst uintToBuf = (num) => {\n  const buf = new ArrayBuffer(8);\n  const arr = new Uint8Array(buf);\n  let acc = num;\n\n  for (let i = 7; i >= 0; i--) {\n    if (acc === 0) break;\n    arr[i] = acc & 255;\n    acc -= arr[i];\n    acc /= 256;\n  }\n\n  return buf;\n};\n\n/**\n * Converts an ArrayBuffer to an integer.\n * @param {ArrayBuffer} buf ArrayBuffer.\n * @returns {number} Integer.\n */\nconst uintFromBuf = (buf) => {\n  const arr = new Uint8Array(buf);\n  let num = 0;\n\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] !== 0) {\n      num *= 256;\n      num += arr[i];\n    }\n  }\n\n  return num;\n};\n\nexport { uintToBuf, uintFromBuf };\n","/**\n * A JavaScript implementation of the SHA family of hashes - defined in FIPS PUB 180-4, FIPS PUB 202,\n * and SP 800-185 - as well as the corresponding HMAC implementation as defined in FIPS PUB 198-1.\n *\n * Copyright 2008-2022 Brian Turek, 1998-2009 Paul Johnston & Contributors\n * Distributed under the BSD License\n * See http://caligatio.github.com/jsSHA/ for more information\n */\nconst t=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";function n(t,n,e,r){let i,s,o;const h=n||[0],u=(e=e||0)>>>3,w=-1===r?3:0;for(i=0;i<t.length;i+=1)o=i+u,s=o>>>2,h.length<=s&&h.push(0),h[s]|=t[i]<<8*(w+r*(o%4));return{value:h,binLen:8*t.length+e}}function e(e,r,i){switch(r){case\"UTF8\":case\"UTF16BE\":case\"UTF16LE\":break;default:throw new Error(\"encoding must be UTF8, UTF16BE, or UTF16LE\")}switch(e){case\"HEX\":return function(t,n,e){return function(t,n,e,r){let i,s,o,h;if(0!=t.length%2)throw new Error(\"String of HEX type must be in byte increments\");const u=n||[0],w=(e=e||0)>>>3,c=-1===r?3:0;for(i=0;i<t.length;i+=2){if(s=parseInt(t.substr(i,2),16),isNaN(s))throw new Error(\"String of HEX type contains invalid characters\");for(h=(i>>>1)+w,o=h>>>2;u.length<=o;)u.push(0);u[o]|=s<<8*(c+r*(h%4))}return{value:u,binLen:4*t.length+e}}(t,n,e,i)};case\"TEXT\":return function(t,n,e){return function(t,n,e,r,i){let s,o,h,u,w,c,f,a,l=0;const A=e||[0],E=(r=r||0)>>>3;if(\"UTF8\"===n)for(f=-1===i?3:0,h=0;h<t.length;h+=1)for(s=t.charCodeAt(h),o=[],128>s?o.push(s):2048>s?(o.push(192|s>>>6),o.push(128|63&s)):55296>s||57344<=s?o.push(224|s>>>12,128|s>>>6&63,128|63&s):(h+=1,s=65536+((1023&s)<<10|1023&t.charCodeAt(h)),o.push(240|s>>>18,128|s>>>12&63,128|s>>>6&63,128|63&s)),u=0;u<o.length;u+=1){for(c=l+E,w=c>>>2;A.length<=w;)A.push(0);A[w]|=o[u]<<8*(f+i*(c%4)),l+=1}else for(f=-1===i?2:0,a=\"UTF16LE\"===n&&1!==i||\"UTF16LE\"!==n&&1===i,h=0;h<t.length;h+=1){for(s=t.charCodeAt(h),!0===a&&(u=255&s,s=u<<8|s>>>8),c=l+E,w=c>>>2;A.length<=w;)A.push(0);A[w]|=s<<8*(f+i*(c%4)),l+=2}return{value:A,binLen:8*l+r}}(t,r,n,e,i)};case\"B64\":return function(n,e,r){return function(n,e,r,i){let s,o,h,u,w,c,f,a=0;const l=e||[0],A=(r=r||0)>>>3,E=-1===i?3:0,H=n.indexOf(\"=\");if(-1===n.search(/^[a-zA-Z0-9=+/]+$/))throw new Error(\"Invalid character in base-64 string\");if(n=n.replace(/=/g,\"\"),-1!==H&&H<n.length)throw new Error(\"Invalid '=' found in base-64 string\");for(o=0;o<n.length;o+=4){for(w=n.substr(o,4),u=0,h=0;h<w.length;h+=1)s=t.indexOf(w.charAt(h)),u|=s<<18-6*h;for(h=0;h<w.length-1;h+=1){for(f=a+A,c=f>>>2;l.length<=c;)l.push(0);l[c]|=(u>>>16-8*h&255)<<8*(E+i*(f%4)),a+=1}}return{value:l,binLen:8*a+r}}(n,e,r,i)};case\"BYTES\":return function(t,n,e){return function(t,n,e,r){let i,s,o,h;const u=n||[0],w=(e=e||0)>>>3,c=-1===r?3:0;for(s=0;s<t.length;s+=1)i=t.charCodeAt(s),h=s+w,o=h>>>2,u.length<=o&&u.push(0),u[o]|=i<<8*(c+r*(h%4));return{value:u,binLen:8*t.length+e}}(t,n,e,i)};case\"ARRAYBUFFER\":try{new ArrayBuffer(0)}catch(t){throw new Error(\"ARRAYBUFFER not supported by this environment\")}return function(t,e,r){return function(t,e,r,i){return n(new Uint8Array(t),e,r,i)}(t,e,r,i)};case\"UINT8ARRAY\":try{new Uint8Array(0)}catch(t){throw new Error(\"UINT8ARRAY not supported by this environment\")}return function(t,e,r){return n(t,e,r,i)};default:throw new Error(\"format must be HEX, TEXT, B64, BYTES, ARRAYBUFFER, or UINT8ARRAY\")}}function r(n,e,r,i){switch(n){case\"HEX\":return function(t){return function(t,n,e,r){const i=\"0123456789abcdef\";let s,o,h=\"\";const u=n/8,w=-1===e?3:0;for(s=0;s<u;s+=1)o=t[s>>>2]>>>8*(w+e*(s%4)),h+=i.charAt(o>>>4&15)+i.charAt(15&o);return r.outputUpper?h.toUpperCase():h}(t,e,r,i)};case\"B64\":return function(n){return function(n,e,r,i){let s,o,h,u,w,c=\"\";const f=e/8,a=-1===r?3:0;for(s=0;s<f;s+=3)for(u=s+1<f?n[s+1>>>2]:0,w=s+2<f?n[s+2>>>2]:0,h=(n[s>>>2]>>>8*(a+r*(s%4))&255)<<16|(u>>>8*(a+r*((s+1)%4))&255)<<8|w>>>8*(a+r*((s+2)%4))&255,o=0;o<4;o+=1)c+=8*s+6*o<=e?t.charAt(h>>>6*(3-o)&63):i.b64Pad;return c}(n,e,r,i)};case\"BYTES\":return function(t){return function(t,n,e){let r,i,s=\"\";const o=n/8,h=-1===e?3:0;for(r=0;r<o;r+=1)i=t[r>>>2]>>>8*(h+e*(r%4))&255,s+=String.fromCharCode(i);return s}(t,e,r)};case\"ARRAYBUFFER\":try{new ArrayBuffer(0)}catch(t){throw new Error(\"ARRAYBUFFER not supported by this environment\")}return function(t){return function(t,n,e){let r;const i=n/8,s=new ArrayBuffer(i),o=new Uint8Array(s),h=-1===e?3:0;for(r=0;r<i;r+=1)o[r]=t[r>>>2]>>>8*(h+e*(r%4))&255;return s}(t,e,r)};case\"UINT8ARRAY\":try{new Uint8Array(0)}catch(t){throw new Error(\"UINT8ARRAY not supported by this environment\")}return function(t){return function(t,n,e){let r;const i=n/8,s=-1===e?3:0,o=new Uint8Array(i);for(r=0;r<i;r+=1)o[r]=t[r>>>2]>>>8*(s+e*(r%4))&255;return o}(t,e,r)};default:throw new Error(\"format must be HEX, B64, BYTES, ARRAYBUFFER, or UINT8ARRAY\")}}const i=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],s=[3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428],o=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225],h=\"Chosen SHA variant is not supported\";function u(t,n){let e,r;const i=t.binLen>>>3,s=n.binLen>>>3,o=i<<3,h=4-i<<3;if(i%4!=0){for(e=0;e<s;e+=4)r=i+e>>>2,t.value[r]|=n.value[e>>>2]<<o,t.value.push(0),t.value[r+1]|=n.value[e>>>2]>>>h;return(t.value.length<<2)-4>=s+i&&t.value.pop(),{value:t.value,binLen:t.binLen+n.binLen}}return{value:t.value.concat(n.value),binLen:t.binLen+n.binLen}}function w(t){const n={outputUpper:!1,b64Pad:\"=\",outputLen:-1},e=t||{},r=\"Output length must be a multiple of 8\";if(n.outputUpper=e.outputUpper||!1,e.b64Pad&&(n.b64Pad=e.b64Pad),e.outputLen){if(e.outputLen%8!=0)throw new Error(r);n.outputLen=e.outputLen}else if(e.shakeLen){if(e.shakeLen%8!=0)throw new Error(r);n.outputLen=e.shakeLen}if(\"boolean\"!=typeof n.outputUpper)throw new Error(\"Invalid outputUpper formatting option\");if(\"string\"!=typeof n.b64Pad)throw new Error(\"Invalid b64Pad formatting option\");return n}function c(t,n,r,i){const s=t+\" must include a value and format\";if(!n){if(!i)throw new Error(s);return i}if(void 0===n.value||!n.format)throw new Error(s);return e(n.format,n.encoding||\"UTF8\",r)(n.value)}class f{constructor(t,n,e){const r=e||{};if(this.t=n,this.i=r.encoding||\"UTF8\",this.numRounds=r.numRounds||1,isNaN(this.numRounds)||this.numRounds!==parseInt(this.numRounds,10)||1>this.numRounds)throw new Error(\"numRounds must a integer >= 1\");this.o=t,this.h=[],this.u=0,this.l=!1,this.A=0,this.H=!1,this.S=[],this.p=[]}update(t){let n,e=0;const r=this.m>>>5,i=this.C(t,this.h,this.u),s=i.binLen,o=i.value,h=s>>>5;for(n=0;n<h;n+=r)e+this.m<=s&&(this.R=this.U(o.slice(n,n+r),this.R),e+=this.m);return this.A+=e,this.h=o.slice(e>>>5),this.u=s%this.m,this.l=!0,this}getHash(t,n){let e,i,s=this.v;const o=w(n);if(this.K){if(-1===o.outputLen)throw new Error(\"Output length must be specified in options\");s=o.outputLen}const h=r(t,s,this.T,o);if(this.H&&this.F)return h(this.F(o));for(i=this.g(this.h.slice(),this.u,this.A,this.B(this.R),s),e=1;e<this.numRounds;e+=1)this.K&&s%32!=0&&(i[i.length-1]&=16777215>>>24-s%32),i=this.g(i,s,0,this.L(this.o),s);return h(i)}setHMACKey(t,n,r){if(!this.M)throw new Error(\"Variant does not support HMAC\");if(this.l)throw new Error(\"Cannot set MAC key after calling update\");const i=e(n,(r||{}).encoding||\"UTF8\",this.T);this.k(i(t))}k(t){const n=this.m>>>3,e=n/4-1;let r;if(1!==this.numRounds)throw new Error(\"Cannot set numRounds with MAC\");if(this.H)throw new Error(\"MAC key already set\");for(n<t.binLen/8&&(t.value=this.g(t.value,t.binLen,0,this.L(this.o),this.v));t.value.length<=e;)t.value.push(0);for(r=0;r<=e;r+=1)this.S[r]=909522486^t.value[r],this.p[r]=1549556828^t.value[r];this.R=this.U(this.S,this.R),this.A=this.m,this.H=!0}getHMAC(t,n){const e=w(n);return r(t,this.v,this.T,e)(this.Y())}Y(){let t;if(!this.H)throw new Error(\"Cannot call getHMAC without first setting MAC key\");const n=this.g(this.h.slice(),this.u,this.A,this.B(this.R),this.v);return t=this.U(this.p,this.L(this.o)),t=this.g(n,this.v,this.m,t,this.v),t}}function a(t,n){return t<<n|t>>>32-n}function l(t,n){return t>>>n|t<<32-n}function A(t,n){return t>>>n}function E(t,n,e){return t^n^e}function H(t,n,e){return t&n^~t&e}function S(t,n,e){return t&n^t&e^n&e}function b(t){return l(t,2)^l(t,13)^l(t,22)}function p(t,n){const e=(65535&t)+(65535&n);return(65535&(t>>>16)+(n>>>16)+(e>>>16))<<16|65535&e}function d(t,n,e,r){const i=(65535&t)+(65535&n)+(65535&e)+(65535&r);return(65535&(t>>>16)+(n>>>16)+(e>>>16)+(r>>>16)+(i>>>16))<<16|65535&i}function m(t,n,e,r,i){const s=(65535&t)+(65535&n)+(65535&e)+(65535&r)+(65535&i);return(65535&(t>>>16)+(n>>>16)+(e>>>16)+(r>>>16)+(i>>>16)+(s>>>16))<<16|65535&s}function C(t){return l(t,7)^l(t,18)^A(t,3)}function y(t){return l(t,6)^l(t,11)^l(t,25)}function R(t){return[1732584193,4023233417,2562383102,271733878,3285377520]}function U(t,n){let e,r,i,s,o,h,u;const w=[];for(e=n[0],r=n[1],i=n[2],s=n[3],o=n[4],u=0;u<80;u+=1)w[u]=u<16?t[u]:a(w[u-3]^w[u-8]^w[u-14]^w[u-16],1),h=u<20?m(a(e,5),H(r,i,s),o,1518500249,w[u]):u<40?m(a(e,5),E(r,i,s),o,1859775393,w[u]):u<60?m(a(e,5),S(r,i,s),o,2400959708,w[u]):m(a(e,5),E(r,i,s),o,3395469782,w[u]),o=s,s=i,i=a(r,30),r=e,e=h;return n[0]=p(e,n[0]),n[1]=p(r,n[1]),n[2]=p(i,n[2]),n[3]=p(s,n[3]),n[4]=p(o,n[4]),n}function v(t,n,e,r){let i;const s=15+(n+65>>>9<<4),o=n+e;for(;t.length<=s;)t.push(0);for(t[n>>>5]|=128<<24-n%32,t[s]=4294967295&o,t[s-1]=o/4294967296|0,i=0;i<t.length;i+=16)r=U(t.slice(i,i+16),r);return r}class K extends f{constructor(t,n,r){if(\"SHA-1\"!==t)throw new Error(h);super(t,n,r);const i=r||{};this.M=!0,this.F=this.Y,this.T=-1,this.C=e(this.t,this.i,this.T),this.U=U,this.B=function(t){return t.slice()},this.L=R,this.g=v,this.R=[1732584193,4023233417,2562383102,271733878,3285377520],this.m=512,this.v=160,this.K=!1,i.hmacKey&&this.k(c(\"hmacKey\",i.hmacKey,this.T))}}function T(t){let n;return n=\"SHA-224\"==t?s.slice():o.slice(),n}function F(t,n){let e,r,s,o,h,u,w,c,f,a,E;const R=[];for(e=n[0],r=n[1],s=n[2],o=n[3],h=n[4],u=n[5],w=n[6],c=n[7],E=0;E<64;E+=1)R[E]=E<16?t[E]:d(l(U=R[E-2],17)^l(U,19)^A(U,10),R[E-7],C(R[E-15]),R[E-16]),f=m(c,y(h),H(h,u,w),i[E],R[E]),a=p(b(e),S(e,r,s)),c=w,w=u,u=h,h=p(o,f),o=s,s=r,r=e,e=p(f,a);var U;return n[0]=p(e,n[0]),n[1]=p(r,n[1]),n[2]=p(s,n[2]),n[3]=p(o,n[3]),n[4]=p(h,n[4]),n[5]=p(u,n[5]),n[6]=p(w,n[6]),n[7]=p(c,n[7]),n}class g extends f{constructor(t,n,r){if(\"SHA-224\"!==t&&\"SHA-256\"!==t)throw new Error(h);super(t,n,r);const i=r||{};this.F=this.Y,this.M=!0,this.T=-1,this.C=e(this.t,this.i,this.T),this.U=F,this.B=function(t){return t.slice()},this.L=T,this.g=function(n,e,r,i){return function(t,n,e,r,i){let s,o;const h=15+(n+65>>>9<<4),u=n+e;for(;t.length<=h;)t.push(0);for(t[n>>>5]|=128<<24-n%32,t[h]=4294967295&u,t[h-1]=u/4294967296|0,s=0;s<t.length;s+=16)r=F(t.slice(s,s+16),r);return o=\"SHA-224\"===i?[r[0],r[1],r[2],r[3],r[4],r[5],r[6]]:r,o}(n,e,r,i,t)},this.R=T(t),this.m=512,this.v=\"SHA-224\"===t?224:256,this.K=!1,i.hmacKey&&this.k(c(\"hmacKey\",i.hmacKey,this.T))}}class B{constructor(t,n){this.N=t,this.I=n}}function L(t,n){let e;return n>32?(e=64-n,new B(t.I<<n|t.N>>>e,t.N<<n|t.I>>>e)):0!==n?(e=32-n,new B(t.N<<n|t.I>>>e,t.I<<n|t.N>>>e)):t}function M(t,n){let e;return n<32?(e=32-n,new B(t.N>>>n|t.I<<e,t.I>>>n|t.N<<e)):(e=64-n,new B(t.I>>>n|t.N<<e,t.N>>>n|t.I<<e))}function k(t,n){return new B(t.N>>>n,t.I>>>n|t.N<<32-n)}function Y(t,n,e){return new B(t.N&n.N^t.N&e.N^n.N&e.N,t.I&n.I^t.I&e.I^n.I&e.I)}function N(t){const n=M(t,28),e=M(t,34),r=M(t,39);return new B(n.N^e.N^r.N,n.I^e.I^r.I)}function I(t,n){let e,r;e=(65535&t.I)+(65535&n.I),r=(t.I>>>16)+(n.I>>>16)+(e>>>16);const i=(65535&r)<<16|65535&e;e=(65535&t.N)+(65535&n.N)+(r>>>16),r=(t.N>>>16)+(n.N>>>16)+(e>>>16);return new B((65535&r)<<16|65535&e,i)}function X(t,n,e,r){let i,s;i=(65535&t.I)+(65535&n.I)+(65535&e.I)+(65535&r.I),s=(t.I>>>16)+(n.I>>>16)+(e.I>>>16)+(r.I>>>16)+(i>>>16);const o=(65535&s)<<16|65535&i;i=(65535&t.N)+(65535&n.N)+(65535&e.N)+(65535&r.N)+(s>>>16),s=(t.N>>>16)+(n.N>>>16)+(e.N>>>16)+(r.N>>>16)+(i>>>16);return new B((65535&s)<<16|65535&i,o)}function z(t,n,e,r,i){let s,o;s=(65535&t.I)+(65535&n.I)+(65535&e.I)+(65535&r.I)+(65535&i.I),o=(t.I>>>16)+(n.I>>>16)+(e.I>>>16)+(r.I>>>16)+(i.I>>>16)+(s>>>16);const h=(65535&o)<<16|65535&s;s=(65535&t.N)+(65535&n.N)+(65535&e.N)+(65535&r.N)+(65535&i.N)+(o>>>16),o=(t.N>>>16)+(n.N>>>16)+(e.N>>>16)+(r.N>>>16)+(i.N>>>16)+(s>>>16);return new B((65535&o)<<16|65535&s,h)}function x(t,n){return new B(t.N^n.N,t.I^n.I)}function _(t){const n=M(t,19),e=M(t,61),r=k(t,6);return new B(n.N^e.N^r.N,n.I^e.I^r.I)}function O(t){const n=M(t,1),e=M(t,8),r=k(t,7);return new B(n.N^e.N^r.N,n.I^e.I^r.I)}function P(t){const n=M(t,14),e=M(t,18),r=M(t,41);return new B(n.N^e.N^r.N,n.I^e.I^r.I)}const V=[new B(i[0],3609767458),new B(i[1],602891725),new B(i[2],3964484399),new B(i[3],2173295548),new B(i[4],4081628472),new B(i[5],3053834265),new B(i[6],2937671579),new B(i[7],3664609560),new B(i[8],2734883394),new B(i[9],1164996542),new B(i[10],1323610764),new B(i[11],3590304994),new B(i[12],4068182383),new B(i[13],991336113),new B(i[14],633803317),new B(i[15],3479774868),new B(i[16],2666613458),new B(i[17],944711139),new B(i[18],2341262773),new B(i[19],2007800933),new B(i[20],1495990901),new B(i[21],1856431235),new B(i[22],3175218132),new B(i[23],2198950837),new B(i[24],3999719339),new B(i[25],766784016),new B(i[26],2566594879),new B(i[27],3203337956),new B(i[28],1034457026),new B(i[29],2466948901),new B(i[30],3758326383),new B(i[31],168717936),new B(i[32],1188179964),new B(i[33],1546045734),new B(i[34],1522805485),new B(i[35],2643833823),new B(i[36],2343527390),new B(i[37],1014477480),new B(i[38],1206759142),new B(i[39],344077627),new B(i[40],1290863460),new B(i[41],3158454273),new B(i[42],3505952657),new B(i[43],106217008),new B(i[44],3606008344),new B(i[45],1432725776),new B(i[46],1467031594),new B(i[47],851169720),new B(i[48],3100823752),new B(i[49],1363258195),new B(i[50],3750685593),new B(i[51],3785050280),new B(i[52],3318307427),new B(i[53],3812723403),new B(i[54],2003034995),new B(i[55],3602036899),new B(i[56],1575990012),new B(i[57],1125592928),new B(i[58],2716904306),new B(i[59],442776044),new B(i[60],593698344),new B(i[61],3733110249),new B(i[62],2999351573),new B(i[63],3815920427),new B(3391569614,3928383900),new B(3515267271,566280711),new B(3940187606,3454069534),new B(4118630271,4000239992),new B(116418474,1914138554),new B(174292421,2731055270),new B(289380356,3203993006),new B(460393269,320620315),new B(685471733,587496836),new B(852142971,1086792851),new B(1017036298,365543100),new B(1126000580,2618297676),new B(1288033470,3409855158),new B(1501505948,4234509866),new B(1607167915,987167468),new B(1816402316,1246189591)];function Z(t){return\"SHA-384\"===t?[new B(3418070365,s[0]),new B(1654270250,s[1]),new B(2438529370,s[2]),new B(355462360,s[3]),new B(1731405415,s[4]),new B(41048885895,s[5]),new B(3675008525,s[6]),new B(1203062813,s[7])]:[new B(o[0],4089235720),new B(o[1],2227873595),new B(o[2],4271175723),new B(o[3],1595750129),new B(o[4],2917565137),new B(o[5],725511199),new B(o[6],4215389547),new B(o[7],327033209)]}function j(t,n){let e,r,i,s,o,h,u,w,c,f,a,l;const A=[];for(e=n[0],r=n[1],i=n[2],s=n[3],o=n[4],h=n[5],u=n[6],w=n[7],a=0;a<80;a+=1)a<16?(l=2*a,A[a]=new B(t[l],t[l+1])):A[a]=X(_(A[a-2]),A[a-7],O(A[a-15]),A[a-16]),c=z(w,P(o),(H=h,S=u,new B((E=o).N&H.N^~E.N&S.N,E.I&H.I^~E.I&S.I)),V[a],A[a]),f=I(N(e),Y(e,r,i)),w=u,u=h,h=o,o=I(s,c),s=i,i=r,r=e,e=I(c,f);var E,H,S;return n[0]=I(e,n[0]),n[1]=I(r,n[1]),n[2]=I(i,n[2]),n[3]=I(s,n[3]),n[4]=I(o,n[4]),n[5]=I(h,n[5]),n[6]=I(u,n[6]),n[7]=I(w,n[7]),n}class q extends f{constructor(t,n,r){if(\"SHA-384\"!==t&&\"SHA-512\"!==t)throw new Error(h);super(t,n,r);const i=r||{};this.F=this.Y,this.M=!0,this.T=-1,this.C=e(this.t,this.i,this.T),this.U=j,this.B=function(t){return t.slice()},this.L=Z,this.g=function(n,e,r,i){return function(t,n,e,r,i){let s,o;const h=31+(n+129>>>10<<5),u=n+e;for(;t.length<=h;)t.push(0);for(t[n>>>5]|=128<<24-n%32,t[h]=4294967295&u,t[h-1]=u/4294967296|0,s=0;s<t.length;s+=32)r=j(t.slice(s,s+32),r);return o=\"SHA-384\"===i?[r[0].N,r[0].I,r[1].N,r[1].I,r[2].N,r[2].I,r[3].N,r[3].I,r[4].N,r[4].I,r[5].N,r[5].I]:[r[0].N,r[0].I,r[1].N,r[1].I,r[2].N,r[2].I,r[3].N,r[3].I,r[4].N,r[4].I,r[5].N,r[5].I,r[6].N,r[6].I,r[7].N,r[7].I],o}(n,e,r,i,t)},this.R=Z(t),this.m=1024,this.v=\"SHA-384\"===t?384:512,this.K=!1,i.hmacKey&&this.k(c(\"hmacKey\",i.hmacKey,this.T))}}const D=[new B(0,1),new B(0,32898),new B(2147483648,32906),new B(2147483648,2147516416),new B(0,32907),new B(0,2147483649),new B(2147483648,2147516545),new B(2147483648,32777),new B(0,138),new B(0,136),new B(0,2147516425),new B(0,2147483658),new B(0,2147516555),new B(2147483648,139),new B(2147483648,32905),new B(2147483648,32771),new B(2147483648,32770),new B(2147483648,128),new B(0,32778),new B(2147483648,2147483658),new B(2147483648,2147516545),new B(2147483648,32896),new B(0,2147483649),new B(2147483648,2147516424)],G=[[0,36,3,41,18],[1,44,10,45,2],[62,6,43,15,61],[28,55,25,21,56],[27,20,39,8,14]];function J(t){let n;const e=[];for(n=0;n<5;n+=1)e[n]=[new B(0,0),new B(0,0),new B(0,0),new B(0,0),new B(0,0)];return e}function Q(t){let n;const e=[];for(n=0;n<5;n+=1)e[n]=t[n].slice();return e}function W(t,n){let e,r,i,s;const o=[],h=[];if(null!==t)for(r=0;r<t.length;r+=2)n[(r>>>1)%5][(r>>>1)/5|0]=x(n[(r>>>1)%5][(r>>>1)/5|0],new B(t[r+1],t[r]));for(e=0;e<24;e+=1){for(s=J(),r=0;r<5;r+=1)o[r]=(u=n[r][0],w=n[r][1],c=n[r][2],f=n[r][3],a=n[r][4],new B(u.N^w.N^c.N^f.N^a.N,u.I^w.I^c.I^f.I^a.I));for(r=0;r<5;r+=1)h[r]=x(o[(r+4)%5],L(o[(r+1)%5],1));for(r=0;r<5;r+=1)for(i=0;i<5;i+=1)n[r][i]=x(n[r][i],h[r]);for(r=0;r<5;r+=1)for(i=0;i<5;i+=1)s[i][(2*r+3*i)%5]=L(n[r][i],G[r][i]);for(r=0;r<5;r+=1)for(i=0;i<5;i+=1)n[r][i]=x(s[r][i],new B(~s[(r+1)%5][i].N&s[(r+2)%5][i].N,~s[(r+1)%5][i].I&s[(r+2)%5][i].I));n[0][0]=x(n[0][0],D[e])}var u,w,c,f,a;return n}function $(t){let n,e,r=0;const i=[0,0],s=[4294967295&t,t/4294967296&2097151];for(n=6;n>=0;n--)e=s[n>>2]>>>8*n&255,0===e&&0===r||(i[r+1>>2]|=e<<8*(r+1),r+=1);return r=0!==r?r:1,i[0]|=r,{value:r+1>4?i:[i[0]],binLen:8+8*r}}function tt(t){return u($(t.binLen),t)}function nt(t,n){let e,r=$(n);r=u(r,t);const i=n>>>2,s=(i-r.value.length%i)%i;for(e=0;e<s;e++)r.value.push(0);return r.value}class et extends f{constructor(t,n,r){let i=6,s=0;super(t,n,r);const o=r||{};if(1!==this.numRounds){if(o.kmacKey||o.hmacKey)throw new Error(\"Cannot set numRounds with MAC\");if(\"CSHAKE128\"===this.o||\"CSHAKE256\"===this.o)throw new Error(\"Cannot set numRounds for CSHAKE variants\")}switch(this.T=1,this.C=e(this.t,this.i,this.T),this.U=W,this.B=Q,this.L=J,this.R=J(),this.K=!1,t){case\"SHA3-224\":this.m=s=1152,this.v=224,this.M=!0,this.F=this.Y;break;case\"SHA3-256\":this.m=s=1088,this.v=256,this.M=!0,this.F=this.Y;break;case\"SHA3-384\":this.m=s=832,this.v=384,this.M=!0,this.F=this.Y;break;case\"SHA3-512\":this.m=s=576,this.v=512,this.M=!0,this.F=this.Y;break;case\"SHAKE128\":i=31,this.m=s=1344,this.v=-1,this.K=!0,this.M=!1,this.F=null;break;case\"SHAKE256\":i=31,this.m=s=1088,this.v=-1,this.K=!0,this.M=!1,this.F=null;break;case\"KMAC128\":i=4,this.m=s=1344,this.X(r),this.v=-1,this.K=!0,this.M=!1,this.F=this._;break;case\"KMAC256\":i=4,this.m=s=1088,this.X(r),this.v=-1,this.K=!0,this.M=!1,this.F=this._;break;case\"CSHAKE128\":this.m=s=1344,i=this.O(r),this.v=-1,this.K=!0,this.M=!1,this.F=null;break;case\"CSHAKE256\":this.m=s=1088,i=this.O(r),this.v=-1,this.K=!0,this.M=!1,this.F=null;break;default:throw new Error(h)}this.g=function(t,n,e,r,o){return function(t,n,e,r,i,s,o){let h,u,w=0;const c=[],f=i>>>5,a=n>>>5;for(h=0;h<a&&n>=i;h+=f)r=W(t.slice(h,h+f),r),n-=i;for(t=t.slice(h),n%=i;t.length<f;)t.push(0);for(h=n>>>3,t[h>>2]^=s<<h%4*8,t[f-1]^=2147483648,r=W(t,r);32*c.length<o&&(u=r[w%5][w/5|0],c.push(u.I),!(32*c.length>=o));)c.push(u.N),w+=1,0==64*w%i&&(W(null,r),w=0);return c}(t,n,0,r,s,i,o)},o.hmacKey&&this.k(c(\"hmacKey\",o.hmacKey,this.T))}O(t,n){const e=function(t){const n=t||{};return{funcName:c(\"funcName\",n.funcName,1,{value:[],binLen:0}),customization:c(\"Customization\",n.customization,1,{value:[],binLen:0})}}(t||{});n&&(e.funcName=n);const r=u(tt(e.funcName),tt(e.customization));if(0!==e.customization.binLen||0!==e.funcName.binLen){const t=nt(r,this.m>>>3);for(let n=0;n<t.length;n+=this.m>>>5)this.R=this.U(t.slice(n,n+(this.m>>>5)),this.R),this.A+=this.m;return 4}return 31}X(t){const n=function(t){const n=t||{};return{kmacKey:c(\"kmacKey\",n.kmacKey,1),funcName:{value:[1128353099],binLen:32},customization:c(\"Customization\",n.customization,1,{value:[],binLen:0})}}(t||{});this.O(t,n.funcName);const e=nt(tt(n.kmacKey),this.m>>>3);for(let t=0;t<e.length;t+=this.m>>>5)this.R=this.U(e.slice(t,t+(this.m>>>5)),this.R),this.A+=this.m;this.H=!0}_(t){const n=u({value:this.h.slice(),binLen:this.u},function(t){let n,e,r=0;const i=[0,0],s=[4294967295&t,t/4294967296&2097151];for(n=6;n>=0;n--)e=s[n>>2]>>>8*n&255,0===e&&0===r||(i[r>>2]|=e<<8*r,r+=1);return r=0!==r?r:1,i[r>>2]|=r<<8*r,{value:r+1>4?i:[i[0]],binLen:8+8*r}}(t.outputLen));return this.g(n.value,n.binLen,this.A,this.B(this.R),t.outputLen)}}class rt{constructor(t,n,e){if(\"SHA-1\"==t)this.P=new K(t,n,e);else if(\"SHA-224\"==t||\"SHA-256\"==t)this.P=new g(t,n,e);else if(\"SHA-384\"==t||\"SHA-512\"==t)this.P=new q(t,n,e);else{if(\"SHA3-224\"!=t&&\"SHA3-256\"!=t&&\"SHA3-384\"!=t&&\"SHA3-512\"!=t&&\"SHAKE128\"!=t&&\"SHAKE256\"!=t&&\"CSHAKE128\"!=t&&\"CSHAKE256\"!=t&&\"KMAC128\"!=t&&\"KMAC256\"!=t)throw new Error(h);this.P=new et(t,n,e)}}update(t){return this.P.update(t),this}getHash(t,n){return this.P.getHash(t,n)}setHMACKey(t,n,e){this.P.setHMACKey(t,n,e)}getHMAC(t,n){return this.P.getHMAC(t,n)}}export{rt as default};\n//# sourceMappingURL=sha.mjs.map\n","/**\n * \"globalThis\" ponyfill.\n * @see [A horrifying globalThis polyfill in universal JavaScript](https://mathiasbynens.be/notes/globalthis)\n * @type {Object.<string, *>}\n */\nconst globalScope = (() => {\n  // @ts-ignore\n  if (typeof globalThis === \"object\") return globalThis;\n  else {\n    Object.defineProperty(Object.prototype, \"__GLOBALTHIS__\", {\n      get() {\n        return this;\n      },\n      configurable: true,\n    });\n    try {\n      // @ts-ignore\n      // eslint-disable-next-line no-undef\n      if (typeof __GLOBALTHIS__ !== \"undefined\") return __GLOBALTHIS__;\n    } finally {\n      // @ts-ignore\n      delete Object.prototype.__GLOBALTHIS__;\n    }\n  }\n\n  // Still unable to determine \"globalThis\", fall back to a naive method.\n  if (typeof self !== \"undefined\") return self;\n  else if (typeof window !== \"undefined\") return window;\n  else if (typeof global !== \"undefined\") return global;\n\n  return undefined;\n})();\n\nexport { globalScope };\n","import { isNode } from \"../is-node.js\";\n\n/**\n * Node.js crypto module.\n * @type {Object.<string, *>|undefined}\n */\nconst nodeCrypto = isNode\n  ? // A dynamically generated name is used to prevent some bundlers from including the module.\n    require(Array.from(\"otpyrc\").reverse().join(\"\"))\n  : undefined;\n\nexport { nodeCrypto };\n","import { globalScope } from \"./global-scope.js\";\n\n/**\n * Detect if running in Node.js.\n * @type {boolean}\n */\nconst isNode =\n  Object.prototype.toString.call(globalScope.process) === \"[object process]\";\n\nexport { isNode };\n","import jsSHA from \"jssha\";\n\nimport { nodeCrypto } from \"./node-crypto.js\";\nimport { globalScope } from \"../global-scope.js\";\n\n/**\n * OpenSSL to jsSHA algorithms.\n * @type {Object.<string, string>}\n */\nconst OPENSSL_TO_JSSHA_ALGO = {\n  SHA1: \"SHA-1\",\n  SHA224: \"SHA-224\",\n  SHA256: \"SHA-256\",\n  SHA384: \"SHA-384\",\n  SHA512: \"SHA-512\",\n  \"SHA3-224\": \"SHA3-224\",\n  \"SHA3-256\": \"SHA3-256\",\n  \"SHA3-384\": \"SHA3-384\",\n  \"SHA3-512\": \"SHA3-512\",\n};\n\n/**\n * Calculates an HMAC digest.\n * In Node.js, the command \"openssl list -digest-algorithms\" displays the available digest algorithms.\n * @param {string} algorithm Algorithm.\n * @param {ArrayBuffer} key Key.\n * @param {ArrayBuffer} message Message.\n * @returns {ArrayBuffer} Digest.\n */\nconst hmacDigest = (algorithm, key, message) => {\n  if (nodeCrypto) {\n    const hmac = nodeCrypto.createHmac(algorithm, globalScope.Buffer.from(key));\n    hmac.update(globalScope.Buffer.from(message));\n    return hmac.digest().buffer;\n  } else {\n    const variant = OPENSSL_TO_JSSHA_ALGO[algorithm.toUpperCase()];\n    if (typeof variant === \"undefined\") {\n      throw new TypeError(\"Unknown hash function\");\n    }\n    // @ts-ignore\n    const hmac = new jsSHA(variant, \"ARRAYBUFFER\");\n    hmac.setHMACKey(key, \"ARRAYBUFFER\");\n    hmac.update(message);\n    return hmac.getHMAC(\"ARRAYBUFFER\");\n  }\n};\n\nexport { hmacDigest };\n","/**\n * RFC 4648 base32 alphabet without pad.\n * @type {string}\n */\nconst ALPHABET = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\";\n\n/**\n * Converts a base32 string to an ArrayBuffer (RFC 4648).\n * @see [LinusU/base32-decode](https://github.com/LinusU/base32-decode)\n * @param {string} str Base32 string.\n * @returns {ArrayBuffer} ArrayBuffer.\n */\nconst base32ToBuf = (str) => {\n  // Canonicalize to all upper case and remove padding if it exists.\n  let end = str.length;\n  while (str[end - 1] === \"=\") --end;\n  const cstr = (end < str.length ? str.substring(0, end) : str).toUpperCase();\n\n  const buf = new ArrayBuffer(((cstr.length * 5) / 8) | 0);\n  const arr = new Uint8Array(buf);\n  let bits = 0;\n  let value = 0;\n  let index = 0;\n\n  for (let i = 0; i < cstr.length; i++) {\n    const idx = ALPHABET.indexOf(cstr[i]);\n    if (idx === -1) throw new TypeError(`Invalid character found: ${cstr[i]}`);\n\n    value = (value << 5) | idx;\n    bits += 5;\n\n    if (bits >= 8) {\n      bits -= 8;\n      arr[index++] = value >>> bits;\n    }\n  }\n\n  return buf;\n};\n\n/**\n * Converts an ArrayBuffer to a base32 string (RFC 4648).\n * @see [LinusU/base32-encode](https://github.com/LinusU/base32-encode)\n * @param {ArrayBuffer} buf ArrayBuffer.\n * @returns {string} Base32 string.\n */\nconst base32FromBuf = (buf) => {\n  const arr = new Uint8Array(buf);\n  let bits = 0;\n  let value = 0;\n  let str = \"\";\n\n  for (let i = 0; i < arr.length; i++) {\n    value = (value << 8) | arr[i];\n    bits += 8;\n\n    while (bits >= 5) {\n      str += ALPHABET[(value >>> (bits - 5)) & 31];\n      bits -= 5;\n    }\n  }\n\n  if (bits > 0) {\n    str += ALPHABET[(value << (5 - bits)) & 31];\n  }\n\n  return str;\n};\n\nexport { base32ToBuf, base32FromBuf };\n","/**\n * Converts a hexadecimal string to an ArrayBuffer.\n * @param {string} str Hexadecimal string.\n * @returns {ArrayBuffer} ArrayBuffer.\n */\nconst hexToBuf = (str) => {\n  const buf = new ArrayBuffer(str.length / 2);\n  const arr = new Uint8Array(buf);\n\n  for (let i = 0; i < str.length; i += 2) {\n    arr[i / 2] = parseInt(str.substr(i, 2), 16);\n  }\n\n  return buf;\n};\n\n/**\n * Converts an ArrayBuffer to a hexadecimal string.\n * @param {ArrayBuffer} buf ArrayBuffer.\n * @returns {string} Hexadecimal string.\n */\nconst hexFromBuf = (buf) => {\n  const arr = new Uint8Array(buf);\n  let str = \"\";\n\n  for (let i = 0; i < arr.length; i++) {\n    const hex = arr[i].toString(16);\n    if (hex.length === 1) str += \"0\";\n    str += hex;\n  }\n\n  return str.toUpperCase();\n};\n\nexport { hexToBuf, hexFromBuf };\n","/**\n * Converts a Latin-1 string to an ArrayBuffer.\n * @param {string} str Latin-1 string.\n * @returns {ArrayBuffer} ArrayBuffer.\n */\nconst latin1ToBuf = (str) => {\n  const buf = new ArrayBuffer(str.length);\n  const arr = new Uint8Array(buf);\n\n  for (let i = 0; i < str.length; i++) {\n    arr[i] = str.charCodeAt(i) & 0xff;\n  }\n\n  return buf;\n};\n\n/**\n * Converts an ArrayBuffer to a Latin-1 string.\n * @param {ArrayBuffer} buf ArrayBuffer.\n * @returns {string} Latin-1 string.\n */\nconst latin1FromBuf = (buf) => {\n  const arr = new Uint8Array(buf);\n  let str = \"\";\n\n  for (let i = 0; i < arr.length; i++) {\n    str += String.fromCharCode(arr[i]);\n  }\n\n  return str;\n};\n\nexport { latin1ToBuf, latin1FromBuf };\n","import { globalScope } from \"../global-scope.js\";\n\n/**\n * TextEncoder instance.\n * @type {TextEncoder|null}\n */\nconst ENCODER = globalScope.TextEncoder\n  ? new globalScope.TextEncoder(\"utf-8\")\n  : null;\n\n/**\n * TextDecoder instance.\n * @type {TextDecoder|null}\n */\nconst DECODER = globalScope.TextDecoder\n  ? new globalScope.TextDecoder(\"utf-8\")\n  : null;\n\n/**\n * Converts an UTF-8 string to an ArrayBuffer.\n * @param {string} str String.\n * @returns {ArrayBuffer} ArrayBuffer.\n */\nconst utf8ToBuf = (str) => {\n  if (!ENCODER) {\n    throw new Error(\"Encoding API not available\");\n  }\n\n  return ENCODER.encode(str).buffer;\n};\n\n/**\n * Converts an ArrayBuffer to an UTF-8 string.\n * @param {ArrayBuffer} buf ArrayBuffer.\n * @returns {string} String.\n */\nconst utf8FromBuf = (buf) => {\n  if (!DECODER) {\n    throw new Error(\"Encoding API not available\");\n  }\n\n  return DECODER.decode(buf);\n};\n\nexport { utf8ToBuf, utf8FromBuf };\n","import { base32ToBuf, base32FromBuf } from \"./utils/encoding/base32.js\";\nimport { hexToBuf, hexFromBuf } from \"./utils/encoding/hex.js\";\nimport { latin1ToBuf, latin1FromBuf } from \"./utils/encoding/latin1.js\";\nimport { utf8ToBuf, utf8FromBuf } from \"./utils/encoding/utf8.js\";\nimport { randomBytes } from \"./utils/crypto/random-bytes.js\";\n\n/**\n * OTP secret key.\n */\nclass Secret {\n  /**\n   * Creates a secret key object.\n   * @param {Object} [config] Configuration options.\n   * @param {ArrayBuffer} [config.buffer=randomBytes] Secret key.\n   * @param {number} [config.size=20] Number of random bytes to generate, ignored if 'buffer' is provided.\n   */\n  constructor({ buffer, size = 20 } = {}) {\n    /**\n     * Secret key.\n     * @type {ArrayBuffer}\n     */\n    this.buffer = typeof buffer === \"undefined\" ? randomBytes(size) : buffer;\n  }\n\n  /**\n   * Converts a Latin-1 string to a Secret object.\n   * @param {string} str Latin-1 string.\n   * @returns {Secret} Secret object.\n   */\n  static fromLatin1(str) {\n    return new Secret({ buffer: latin1ToBuf(str) });\n  }\n\n  /**\n   * Converts an UTF-8 string to a Secret object.\n   * @param {string} str UTF-8 string.\n   * @returns {Secret} Secret object.\n   */\n  static fromUTF8(str) {\n    return new Secret({ buffer: utf8ToBuf(str) });\n  }\n\n  /**\n   * Converts a base32 string to a Secret object.\n   * @param {string} str Base32 string.\n   * @returns {Secret} Secret object.\n   */\n  static fromBase32(str) {\n    return new Secret({ buffer: base32ToBuf(str) });\n  }\n\n  /**\n   * Converts a hexadecimal string to a Secret object.\n   * @param {string} str Hexadecimal string.\n   * @returns {Secret} Secret object.\n   */\n  static fromHex(str) {\n    return new Secret({ buffer: hexToBuf(str) });\n  }\n\n  /**\n   * Latin-1 string representation of secret key.\n   * @type {string}\n   */\n  get latin1() {\n    Object.defineProperty(this, \"latin1\", {\n      enumerable: true,\n      value: latin1FromBuf(this.buffer),\n    });\n\n    return this.latin1;\n  }\n\n  /**\n   * UTF-8 string representation of secret key.\n   * @type {string}\n   */\n  get utf8() {\n    Object.defineProperty(this, \"utf8\", {\n      enumerable: true,\n      value: utf8FromBuf(this.buffer),\n    });\n\n    return this.utf8;\n  }\n\n  /**\n   * Base32 string representation of secret key.\n   * @type {string}\n   */\n  get base32() {\n    Object.defineProperty(this, \"base32\", {\n      enumerable: true,\n      value: base32FromBuf(this.buffer),\n    });\n\n    return this.base32;\n  }\n\n  /**\n   * Hexadecimal string representation of secret key.\n   * @type {string}\n   */\n  get hex() {\n    Object.defineProperty(this, \"hex\", {\n      enumerable: true,\n      value: hexFromBuf(this.buffer),\n    });\n\n    return this.hex;\n  }\n}\n\nexport { Secret };\n","import { nodeCrypto } from \"./node-crypto.js\";\nimport { globalScope } from \"../global-scope.js\";\n\n/**\n * Returns random bytes.\n * @param {number} size Size.\n * @returns {ArrayBuffer} Random bytes.\n */\nconst randomBytes = (size) => {\n  if (nodeCrypto) {\n    return nodeCrypto.randomBytes(size).buffer;\n  } else {\n    if (!globalScope.crypto || !globalScope.crypto.getRandomValues) {\n      throw new Error(\"Cryptography API not available\");\n    }\n    return globalScope.crypto.getRandomValues(new Uint8Array(size)).buffer;\n  }\n};\n\nexport { randomBytes };\n","import { nodeCrypto } from \"./node-crypto.js\";\nimport { globalScope } from \"../global-scope.js\";\n\n/**\n * Returns true if a is equal to b, without leaking timing information that would allow an attacker to guess one of the values.\n * @param {string} a String a.\n * @param {string} b String b.\n * @returns {boolean} Equality result.\n */\nconst timingSafeEqual = (a, b) => {\n  if (nodeCrypto) {\n    return nodeCrypto.timingSafeEqual(\n      globalScope.Buffer.from(a),\n      globalScope.Buffer.from(b)\n    );\n  } else {\n    if (a.length !== b.length) {\n      throw new TypeError(\"Input strings must have the same length\");\n    }\n    let i = -1;\n    let out = 0;\n    while (++i < a.length) {\n      out |= a.charCodeAt(i) ^ b.charCodeAt(i);\n    }\n    return out === 0;\n  }\n};\n\nexport { timingSafeEqual };\n","import { uintToBuf } from \"./utils/encoding/uint.js\";\nimport { hmacDigest } from \"./utils/crypto/hmac-digest.js\";\nimport { pad } from \"./utils/pad.js\";\nimport { Secret } from \"./secret.js\";\nimport { timingSafeEqual } from \"./utils/crypto/timing-safe-equal.js\";\n\n/**\n * HOTP: An HMAC-based One-time Password Algorithm.\n * @see [RFC 4226](https://tools.ietf.org/html/rfc4226)\n */\nclass HOTP {\n  /**\n   * Default configuration.\n   * @type {{\n   *   issuer: string,\n   *   label: string,\n   *   algorithm: string,\n   *   digits: number,\n   *   counter: number\n   *   window: number\n   * }}\n   */\n  static get defaults() {\n    return {\n      issuer: \"\",\n      label: \"OTPAuth\",\n      algorithm: \"SHA1\",\n      digits: 6,\n      counter: 0,\n      window: 1,\n    };\n  }\n\n  /**\n   * Creates an HOTP object.\n   * @param {Object} [config] Configuration options.\n   * @param {string} [config.issuer=''] Account provider.\n   * @param {string} [config.label='OTPAuth'] Account label.\n   * @param {Secret|string} [config.secret=Secret] Secret key.\n   * @param {string} [config.algorithm='SHA1'] HMAC hashing algorithm.\n   * @param {number} [config.digits=6] Token length.\n   * @param {number} [config.counter=0] Initial counter value.\n   */\n  constructor({\n    issuer = HOTP.defaults.issuer,\n    label = HOTP.defaults.label,\n    secret = new Secret(),\n    algorithm = HOTP.defaults.algorithm,\n    digits = HOTP.defaults.digits,\n    counter = HOTP.defaults.counter,\n  } = {}) {\n    /**\n     * Account provider.\n     * @type {string}\n     */\n    this.issuer = issuer;\n    /**\n     * Account label.\n     * @type {string}\n     */\n    this.label = label;\n    /**\n     * Secret key.\n     * @type {Secret}\n     */\n    this.secret =\n      typeof secret === \"string\" ? Secret.fromBase32(secret) : secret;\n    /**\n     * HMAC hashing algorithm.\n     * @type {string}\n     */\n    this.algorithm = algorithm.toUpperCase();\n    /**\n     * Token length.\n     * @type {number}\n     */\n    this.digits = digits;\n    /**\n     * Initial counter value.\n     * @type {number}\n     */\n    this.counter = counter;\n  }\n\n  /**\n   * Generates an HOTP token.\n   * @param {Object} config Configuration options.\n   * @param {Secret} config.secret Secret key.\n   * @param {string} [config.algorithm='SHA1'] HMAC hashing algorithm.\n   * @param {number} [config.digits=6] Token length.\n   * @param {number} [config.counter=0] Counter value.\n   * @returns {string} Token.\n   */\n  static generate({\n    secret,\n    algorithm = HOTP.defaults.algorithm,\n    digits = HOTP.defaults.digits,\n    counter = HOTP.defaults.counter,\n  }) {\n    const digest = new Uint8Array(\n      hmacDigest(algorithm, secret.buffer, uintToBuf(counter))\n    );\n    const offset = digest[digest.byteLength - 1] & 15;\n    const otp =\n      (((digest[offset] & 127) << 24) |\n        ((digest[offset + 1] & 255) << 16) |\n        ((digest[offset + 2] & 255) << 8) |\n        (digest[offset + 3] & 255)) %\n      10 ** digits;\n\n    return pad(otp, digits);\n  }\n\n  /**\n   * Generates an HOTP token.\n   * @param {Object} [config] Configuration options.\n   * @param {number} [config.counter=this.counter++] Counter value.\n   * @returns {string} Token.\n   */\n  generate({ counter = this.counter++ } = {}) {\n    return HOTP.generate({\n      secret: this.secret,\n      algorithm: this.algorithm,\n      digits: this.digits,\n      counter,\n    });\n  }\n\n  /**\n   * Validates an HOTP token.\n   * @param {Object} config Configuration options.\n   * @param {string} config.token Token value.\n   * @param {Secret} config.secret Secret key.\n   * @param {string} [config.algorithm='SHA1'] HMAC hashing algorithm.\n   * @param {number} config.digits Token length.\n   * @param {number} [config.counter=0] Counter value.\n   * @param {number} [config.window=1] Window of counter values to test.\n   * @returns {number|null} Token delta or null if it is not found in the search window, in which case it should be considered invalid.\n   */\n  static validate({\n    token,\n    secret,\n    algorithm,\n    digits,\n    counter = HOTP.defaults.counter,\n    window = HOTP.defaults.window,\n  }) {\n    // Return early if the token length does not match the digit number.\n    if (token.length !== digits) return null;\n\n    let delta = null;\n\n    for (let i = counter - window; i <= counter + window; ++i) {\n      const generatedToken = HOTP.generate({\n        secret,\n        algorithm,\n        digits,\n        counter: i,\n      });\n\n      if (timingSafeEqual(token, generatedToken)) {\n        delta = i - counter;\n      }\n    }\n\n    return delta;\n  }\n\n  /**\n   * Validates an HOTP token.\n   * @param {Object} config Configuration options.\n   * @param {string} config.token Token value.\n   * @param {number} [config.counter=this.counter] Counter value.\n   * @param {number} [config.window=1] Window of counter values to test.\n   * @returns {number|null} Token delta or null if it is not found in the search window, in which case it should be considered invalid.\n   */\n  validate({ token, counter = this.counter, window }) {\n    return HOTP.validate({\n      token,\n      secret: this.secret,\n      algorithm: this.algorithm,\n      digits: this.digits,\n      counter,\n      window,\n    });\n  }\n\n  /**\n   * Returns a Google Authenticator key URI.\n   * @returns {string} URI.\n   */\n  toString() {\n    const e = encodeURIComponent;\n    return (\n      \"otpauth://hotp/\" +\n      `${\n        this.issuer.length > 0\n          ? `${e(this.issuer)}:${e(this.label)}?issuer=${e(this.issuer)}&`\n          : `${e(this.label)}?`\n      }` +\n      `secret=${e(this.secret.base32)}&` +\n      `algorithm=${e(this.algorithm)}&` +\n      `digits=${e(this.digits)}&` +\n      `counter=${e(this.counter)}`\n    );\n  }\n}\n\nexport { HOTP };\n","/**\n * Pads a number with leading zeros.\n * @param {number|string} num Number.\n * @param {number} digits Digits.\n * @returns {string} Padded number.\n */\nconst pad = (num, digits) => {\n  let prefix = \"\";\n  let repeat = digits - String(num).length;\n  while (repeat-- > 0) prefix += \"0\";\n  return `${prefix}${num}`;\n};\n\nexport { pad };\n","import { HOTP } from \"./hotp.js\";\nimport { Secret } from \"./secret.js\";\n\n/**\n * TOTP: Time-Based One-Time Password Algorithm.\n * @see [RFC 6238](https://tools.ietf.org/html/rfc6238)\n */\nclass TOTP {\n  /**\n   * Default configuration.\n   * @type {{\n   *   issuer: string,\n   *   label: string,\n   *   algorithm: string,\n   *   digits: number,\n   *   period: number\n   *   window: number\n   * }}\n   */\n  static get defaults() {\n    return {\n      issuer: \"\",\n      label: \"OTPAuth\",\n      algorithm: \"SHA1\",\n      digits: 6,\n      period: 30,\n      window: 1,\n    };\n  }\n\n  /**\n   * Creates a TOTP object.\n   * @param {Object} [config] Configuration options.\n   * @param {string} [config.issuer=''] Account provider.\n   * @param {string} [config.label='OTPAuth'] Account label.\n   * @param {Secret|string} [config.secret=Secret] Secret key.\n   * @param {string} [config.algorithm='SHA1'] HMAC hashing algorithm.\n   * @param {number} [config.digits=6] Token length.\n   * @param {number} [config.period=30] Token time-step duration.\n   */\n  constructor({\n    issuer = TOTP.defaults.issuer,\n    label = TOTP.defaults.label,\n    secret = new Secret(),\n    algorithm = TOTP.defaults.algorithm,\n    digits = TOTP.defaults.digits,\n    period = TOTP.defaults.period,\n  } = {}) {\n    /**\n     * Account provider.\n     * @type {string}\n     */\n    this.issuer = issuer;\n    /**\n     * Account label.\n     * @type {string}\n     */\n    this.label = label;\n    /**\n     * Secret key.\n     * @type {Secret}\n     */\n    this.secret =\n      typeof secret === \"string\" ? Secret.fromBase32(secret) : secret;\n    /**\n     * HMAC hashing algorithm.\n     * @type {string}\n     */\n    this.algorithm = algorithm.toUpperCase();\n    /**\n     * Token length.\n     * @type {number}\n     */\n    this.digits = digits;\n    /**\n     * Token time-step duration.\n     * @type {number}\n     */\n    this.period = period;\n  }\n\n  /**\n   * Generates a TOTP token.\n   * @param {Object} config Configuration options.\n   * @param {Secret} config.secret Secret key.\n   * @param {string} [config.algorithm='SHA1'] HMAC hashing algorithm.\n   * @param {number} [config.digits=6] Token length.\n   * @param {number} [config.period=30] Token time-step duration.\n   * @param {number} [config.timestamp=Date.now] Timestamp value in milliseconds.\n   * @returns {string} Token.\n   */\n  static generate({\n    secret,\n    algorithm,\n    digits,\n    period = TOTP.defaults.period,\n    timestamp = Date.now(),\n  }) {\n    return HOTP.generate({\n      secret,\n      algorithm,\n      digits,\n      counter: Math.floor(timestamp / 1000 / period),\n    });\n  }\n\n  /**\n   * Generates a TOTP token.\n   * @param {Object} [config] Configuration options.\n   * @param {number} [config.timestamp=Date.now] Timestamp value in milliseconds.\n   * @returns {string} Token.\n   */\n  generate({ timestamp = Date.now() } = {}) {\n    return TOTP.generate({\n      secret: this.secret,\n      algorithm: this.algorithm,\n      digits: this.digits,\n      period: this.period,\n      timestamp,\n    });\n  }\n\n  /**\n   * Validates a TOTP token.\n   * @param {Object} config Configuration options.\n   * @param {string} config.token Token value.\n   * @param {Secret} config.secret Secret key.\n   * @param {string} [config.algorithm='SHA1'] HMAC hashing algorithm.\n   * @param {number} config.digits Token length.\n   * @param {number} [config.period=30] Token time-step duration.\n   * @param {number} [config.timestamp=Date.now] Timestamp value in milliseconds.\n   * @param {number} [config.window=1] Window of counter values to test.\n   * @returns {number|null} Token delta or null if it is not found in the search window, in which case it should be considered invalid.\n   */\n  static validate({\n    token,\n    secret,\n    algorithm,\n    digits,\n    period = TOTP.defaults.period,\n    timestamp = Date.now(),\n    window,\n  }) {\n    return HOTP.validate({\n      token,\n      secret,\n      algorithm,\n      digits,\n      counter: Math.floor(timestamp / 1000 / period),\n      window,\n    });\n  }\n\n  /**\n   * Validates a TOTP token.\n   * @param {Object} config Configuration options.\n   * @param {string} config.token Token value.\n   * @param {number} [config.timestamp=Date.now] Timestamp value in milliseconds.\n   * @param {number} [config.window=1] Window of counter values to test.\n   * @returns {number|null} Token delta or null if it is not found in the search window, in which case it should be considered invalid.\n   */\n  validate({ token, timestamp, window }) {\n    return TOTP.validate({\n      token,\n      secret: this.secret,\n      algorithm: this.algorithm,\n      digits: this.digits,\n      period: this.period,\n      timestamp,\n      window,\n    });\n  }\n\n  /**\n   * Returns a Google Authenticator key URI.\n   * @returns {string} URI.\n   */\n  toString() {\n    const e = encodeURIComponent;\n    return (\n      \"otpauth://totp/\" +\n      `${\n        this.issuer.length > 0\n          ? `${e(this.issuer)}:${e(this.label)}?issuer=${e(this.issuer)}&`\n          : `${e(this.label)}?`\n      }` +\n      `secret=${e(this.secret.base32)}&` +\n      `algorithm=${e(this.algorithm)}&` +\n      `digits=${e(this.digits)}&` +\n      `period=${e(this.period)}`\n    );\n  }\n}\n\nexport { TOTP };\n","import { HOTP } from \"./hotp.js\";\nimport { TOTP } from \"./totp.js\";\n\n/**\n * Key URI regex (otpauth://TYPE/[ISSUER:]LABEL?PARAMETERS).\n * @type {RegExp}\n */\nconst OTPURI_REGEX =\n  /^otpauth:\\/\\/([ht]otp)\\/(.+)\\?([A-Z0-9.~_-]+=[^?&]*(?:&[A-Z0-9.~_-]+=[^?&]*)*)$/i;\n\n/**\n * RFC 4648 base32 alphabet with pad.\n * @type {RegExp}\n */\nconst SECRET_REGEX = /^[2-7A-Z]+=*$/i;\n\n/**\n * Regex for supported algorithms.\n * @type {RegExp}\n */\nconst ALGORITHM_REGEX = /^SHA(?:1|224|256|384|512|3-224|3-256|3-384|3-512)$/i;\n\n/**\n * Integer regex.\n * @type {RegExp}\n */\nconst INTEGER_REGEX = /^[+-]?\\d+$/;\n\n/**\n * Positive integer regex.\n * @type {RegExp}\n */\nconst POSITIVE_INTEGER_REGEX = /^\\+?[1-9]\\d*$/;\n\n/**\n * HOTP/TOTP object/string conversion.\n * @see [Key URI Format](https://github.com/google/google-authenticator/wiki/Key-Uri-Format)\n */\nclass URI {\n  /**\n   * Parses a Google Authenticator key URI and returns an HOTP/TOTP object.\n   * @param {string} uri Google Authenticator Key URI.\n   * @returns {HOTP|TOTP} HOTP/TOTP object.\n   */\n  static parse(uri) {\n    let uriGroups;\n\n    try {\n      uriGroups = uri.match(OTPURI_REGEX);\n    } catch (error) {\n      /* Handled below */\n    }\n\n    if (!Array.isArray(uriGroups)) {\n      throw new URIError(\"Invalid URI format\");\n    }\n\n    // Extract URI groups.\n    const uriType = uriGroups[1].toLowerCase();\n    const uriLabel = uriGroups[2]\n      .split(/(?::|%3A) *(.+)/i, 2)\n      .map(decodeURIComponent);\n    /** @type {Object.<string, string>} */\n    const uriParams = uriGroups[3].split(\"&\").reduce((acc, cur) => {\n      const pairArr = cur.split(/=(.*)/, 2).map(decodeURIComponent);\n      const pairKey = pairArr[0].toLowerCase();\n      const pairVal = pairArr[1];\n      /** @type {Object.<string, string>} */\n      const pairAcc = acc;\n\n      pairAcc[pairKey] = pairVal;\n      return pairAcc;\n    }, {});\n\n    // 'OTP' will be instantiated with 'config' argument.\n    let OTP;\n    const config = {};\n\n    if (uriType === \"hotp\") {\n      OTP = HOTP;\n\n      // Counter: required\n      if (\n        typeof uriParams.counter !== \"undefined\" &&\n        INTEGER_REGEX.test(uriParams.counter)\n      ) {\n        config.counter = parseInt(uriParams.counter, 10);\n      } else {\n        throw new TypeError(\"Missing or invalid 'counter' parameter\");\n      }\n    } else if (uriType === \"totp\") {\n      OTP = TOTP;\n\n      // Period: optional\n      if (typeof uriParams.period !== \"undefined\") {\n        if (POSITIVE_INTEGER_REGEX.test(uriParams.period)) {\n          config.period = parseInt(uriParams.period, 10);\n        } else {\n          throw new TypeError(\"Invalid 'period' parameter\");\n        }\n      }\n    } else {\n      throw new TypeError(\"Unknown OTP type\");\n    }\n\n    // Label: required\n    // Issuer: optional\n    if (uriLabel.length === 2) {\n      config.label = uriLabel[1];\n      config.issuer = uriLabel[0];\n    } else {\n      config.label = uriLabel[0];\n      if (typeof uriParams.issuer !== \"undefined\") {\n        config.issuer = uriParams.issuer;\n      }\n    }\n\n    // Secret: required\n    if (\n      typeof uriParams.secret !== \"undefined\" &&\n      SECRET_REGEX.test(uriParams.secret)\n    ) {\n      config.secret = uriParams.secret;\n    } else {\n      throw new TypeError(\"Missing or invalid 'secret' parameter\");\n    }\n\n    // Algorithm: optional\n    if (typeof uriParams.algorithm !== \"undefined\") {\n      if (ALGORITHM_REGEX.test(uriParams.algorithm)) {\n        config.algorithm = uriParams.algorithm;\n      } else {\n        throw new TypeError(\"Invalid 'algorithm' parameter\");\n      }\n    }\n\n    // Digits: optional\n    if (typeof uriParams.digits !== \"undefined\") {\n      if (POSITIVE_INTEGER_REGEX.test(uriParams.digits)) {\n        config.digits = parseInt(uriParams.digits, 10);\n      } else {\n        throw new TypeError(\"Invalid 'digits' parameter\");\n      }\n    }\n\n    return new OTP(config);\n  }\n\n  /**\n   * Converts an HOTP/TOTP object to a Google Authenticator key URI.\n   * @param {HOTP|TOTP} otp HOTP/TOTP object.\n   * @returns {string} Google Authenticator Key URI.\n   */\n  static stringify(otp) {\n    if (otp instanceof HOTP || otp instanceof TOTP) {\n      return otp.toString();\n    }\n\n    throw new TypeError(\"Invalid 'HOTP/TOTP' object\");\n  }\n}\n\nexport { URI };\n","/**\n * Library version.\n * @type {string}\n */\nconst version = \"__OTPAUTH_VERSION__\";\n\nexport { version };\n"],"names":["b64Tab","uint8array2packed","arr","existingPacked","existingPackedLen","bigEndianMod","i","intOffset","byteOffset","packed","existingByteLen","shiftModifier","length","push","value","binLen","getStrConverter","format","utfType","Error","str","existingBin","existingBinLen","num","parseInt","substr","isNaN","hex2packed","codePnt","codePntArr","j","transposeBytes","byteCnt","charCodeAt","str2packed","index","tmpInt","strPart","firstEqual","indexOf","search","replace","charAt","b642packed","bytes2packed","ArrayBuffer","ignore","Uint8Array","arraybuffer2packed","getOutputConverter","outputBinLen","outputOptions","binarray","outputLength","formatOpts","hex_tab","srcByte","outputUpper","toUpperCase","packed2hex","triplet","int1","int2","b64Pad","packed2b64","String","fromCharCode","retVal","arrView","globalScope","globalThis","Object","defineProperty","prototype","get","this","configurable","__GLOBALTHIS__","self","window","global","nodeCrypto","toString","call","process","require","Array","from","reverse","join","undefined","OPENSSL_TO_JSSHA_ALGO","SHA1","SHA224","SHA256","SHA384","SHA512","ALPHABET","base32ToBuf","end","cstr","substring","buf","bits","idx","TypeError","base32FromBuf","hexToBuf","hexFromBuf","hex","latin1ToBuf","latin1FromBuf","ENCODER","TextEncoder","DECODER","TextDecoder","utf8ToBuf","encode","buffer","utf8FromBuf","decode","Secret","constructor","size","arguments","randomBytes","crypto","getRandomValues","static","latin1","enumerable","utf8","base32","timingSafeEqual","a","b","Buffer","out","HOTP","defaults","issuer","label","algorithm","digits","counter","secret","fromBase32","_ref","digest","key","message","hmac","createHmac","update","variant","jsSHA","setHMACKey","getHMAC","hmacDigest","acc","uintToBuf","offset","byteLength","prefix","repeat","pad","generate","_ref2","token","delta","generatedToken","validate","_ref3","e","encodeURIComponent","TOTP","period","timestamp","Date","now","Math","floor","OTPURI_REGEX","SECRET_REGEX","ALGORITHM_REGEX","INTEGER_REGEX","POSITIVE_INTEGER_REGEX","uri","uriGroups","match","error","isArray","URIError","uriType","toLowerCase","uriLabel","split","map","decodeURIComponent","uriParams","reduce","cur","pairArr","pairKey","pairVal","pairAcc","OTP","config","test","otp"],"mappings":"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"}