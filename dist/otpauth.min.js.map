{"version":3,"sources":["webpack://OTPAuth/webpack/universalModuleDefinition","webpack://OTPAuth/webpack/bootstrap","webpack://OTPAuth/./src/utils.js","webpack://OTPAuth//tmp/builtin-sjcl-17801gMmUtUQl4sOE","webpack://OTPAuth/./src/crypto.js","webpack://OTPAuth/./src/secret.js","webpack://OTPAuth/./src/uri.js","webpack://OTPAuth/./src/otp.js","webpack://OTPAuth/./src/main.js","webpack://OTPAuth/./src/version.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Utils","uint","decode","buf","arr","Uint8Array","num","length","encode","ArrayBuffer","acc","raw","str","String","fromCharCode","charCodeAt","b32","alphabet","bits","strUpp","toUpperCase","index","idx","indexOf","TypeError","hex","hexByte","toString","parseInt","substr","pad","digits","prefix","repeat","InternalUtils","globalThis","configurable","__gt__","console","reduce","isNode","process","require","eval","globals","sjcl","cipher","hash","keyexchange","misc","codec","exception","corrupt","message","invalid","bug","notReady","bitArray","bitSlice","a","bstart","bend","_shiftRight","slice","undefined","clamp","extract","blength","sh","Math","floor","concat","a1","a2","last","shift","getPartial","bitLength","x","len","ceil","partial","_end","round","equal","b","carry","out","last2","shift2","push","pop","_xor4","y","byteswapM","v","DataView","arrayBuffer","fromBits","padding","padding_count","ol","tmp","smallest","setUint32","byteLength","buffer","setUint8","getUint8","toBits","inView","getUint32","hexDumpBuffer","width","stringBufferView","string","getUint16","Array","join","log","sha1","_h","_buffer","_length","reset","data","update","finalize","blockSize","_init","utf8String","nl","Uint32Array","j","_block","subarray","splice","h","_key","_f","_S","words","e","w","sha256","_precompute","factor","isPrime","prime","frac","pow","k","h0","h1","h2","h3","h4","h5","h6","h7","sha512","_initr","_keyr","frac2","wrh","wrl","h0h","h0l","h1h","h1l","h2h","h2l","h3h","h3l","h4h","h4l","h5h","h5l","h6h","h6l","h7h","h7l","ah","al","bh","bl","ch","cl","dh","dl","eh","el","fh","fl","gh","gl","hh","hl","gamma0xh","gamma0xl","gamma0h","gamma0l","gamma1xh","gamma1xl","gamma1h","gamma1l","wr7h","wr7l","wr16h","wr16l","chh","chl","majh","majl","sigma0h","sigma0l","sigma1h","sigma1l","krh","krl","t1l","t1h","t2l","hmac","Hash","_hash","exKey","bs","_baseHash","_resultHash","encrypt","mac","_updated","digest","result","Crypto","nodeBufferFromArrayBuffer","nodeBufferToArrayBuffer","NodeBuffer","Buffer","NodeCrypto","from","nodeBuffer","uint8Array","randomBytes","size","hmacDigest","algorithm","createHmac","getRandomValues","BrowserCrypto","crypto","msCrypto","array","warn","random","toLowerCase","Secret","writable","OTPURI_REGEX","RegExp","SECRET_REGEX","ALGORITHM_REGEX","INTEGER_REGEX","POSITIVE_INTEGER_REGEX","URI","uri","uriGroups","match","error","isArray","URIError","OTP","uriType","uriLabel","split","map","decodeURIComponent","uriParams","cur","pairArr","pairKey","pairVal","pairAcc","config","HOTP","counter","test","TOTP","period","label","issuer","secret","otp","legacyIssuer","isHOTP","isTOTP","encodeURIComponent","defaults","window","fromB32","generate","token","validate","stringify","offset","timestamp","Date","now","version"],"mappings":"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","file":"otpauth.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"OTPAuth\"] = factory();\n\telse\n\t\troot[\"OTPAuth\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","/**\n * An object containing some utilities.\n * @namespace Utils\n * @type {Object}\n */\nexport const Utils = {};\n\n/**\n * UInt conversion.\n * @memberof Utils\n * @namespace Utils.uint\n * @type {Object}\n */\nUtils.uint = {};\n\n/**\n * Converts an ArrayBuffer to an integer.\n * @memberof Utils.uint\n * @method decode\n * @param {ArrayBuffer} buf ArrayBuffer.\n * @returns {number} Integer.\n */\nUtils.uint.decode = buf => {\n\tconst arr = new Uint8Array(buf);\n\tlet num = 0;\n\n\tfor (let i = 0; i < arr.length; i++) {\n\t\tif (arr[i] !== 0) {\n\t\t\tnum *= 256;\n\t\t\tnum += arr[i];\n\t\t}\n\t}\n\n\treturn num;\n};\n\n/**\n * Converts an integer to an ArrayBuffer.\n * @memberof Utils.uint\n * @method encode\n * @param {number} num Integer.\n * @returns {ArrayBuffer} ArrayBuffer.\n */\nUtils.uint.encode = num => {\n\tconst buf = new ArrayBuffer(8);\n\tconst arr = new Uint8Array(buf);\n\tlet acc = num;\n\n\tfor (let i = 7; i >= 0; i--) {\n\t\tif (acc === 0) {\n\t\t\tbreak;\n\t\t}\n\n\t\tarr[i] = acc & 255;\n\t\tacc -= arr[i];\n\t\tacc /= 256;\n\t}\n\n\treturn buf;\n};\n\n/**\n * Raw string conversion.\n * @memberof Utils\n * @namespace Utils.raw\n * @type {Object}\n */\nUtils.raw = {};\n\n/**\n * Converts an ArrayBuffer to a string.\n * @memberof Utils.raw\n * @method decode\n * @param {ArrayBuffer} buf ArrayBuffer.\n * @returns {string} String.\n */\nUtils.raw.decode = buf => {\n\tconst arr = new Uint8Array(buf);\n\tlet str = '';\n\n\tfor (let i = 0; i < arr.length; i++) {\n\t\tstr += String.fromCharCode(arr[i]);\n\t}\n\n\treturn str;\n};\n\n/**\n * Converts a string to an ArrayBuffer.\n * @memberof Utils.raw\n * @method encode\n * @param {string} str String.\n * @returns {ArrayBuffer} ArrayBuffer.\n */\nUtils.raw.encode = str => {\n\tconst buf = new ArrayBuffer(str.length);\n\tconst arr = new Uint8Array(buf);\n\n\tfor (let i = 0; i < str.length; i++) {\n\t\tarr[i] = str.charCodeAt(i);\n\t}\n\n\treturn buf;\n};\n\n/**\n * Base32 string conversion.\n * @memberof Utils\n * @namespace Utils.b32\n * @type {Object}\n */\nUtils.b32 = {};\n\n/**\n * RFC 4648 base32 alphabet without pad.\n * @memberof Utils.b32\n * @type {string}\n */\nUtils.b32.alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567';\n\n/**\n * Converts an ArrayBuffer to a base32 string (RFC 4648).\n * @see https://github.com/LinusU/base32-decode\n * @memberof Utils.b32\n * @method decode\n * @param {ArrayBuffer} buf ArrayBuffer.\n * @returns {string} Base32 string.\n */\nUtils.b32.decode = buf => {\n\tconst arr = new Uint8Array(buf);\n\n\tlet bits = 0;\n\tlet value = 0;\n\tlet str = '';\n\n\tfor (let i = 0; i < arr.length; i++) {\n\t\tvalue = (value << 8) | arr[i];\n\t\tbits += 8;\n\n\t\twhile (bits >= 5) {\n\t\t\tstr += Utils.b32.alphabet[(value >>> bits - 5) & 31];\n\t\t\tbits -= 5;\n\t\t}\n\t}\n\n\tif (bits > 0) {\n\t\tstr += Utils.b32.alphabet[(value << 5 - bits) & 31];\n\t}\n\n\treturn str;\n};\n\n/**\n * Converts a base32 string to an ArrayBuffer (RFC 4648).\n * @see https://github.com/LinusU/base32-encode\n * @memberof Utils.b32\n * @method encode\n * @param {string} str Base32 string.\n * @returns {ArrayBuffer} ArrayBuffer.\n */\nUtils.b32.encode = str => {\n\tconst strUpp = str.toUpperCase();\n\tconst buf = new ArrayBuffer((str.length * 5) / 8 | 0);\n\tconst arr = new Uint8Array(buf);\n\n\tlet bits = 0;\n\tlet value = 0;\n\tlet index = 0;\n\n\tfor (let i = 0; i < strUpp.length; i++) {\n\t\tconst idx = Utils.b32.alphabet.indexOf(strUpp[i]);\n\n\t\tif (idx === -1) {\n\t\t\tthrow new TypeError(`Invalid character found: ${strUpp[i]}`);\n\t\t}\n\n\t\tvalue = (value << 5) | idx;\n\t\tbits += 5;\n\n\t\tif (bits >= 8) {\n\t\t\tarr[index++] = (value >>> bits - 8) & 255;\n\t\t\tbits -= 8;\n\t\t}\n\t}\n\n\treturn buf;\n};\n\n/**\n * Hexadecimal string conversion.\n * @memberof Utils\n * @namespace Utils.hex\n * @type {Object}\n */\nUtils.hex = {};\n\n/**\n * Converts an ArrayBuffer to a hexadecimal string.\n * @memberof Utils.hex\n * @method decode\n * @param {ArrayBuffer} buf ArrayBuffer.\n * @returns {string} Hexadecimal string.\n */\nUtils.hex.decode = buf => {\n\tconst arr = new Uint8Array(buf);\n\tlet str = '';\n\n\tfor (let i = 0; i < arr.length; i++) {\n\t\tconst hexByte = arr[i].toString(16);\n\n\t\tstr += hexByte.length === 1\n\t\t\t? `0${hexByte}`\n\t\t\t: hexByte;\n\t}\n\n\treturn str.toUpperCase();\n};\n\n/**\n * Converts a hexadecimal string to an ArrayBuffer.\n * @memberof Utils.hex\n * @method encode\n * @param {string} str Hexadecimal string.\n * @returns {ArrayBuffer} ArrayBuffer.\n */\nUtils.hex.encode = str => {\n\tconst buf = new ArrayBuffer(str.length / 2);\n\tconst arr = new Uint8Array(buf);\n\n\tfor (let i = 0; i < arr.length; i++) {\n\t\tarr[i] = parseInt(str.substr(i * 2, 2), 16);\n\t}\n\n\treturn buf;\n};\n\n/**\n * Pads a number with leading zeros.\n * @memberof Utils\n * @method pad\n * @param {number|string} num Number.\n * @param {number} digits Digits.\n * @returns {string} Padded number.\n */\nUtils.pad = (num, digits) => {\n\tlet prefix = '';\n\tlet repeat = digits - String(num).length;\n\twhile (repeat-- > 0) prefix += '0';\n\treturn `${prefix}${num}`;\n};\n\n/**\n * An object containing some utilities (for internal use only).\n * @private\n * @namespace InternalUtils\n * @type {Object}\n */\nexport const InternalUtils = {};\n\n/**\n * \"globalThis\" ponyfill.\n * @see https://mathiasbynens.be/notes/globalthis\n * @memberof InternalUtils\n * @type {Object}\n */\nInternalUtils.globalThis = (function getGlobalThis() {\n\t/* eslint-disable no-extend-native, no-undef */\n\tif (typeof globalThis === 'object') return globalThis;\n\tObject.defineProperty(Object.prototype, '__gt__', { get() { return this; }, configurable: true });\n\ttry { return __gt__; } finally { delete Object.prototype.__gt__; }\n\t/* eslint-enable */\n})();\n\n/**\n * \"console\" ponyfill.\n * (NOTICE: only some methods are implemented).\n * @memberof InternalUtils\n * @type {Object}\n */\nInternalUtils.console = typeof InternalUtils.globalThis.console !== 'object'\n\t? ['log', 'info', 'error', 'warn'].reduce((c, n) => { c[n] = () => {}; return c; }, {})\n\t: InternalUtils.globalThis.console;\n\n/**\n * Detect if running in \"Node.js\".\n * @memberof InternalUtils\n * @type {boolean}\n */\nInternalUtils.isNode = Object.prototype.toString.call(InternalUtils.globalThis.process) === '[object process]';\n\n/**\n * Dynamically import \"Node.js\" modules.\n * @memberof InternalUtils\n * @method require\n * @param {string} name Name.\n * @returns {Object} Module.\n */\n// eslint-disable-next-line no-eval\nInternalUtils.require = name => eval('require')(name);\n","/** @fileOverview Javascript cryptography implementation.\n *\n * Crush to remove comments, shorten variable names and\n * generally reduce transmission size.\n *\n * @author Emily Stark\n * @author Mike Hamburg\n * @author Dan Boneh\n */\n\n\"use strict\";\n/*jslint indent: 2, bitwise: false, nomen: false, plusplus: false, white: false, regexp: false */\n/*global document, window, escape, unescape, module, require, Uint32Array */\n\n/**\n * The Stanford Javascript Crypto Library, top-level namespace.\n * @namespace\n */\nvar sjcl = {\n  /**\n   * Symmetric ciphers.\n   * @namespace\n   */\n  cipher: {},\n\n  /**\n   * Hash functions.  Right now only SHA256 is implemented.\n   * @namespace\n   */\n  hash: {},\n\n  /**\n   * Key exchange functions.  Right now only SRP is implemented.\n   * @namespace\n   */\n  keyexchange: {},\n  \n  /**\n   * Cipher modes of operation.\n   * @namespace\n   */\n  mode: {},\n\n  /**\n   * Miscellaneous.  HMAC and PBKDF2.\n   * @namespace\n   */\n  misc: {},\n  \n  /**\n   * Bit array encoders and decoders.\n   * @namespace\n   *\n   * @description\n   * The members of this namespace are functions which translate between\n   * SJCL's bitArrays and other objects (usually strings).  Because it\n   * isn't always clear which direction is encoding and which is decoding,\n   * the method names are \"fromBits\" and \"toBits\".\n   */\n  codec: {},\n  \n  /**\n   * Exceptions.\n   * @namespace\n   */\n  exception: {\n    /**\n     * Ciphertext is corrupt.\n     * @constructor\n     */\n    corrupt: function(message) {\n      this.toString = function() { return \"CORRUPT: \"+this.message; };\n      this.message = message;\n    },\n    \n    /**\n     * Invalid parameter.\n     * @constructor\n     */\n    invalid: function(message) {\n      this.toString = function() { return \"INVALID: \"+this.message; };\n      this.message = message;\n    },\n    \n    /**\n     * Bug or missing feature in SJCL.\n     * @constructor\n     */\n    bug: function(message) {\n      this.toString = function() { return \"BUG: \"+this.message; };\n      this.message = message;\n    },\n\n    /**\n     * Something isn't ready.\n     * @constructor\n     */\n    notReady: function(message) {\n      this.toString = function() { return \"NOT READY: \"+this.message; };\n      this.message = message;\n    }\n  }\n};\n/** @fileOverview Arrays of bits, encoded as arrays of Numbers.\n *\n * @author Emily Stark\n * @author Mike Hamburg\n * @author Dan Boneh\n */\n\n/**\n * Arrays of bits, encoded as arrays of Numbers.\n * @namespace\n * @description\n * <p>\n * These objects are the currency accepted by SJCL's crypto functions.\n * </p>\n *\n * <p>\n * Most of our crypto primitives operate on arrays of 4-byte words internally,\n * but many of them can take arguments that are not a multiple of 4 bytes.\n * This library encodes arrays of bits (whose size need not be a multiple of 8\n * bits) as arrays of 32-bit words.  The bits are packed, big-endian, into an\n * array of words, 32 bits at a time.  Since the words are double-precision\n * floating point numbers, they fit some extra data.  We use this (in a private,\n * possibly-changing manner) to encode the number of bits actually  present\n * in the last word of the array.\n * </p>\n *\n * <p>\n * Because bitwise ops clear this out-of-band data, these arrays can be passed\n * to ciphers like AES which want arrays of words.\n * </p>\n */\nsjcl.bitArray = {\n  /**\n   * Array slices in units of bits.\n   * @param {bitArray} a The array to slice.\n   * @param {Number} bstart The offset to the start of the slice, in bits.\n   * @param {Number} bend The offset to the end of the slice, in bits.  If this is undefined,\n   * slice until the end of the array.\n   * @return {bitArray} The requested slice.\n   */\n  bitSlice: function (a, bstart, bend) {\n    a = sjcl.bitArray._shiftRight(a.slice(bstart/32), 32 - (bstart & 31)).slice(1);\n    return (bend === undefined) ? a : sjcl.bitArray.clamp(a, bend-bstart);\n  },\n\n  /**\n   * Extract a number packed into a bit array.\n   * @param {bitArray} a The array to slice.\n   * @param {Number} bstart The offset to the start of the slice, in bits.\n   * @param {Number} blength The length of the number to extract.\n   * @return {Number} The requested slice.\n   */\n  extract: function(a, bstart, blength) {\n    // FIXME: this Math.floor is not necessary at all, but for some reason\n    // seems to suppress a bug in the Chromium JIT.\n    var x, sh = Math.floor((-bstart-blength) & 31);\n    if ((bstart + blength - 1 ^ bstart) & -32) {\n      // it crosses a boundary\n      x = (a[bstart/32|0] << (32 - sh)) ^ (a[bstart/32+1|0] >>> sh);\n    } else {\n      // within a single word\n      x = a[bstart/32|0] >>> sh;\n    }\n    return x & ((1<<blength) - 1);\n  },\n\n  /**\n   * Concatenate two bit arrays.\n   * @param {bitArray} a1 The first array.\n   * @param {bitArray} a2 The second array.\n   * @return {bitArray} The concatenation of a1 and a2.\n   */\n  concat: function (a1, a2) {\n    if (a1.length === 0 || a2.length === 0) {\n      return a1.concat(a2);\n    }\n    \n    var last = a1[a1.length-1], shift = sjcl.bitArray.getPartial(last);\n    if (shift === 32) {\n      return a1.concat(a2);\n    } else {\n      return sjcl.bitArray._shiftRight(a2, shift, last|0, a1.slice(0,a1.length-1));\n    }\n  },\n\n  /**\n   * Find the length of an array of bits.\n   * @param {bitArray} a The array.\n   * @return {Number} The length of a, in bits.\n   */\n  bitLength: function (a) {\n    var l = a.length, x;\n    if (l === 0) { return 0; }\n    x = a[l - 1];\n    return (l-1) * 32 + sjcl.bitArray.getPartial(x);\n  },\n\n  /**\n   * Truncate an array.\n   * @param {bitArray} a The array.\n   * @param {Number} len The length to truncate to, in bits.\n   * @return {bitArray} A new array, truncated to len bits.\n   */\n  clamp: function (a, len) {\n    if (a.length * 32 < len) { return a; }\n    a = a.slice(0, Math.ceil(len / 32));\n    var l = a.length;\n    len = len & 31;\n    if (l > 0 && len) {\n      a[l-1] = sjcl.bitArray.partial(len, a[l-1] & 0x80000000 >> (len-1), 1);\n    }\n    return a;\n  },\n\n  /**\n   * Make a partial word for a bit array.\n   * @param {Number} len The number of bits in the word.\n   * @param {Number} x The bits.\n   * @param {Number} [_end=0] Pass 1 if x has already been shifted to the high side.\n   * @return {Number} The partial word.\n   */\n  partial: function (len, x, _end) {\n    if (len === 32) { return x; }\n    return (_end ? x|0 : x << (32-len)) + len * 0x10000000000;\n  },\n\n  /**\n   * Get the number of bits used by a partial word.\n   * @param {Number} x The partial word.\n   * @return {Number} The number of bits used by the partial word.\n   */\n  getPartial: function (x) {\n    return Math.round(x/0x10000000000) || 32;\n  },\n\n  /**\n   * Compare two arrays for equality in a predictable amount of time.\n   * @param {bitArray} a The first array.\n   * @param {bitArray} b The second array.\n   * @return {boolean} true if a == b; false otherwise.\n   */\n  equal: function (a, b) {\n    if (sjcl.bitArray.bitLength(a) !== sjcl.bitArray.bitLength(b)) {\n      return false;\n    }\n    var x = 0, i;\n    for (i=0; i<a.length; i++) {\n      x |= a[i]^b[i];\n    }\n    return (x === 0);\n  },\n\n  /** Shift an array right.\n   * @param {bitArray} a The array to shift.\n   * @param {Number} shift The number of bits to shift.\n   * @param {Number} [carry=0] A byte to carry in\n   * @param {bitArray} [out=[]] An array to prepend to the output.\n   * @private\n   */\n  _shiftRight: function (a, shift, carry, out) {\n    var i, last2=0, shift2;\n    if (out === undefined) { out = []; }\n    \n    for (; shift >= 32; shift -= 32) {\n      out.push(carry);\n      carry = 0;\n    }\n    if (shift === 0) {\n      return out.concat(a);\n    }\n    \n    for (i=0; i<a.length; i++) {\n      out.push(carry | a[i]>>>shift);\n      carry = a[i] << (32-shift);\n    }\n    last2 = a.length ? a[a.length-1] : 0;\n    shift2 = sjcl.bitArray.getPartial(last2);\n    out.push(sjcl.bitArray.partial(shift+shift2 & 31, (shift + shift2 > 32) ? carry : out.pop(),1));\n    return out;\n  },\n  \n  /** xor a block of 4 words together.\n   * @private\n   */\n  _xor4: function(x,y) {\n    return [x[0]^y[0],x[1]^y[1],x[2]^y[2],x[3]^y[3]];\n  },\n\n  /** byteswap a word array inplace.\n   * (does not handle partial words)\n   * @param {sjcl.bitArray} a word array\n   * @return {sjcl.bitArray} byteswapped array\n   */\n  byteswapM: function(a) {\n    var i, v, m = 0xff00;\n    for (i = 0; i < a.length; ++i) {\n      v = a[i];\n      a[i] = (v >>> 24) | ((v >>> 8) & m) | ((v & m) << 8) | (v << 24);\n    }\n    return a;\n  }\n};\n/** @fileOverview Bit array codec implementations.\n *\n * @author Marco Munizaga\n */\n\n//patch arraybuffers if they don't exist\nif (typeof(ArrayBuffer) === 'undefined') {\n  (function(globals){\n      \"use strict\";\n      globals.ArrayBuffer = function(){};\n      globals.DataView = function(){};\n  }(this));\n}\n\n/**\n * ArrayBuffer\n * @namespace\n */\nsjcl.codec.arrayBuffer = {\n  /** Convert from a bitArray to an ArrayBuffer. \n   * Will default to 8byte padding if padding is undefined*/\n  fromBits: function (arr, padding, padding_count) {\n    var out, i, ol, tmp, smallest;\n    padding = padding==undefined  ? true : padding;\n    padding_count = padding_count || 8;\n\n    if (arr.length === 0) {\n      return new ArrayBuffer(0);\n    }\n\n    ol = sjcl.bitArray.bitLength(arr)/8;\n\n    //check to make sure the bitLength is divisible by 8, if it isn't \n    //we can't do anything since arraybuffers work with bytes, not bits\n    if ( sjcl.bitArray.bitLength(arr)%8 !== 0 ) {\n      throw new sjcl.exception.invalid(\"Invalid bit size, must be divisble by 8 to fit in an arraybuffer correctly\");\n    }\n\n    if (padding && ol%padding_count !== 0){\n      ol += padding_count - (ol%padding_count);\n    }\n\n\n    //padded temp for easy copying\n    tmp = new DataView(new ArrayBuffer(arr.length*4));\n    for (i=0; i<arr.length; i++) {\n      tmp.setUint32(i*4, (arr[i]<<32)); //get rid of the higher bits\n    }\n\n    //now copy the final message if we are not going to 0 pad\n    out = new DataView(new ArrayBuffer(ol));\n\n    //save a step when the tmp and out bytelength are ===\n    if (out.byteLength === tmp.byteLength){\n      return tmp.buffer;\n    }\n\n    smallest = tmp.byteLength < out.byteLength ? tmp.byteLength : out.byteLength;\n    for(i=0; i<smallest; i++){\n      out.setUint8(i,tmp.getUint8(i));\n    }\n\n\n    return out.buffer;\n  },\n  /** Convert from an ArrayBuffer to a bitArray. */\n  toBits: function (buffer) {\n    var i, out=[], len, inView, tmp;\n\n    if (buffer.byteLength === 0) {\n      return [];\n    }\n\n    inView = new DataView(buffer);\n    len = inView.byteLength - inView.byteLength%4;\n\n    for (var i = 0; i < len; i+=4) {\n      out.push(inView.getUint32(i));\n    }\n\n    if (inView.byteLength%4 != 0) {\n      tmp = new DataView(new ArrayBuffer(4));\n      for (var i = 0, l = inView.byteLength%4; i < l; i++) {\n        //we want the data to the right, because partial slices off the starting bits\n        tmp.setUint8(i+4-l, inView.getUint8(len+i)); // big-endian, \n      }\n      out.push(\n        sjcl.bitArray.partial( (inView.byteLength%4)*8, tmp.getUint32(0) )\n      ); \n    }\n    return out;\n  },\n\n\n\n  /** Prints a hex output of the buffer contents, akin to hexdump **/\n  hexDumpBuffer: function(buffer){\n      var stringBufferView = new DataView(buffer);\n      var string = '';\n      var pad = function (n, width) {\n          n = n + '';\n          return n.length >= width ? n : new Array(width - n.length + 1).join('0') + n;\n      };\n\n      for (var i = 0; i < stringBufferView.byteLength; i+=2) {\n          if (i%16 == 0) string += ('\\n'+(i).toString(16)+'\\t');\n          string += ( pad(stringBufferView.getUint16(i).toString(16),4) + ' ');\n      }\n\n      if ( typeof console === undefined ){\n        console = console || {log:function(){}}; //fix for IE\n      }\n      console.log(string.toUpperCase());\n  }\n};\n\n/** @fileOverview Javascript SHA-1 implementation.\n *\n * Based on the implementation in RFC 3174, method 1, and on the SJCL\n * SHA-256 implementation.\n *\n * @author Quinn Slack\n */\n\n/**\n * Context for a SHA-1 operation in progress.\n * @constructor\n */\nsjcl.hash.sha1 = function (hash) {\n  if (hash) {\n    this._h = hash._h.slice(0);\n    this._buffer = hash._buffer.slice(0);\n    this._length = hash._length;\n  } else {\n    this.reset();\n  }\n};\n\n/**\n * Hash a string or an array of words.\n * @static\n * @param {bitArray|String} data the data to hash.\n * @return {bitArray} The hash value, an array of 5 big-endian words.\n */\nsjcl.hash.sha1.hash = function (data) {\n  return (new sjcl.hash.sha1()).update(data).finalize();\n};\n\nsjcl.hash.sha1.prototype = {\n  /**\n   * The hash's block size, in bits.\n   * @constant\n   */\n  blockSize: 512,\n   \n  /**\n   * Reset the hash state.\n   * @return this\n   */\n  reset:function () {\n    this._h = this._init.slice(0);\n    this._buffer = [];\n    this._length = 0;\n    return this;\n  },\n  \n  /**\n   * Input several words to the hash.\n   * @param {bitArray|String} data the data to hash.\n   * @return this\n   */\n  update: function (data) {\n    if (typeof data === \"string\") {\n      data = sjcl.codec.utf8String.toBits(data);\n    }\n    var i, b = this._buffer = sjcl.bitArray.concat(this._buffer, data),\n        ol = this._length,\n        nl = this._length = ol + sjcl.bitArray.bitLength(data);\n    if (nl > 9007199254740991){\n      throw new sjcl.exception.invalid(\"Cannot hash more than 2^53 - 1 bits\");\n    }\n\n    if (typeof Uint32Array !== 'undefined') {\n\tvar c = new Uint32Array(b);\n    \tvar j = 0;\n    \tfor (i = this.blockSize+ol - ((this.blockSize+ol) & (this.blockSize-1)); i <= nl;\n\t\ti+= this.blockSize) {\n      \t    this._block(c.subarray(16 * j, 16 * (j+1)));\n      \t    j += 1;\n    \t}\n    \tb.splice(0, 16 * j);\n    } else {\n    \tfor (i = this.blockSize+ol - ((this.blockSize+ol) & (this.blockSize-1)); i <= nl;\n             i+= this.blockSize) {\n      \t     this._block(b.splice(0,16));\n      \t}\n    }\n    return this;\n  },\n  \n  /**\n   * Complete hashing and output the hash value.\n   * @return {bitArray} The hash value, an array of 5 big-endian words. TODO\n   */\n  finalize:function () {\n    var i, b = this._buffer, h = this._h;\n\n    // Round out and push the buffer\n    b = sjcl.bitArray.concat(b, [sjcl.bitArray.partial(1,1)]);\n    // Round out the buffer to a multiple of 16 words, less the 2 length words.\n    for (i = b.length + 2; i & 15; i++) {\n      b.push(0);\n    }\n\n    // append the length\n    b.push(Math.floor(this._length / 0x100000000));\n    b.push(this._length | 0);\n\n    while (b.length) {\n      this._block(b.splice(0,16));\n    }\n\n    this.reset();\n    return h;\n  },\n\n  /**\n   * The SHA-1 initialization vector.\n   * @private\n   */\n  _init:[0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0],\n\n  /**\n   * The SHA-1 hash key.\n   * @private\n   */\n  _key:[0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xCA62C1D6],\n\n  /**\n   * The SHA-1 logical functions f(0), f(1), ..., f(79).\n   * @private\n   */\n  _f:function(t, b, c, d) {\n    if (t <= 19) {\n      return (b & c) | (~b & d);\n    } else if (t <= 39) {\n      return b ^ c ^ d;\n    } else if (t <= 59) {\n      return (b & c) | (b & d) | (c & d);\n    } else if (t <= 79) {\n      return b ^ c ^ d;\n    }\n  },\n\n  /**\n   * Circular left-shift operator.\n   * @private\n   */\n  _S:function(n, x) {\n    return (x << n) | (x >>> 32-n);\n  },\n  \n  /**\n   * Perform one cycle of SHA-1.\n   * @param {Uint32Array|bitArray} words one block of words.\n   * @private\n   */\n  _block:function (words) {\n    var t, tmp, a, b, c, d, e,\n    h = this._h;\n    var w;\n    if (typeof Uint32Array !== 'undefined') {\n        // When words is passed to _block, it has 16 elements. SHA1 _block\n        // function extends words with new elements (at the end there are 80 elements). \n        // The problem is that if we use Uint32Array instead of Array, \n        // the length of Uint32Array cannot be changed. Thus, we replace words with a \n        // normal Array here.\n        w = Array(80); // do not use Uint32Array here as the instantiation is slower\n        for (var j=0; j<16; j++){\n            w[j] = words[j];\n        }\n    } else {\n        w = words;\n    }\n\n    a = h[0]; b = h[1]; c = h[2]; d = h[3]; e = h[4]; \n\n    for (t=0; t<=79; t++) {\n      if (t >= 16) {\n        w[t] = this._S(1, w[t-3] ^ w[t-8] ^ w[t-14] ^ w[t-16]);\n      }\n      tmp = (this._S(5, a) + this._f(t, b, c, d) + e + w[t] +\n             this._key[Math.floor(t/20)]) | 0;\n      e = d;\n      d = c;\n      c = this._S(30, b);\n      b = a;\n      a = tmp;\n   }\n\n   h[0] = (h[0]+a) |0;\n   h[1] = (h[1]+b) |0;\n   h[2] = (h[2]+c) |0;\n   h[3] = (h[3]+d) |0;\n   h[4] = (h[4]+e) |0;\n  }\n};\n/** @fileOverview Javascript SHA-256 implementation.\n *\n * An older version of this implementation is available in the public\n * domain, but this one is (c) Emily Stark, Mike Hamburg, Dan Boneh,\n * Stanford University 2008-2010 and BSD-licensed for liability\n * reasons.\n *\n * Special thanks to Aldo Cortesi for pointing out several bugs in\n * this code.\n *\n * @author Emily Stark\n * @author Mike Hamburg\n * @author Dan Boneh\n */\n\n/**\n * Context for a SHA-256 operation in progress.\n * @constructor\n */\nsjcl.hash.sha256 = function (hash) {\n  if (!this._key[0]) { this._precompute(); }\n  if (hash) {\n    this._h = hash._h.slice(0);\n    this._buffer = hash._buffer.slice(0);\n    this._length = hash._length;\n  } else {\n    this.reset();\n  }\n};\n\n/**\n * Hash a string or an array of words.\n * @static\n * @param {bitArray|String} data the data to hash.\n * @return {bitArray} The hash value, an array of 16 big-endian words.\n */\nsjcl.hash.sha256.hash = function (data) {\n  return (new sjcl.hash.sha256()).update(data).finalize();\n};\n\nsjcl.hash.sha256.prototype = {\n  /**\n   * The hash's block size, in bits.\n   * @constant\n   */\n  blockSize: 512,\n   \n  /**\n   * Reset the hash state.\n   * @return this\n   */\n  reset:function () {\n    this._h = this._init.slice(0);\n    this._buffer = [];\n    this._length = 0;\n    return this;\n  },\n  \n  /**\n   * Input several words to the hash.\n   * @param {bitArray|String} data the data to hash.\n   * @return this\n   */\n  update: function (data) {\n    if (typeof data === \"string\") {\n      data = sjcl.codec.utf8String.toBits(data);\n    }\n    var i, b = this._buffer = sjcl.bitArray.concat(this._buffer, data),\n        ol = this._length,\n        nl = this._length = ol + sjcl.bitArray.bitLength(data);\n    if (nl > 9007199254740991){\n      throw new sjcl.exception.invalid(\"Cannot hash more than 2^53 - 1 bits\");\n    }\n\n    if (typeof Uint32Array !== 'undefined') {\n\tvar c = new Uint32Array(b);\n    \tvar j = 0;\n    \tfor (i = 512+ol - ((512+ol) & 511); i <= nl; i+= 512) {\n      \t    this._block(c.subarray(16 * j, 16 * (j+1)));\n      \t    j += 1;\n    \t}\n    \tb.splice(0, 16 * j);\n    } else {\n\tfor (i = 512+ol - ((512+ol) & 511); i <= nl; i+= 512) {\n      \t    this._block(b.splice(0,16));\n      \t}\n    }\n    return this;\n  },\n  \n  /**\n   * Complete hashing and output the hash value.\n   * @return {bitArray} The hash value, an array of 8 big-endian words.\n   */\n  finalize:function () {\n    var i, b = this._buffer, h = this._h;\n\n    // Round out and push the buffer\n    b = sjcl.bitArray.concat(b, [sjcl.bitArray.partial(1,1)]);\n    \n    // Round out the buffer to a multiple of 16 words, less the 2 length words.\n    for (i = b.length + 2; i & 15; i++) {\n      b.push(0);\n    }\n    \n    // append the length\n    b.push(Math.floor(this._length / 0x100000000));\n    b.push(this._length | 0);\n\n    while (b.length) {\n      this._block(b.splice(0,16));\n    }\n\n    this.reset();\n    return h;\n  },\n\n  /**\n   * The SHA-256 initialization vector, to be precomputed.\n   * @private\n   */\n  _init:[],\n  /*\n  _init:[0x6a09e667,0xbb67ae85,0x3c6ef372,0xa54ff53a,0x510e527f,0x9b05688c,0x1f83d9ab,0x5be0cd19],\n  */\n  \n  /**\n   * The SHA-256 hash key, to be precomputed.\n   * @private\n   */\n  _key:[],\n  /*\n  _key:\n    [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n     0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n     0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n     0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n     0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n     0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n     0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n     0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2],\n  */\n\n\n  /**\n   * Function to precompute _init and _key.\n   * @private\n   */\n  _precompute: function () {\n    var i = 0, prime = 2, factor, isPrime;\n\n    function frac(x) { return (x-Math.floor(x)) * 0x100000000 | 0; }\n\n    for (; i<64; prime++) {\n      isPrime = true;\n      for (factor=2; factor*factor <= prime; factor++) {\n        if (prime % factor === 0) {\n          isPrime = false;\n          break;\n        }\n      }\n      if (isPrime) {\n        if (i<8) {\n          this._init[i] = frac(Math.pow(prime, 1/2));\n        }\n        this._key[i] = frac(Math.pow(prime, 1/3));\n        i++;\n      }\n    }\n  },\n  \n  /**\n   * Perform one cycle of SHA-256.\n   * @param {Uint32Array|bitArray} w one block of words.\n   * @private\n   */\n  _block:function (w) {  \n    var i, tmp, a, b,\n      h = this._h,\n      k = this._key,\n      h0 = h[0], h1 = h[1], h2 = h[2], h3 = h[3],\n      h4 = h[4], h5 = h[5], h6 = h[6], h7 = h[7];\n\n    /* Rationale for placement of |0 :\n     * If a value can overflow is original 32 bits by a factor of more than a few\n     * million (2^23 ish), there is a possibility that it might overflow the\n     * 53-bit mantissa and lose precision.\n     *\n     * To avoid this, we clamp back to 32 bits by |'ing with 0 on any value that\n     * propagates around the loop, and on the hash state h[].  I don't believe\n     * that the clamps on h4 and on h0 are strictly necessary, but it's close\n     * (for h4 anyway), and better safe than sorry.\n     *\n     * The clamps on h[] are necessary for the output to be correct even in the\n     * common case and for short inputs.\n     */\n    for (i=0; i<64; i++) {\n      // load up the input word for this round\n      if (i<16) {\n        tmp = w[i];\n      } else {\n        a   = w[(i+1 ) & 15];\n        b   = w[(i+14) & 15];\n        tmp = w[i&15] = ((a>>>7  ^ a>>>18 ^ a>>>3  ^ a<<25 ^ a<<14) + \n                         (b>>>17 ^ b>>>19 ^ b>>>10 ^ b<<15 ^ b<<13) +\n                         w[i&15] + w[(i+9) & 15]) | 0;\n      }\n      \n      tmp = (tmp + h7 + (h4>>>6 ^ h4>>>11 ^ h4>>>25 ^ h4<<26 ^ h4<<21 ^ h4<<7) +  (h6 ^ h4&(h5^h6)) + k[i]); // | 0;\n      \n      // shift register\n      h7 = h6; h6 = h5; h5 = h4;\n      h4 = h3 + tmp | 0;\n      h3 = h2; h2 = h1; h1 = h0;\n\n      h0 = (tmp +  ((h1&h2) ^ (h3&(h1^h2))) + (h1>>>2 ^ h1>>>13 ^ h1>>>22 ^ h1<<30 ^ h1<<19 ^ h1<<10)) | 0;\n    }\n\n    h[0] = h[0]+h0 | 0;\n    h[1] = h[1]+h1 | 0;\n    h[2] = h[2]+h2 | 0;\n    h[3] = h[3]+h3 | 0;\n    h[4] = h[4]+h4 | 0;\n    h[5] = h[5]+h5 | 0;\n    h[6] = h[6]+h6 | 0;\n    h[7] = h[7]+h7 | 0;\n  }\n};\n\n\n/** @fileOverview Javascript SHA-512 implementation.\n *\n * This implementation was written for CryptoJS by Jeff Mott and adapted for\n * SJCL by Stefan Thomas.\n *\n * CryptoJS (c) 2009–2012 by Jeff Mott. All rights reserved.\n * Released with New BSD License\n *\n * @author Emily Stark\n * @author Mike Hamburg\n * @author Dan Boneh\n * @author Jeff Mott\n * @author Stefan Thomas\n */\n\n/**\n * Context for a SHA-512 operation in progress.\n * @constructor\n */\nsjcl.hash.sha512 = function (hash) {\n  if (!this._key[0]) { this._precompute(); }\n  if (hash) {\n    this._h = hash._h.slice(0);\n    this._buffer = hash._buffer.slice(0);\n    this._length = hash._length;\n  } else {\n    this.reset();\n  }\n};\n\n/**\n * Hash a string or an array of words.\n * @static\n * @param {bitArray|String} data the data to hash.\n * @return {bitArray} The hash value, an array of 16 big-endian words.\n */\nsjcl.hash.sha512.hash = function (data) {\n  return (new sjcl.hash.sha512()).update(data).finalize();\n};\n\nsjcl.hash.sha512.prototype = {\n  /**\n   * The hash's block size, in bits.\n   * @constant\n   */\n  blockSize: 1024,\n   \n  /**\n   * Reset the hash state.\n   * @return this\n   */\n  reset:function () {\n    this._h = this._init.slice(0);\n    this._buffer = [];\n    this._length = 0;\n    return this;\n  },\n  \n  /**\n   * Input several words to the hash.\n   * @param {bitArray|String} data the data to hash.\n   * @return this\n   */\n  update: function (data) {\n    if (typeof data === \"string\") {\n      data = sjcl.codec.utf8String.toBits(data);\n    }\n    var i, b = this._buffer = sjcl.bitArray.concat(this._buffer, data),\n        ol = this._length,\n        nl = this._length = ol + sjcl.bitArray.bitLength(data);\n    if (nl > 9007199254740991){\n      throw new sjcl.exception.invalid(\"Cannot hash more than 2^53 - 1 bits\");\n    }\n\n    if (typeof Uint32Array !== 'undefined') {\n        var c = new Uint32Array(b);\n        var j = 0;\n        for (i = 1024+ol - ((1024+ol) & 1023); i <= nl; i+= 1024) {\n            this._block(c.subarray(32 * j, 32 * (j+1)));\n            j += 1;\n        }\n        b.splice(0, 32 * j);\n    } else {\n        for (i = 1024+ol - ((1024+ol) & 1023); i <= nl; i+= 1024) {\n            this._block(b.splice(0,32));\n        }\n    }\n    return this;\n  },\n  \n  /**\n   * Complete hashing and output the hash value.\n   * @return {bitArray} The hash value, an array of 16 big-endian words.\n   */\n  finalize:function () {\n    var i, b = this._buffer, h = this._h;\n\n    // Round out and push the buffer\n    b = sjcl.bitArray.concat(b, [sjcl.bitArray.partial(1,1)]);\n\n    // Round out the buffer to a multiple of 32 words, less the 4 length words.\n    for (i = b.length + 4; i & 31; i++) {\n      b.push(0);\n    }\n\n    // append the length\n    b.push(0);\n    b.push(0);\n    b.push(Math.floor(this._length / 0x100000000));\n    b.push(this._length | 0);\n\n    while (b.length) {\n      this._block(b.splice(0,32));\n    }\n\n    this.reset();\n    return h;\n  },\n\n  /**\n   * The SHA-512 initialization vector, to be precomputed.\n   * @private\n   */\n  _init:[],\n\n  /**\n   * Least significant 24 bits of SHA512 initialization values.\n   *\n   * Javascript only has 53 bits of precision, so we compute the 40 most\n   * significant bits and add the remaining 24 bits as constants.\n   *\n   * @private\n   */\n  _initr: [ 0xbcc908, 0xcaa73b, 0x94f82b, 0x1d36f1, 0xe682d1, 0x3e6c1f, 0x41bd6b, 0x7e2179 ],\n\n  /*\n  _init:\n  [0x6a09e667, 0xf3bcc908, 0xbb67ae85, 0x84caa73b, 0x3c6ef372, 0xfe94f82b, 0xa54ff53a, 0x5f1d36f1,\n   0x510e527f, 0xade682d1, 0x9b05688c, 0x2b3e6c1f, 0x1f83d9ab, 0xfb41bd6b, 0x5be0cd19, 0x137e2179],\n  */\n\n  /**\n   * The SHA-512 hash key, to be precomputed.\n   * @private\n   */\n  _key:[],\n\n  /**\n   * Least significant 24 bits of SHA512 key values.\n   * @private\n   */\n  _keyr:\n  [0x28ae22, 0xef65cd, 0x4d3b2f, 0x89dbbc, 0x48b538, 0x05d019, 0x194f9b, 0x6d8118,\n   0x030242, 0x706fbe, 0xe4b28c, 0xffb4e2, 0x7b896f, 0x1696b1, 0xc71235, 0x692694,\n   0xf14ad2, 0x4f25e3, 0x8cd5b5, 0xac9c65, 0x2b0275, 0xa6e483, 0x41fbd4, 0x1153b5,\n   0x66dfab, 0xb43210, 0xfb213f, 0xef0ee4, 0xa88fc2, 0x0aa725, 0x03826f, 0x0e6e70,\n   0xd22ffc, 0x26c926, 0xc42aed, 0x95b3df, 0xaf63de, 0x77b2a8, 0xedaee6, 0x82353b,\n   0xf10364, 0x423001, 0xf89791, 0x54be30, 0xef5218, 0x65a910, 0x71202a, 0xbbd1b8,\n   0xd2d0c8, 0x41ab53, 0x8eeb99, 0x9b48a8, 0xc95a63, 0x418acb, 0x63e373, 0xb2b8a3,\n   0xefb2fc, 0x172f60, 0xf0ab72, 0x6439ec, 0x631e28, 0x82bde9, 0xc67915, 0x72532b,\n   0x26619c, 0xc0c207, 0xe0eb1e, 0x6ed178, 0x176fba, 0xc898a6, 0xf90dae, 0x1c471b,\n   0x047d84, 0xc72493, 0xc9bebc, 0x100d4c, 0x3e42b6, 0x657e2a, 0xd6faec, 0x475817],\n\n  /*\n  _key:\n  [0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd, 0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n   0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019, 0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n   0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe, 0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n   0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1, 0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n   0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3, 0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n   0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483, 0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n   0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210, 0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n   0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725, 0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n   0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926, 0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n   0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8, 0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n   0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001, 0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n   0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910, 0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n   0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53, 0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n   0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb, 0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n   0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60, 0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n   0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9, 0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n   0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207, 0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n   0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6, 0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n   0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493, 0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n   0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a, 0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817],\n  */\n\n  /**\n   * Function to precompute _init and _key.\n   * @private\n   */\n  _precompute: function () {\n    // XXX: This code is for precomputing the SHA256 constants, change for\n    //      SHA512 and re-enable.\n    var i = 0, prime = 2, factor , isPrime;\n\n    function frac(x)  { return (x-Math.floor(x)) * 0x100000000 | 0; }\n    function frac2(x) { return (x-Math.floor(x)) * 0x10000000000 & 0xff; }\n\n    for (; i<80; prime++) {\n      isPrime = true;\n      for (factor=2; factor*factor <= prime; factor++) {\n        if (prime % factor === 0) {\n          isPrime = false;\n          break;\n        }\n      }\n      if (isPrime) {\n        if (i<8) {\n          this._init[i*2] = frac(Math.pow(prime, 1/2));\n          this._init[i*2+1] = (frac2(Math.pow(prime, 1/2)) << 24) | this._initr[i];\n        }\n        this._key[i*2] = frac(Math.pow(prime, 1/3));\n        this._key[i*2+1] = (frac2(Math.pow(prime, 1/3)) << 24) | this._keyr[i];\n        i++;\n      }\n    }\n  },\n\n  /**\n   * Perform one cycle of SHA-512.\n   * @param {Uint32Array|bitArray} words one block of words.\n   * @private\n   */\n  _block:function (words) {\n    var i, wrh, wrl,\n        h = this._h,\n        k = this._key,\n        h0h = h[ 0], h0l = h[ 1], h1h = h[ 2], h1l = h[ 3],\n        h2h = h[ 4], h2l = h[ 5], h3h = h[ 6], h3l = h[ 7],\n        h4h = h[ 8], h4l = h[ 9], h5h = h[10], h5l = h[11],\n        h6h = h[12], h6l = h[13], h7h = h[14], h7l = h[15];\n    var w;\n    if (typeof Uint32Array !== 'undefined') {\n\t// When words is passed to _block, it has 32 elements. SHA512 _block\n\t// function extends words with new elements (at the end there are 160 elements). \n\t// The problem is that if we use Uint32Array instead of Array, \n\t// the length of Uint32Array cannot be changed. Thus, we replace words with a \n\t// normal Array here.\n        w = Array(160); // do not use Uint32Array here as the instantiation is slower\n        for (var j=0; j<32; j++){\n    \t    w[j] = words[j]; \n        }\n    } else {\n\tw = words;\n    } \n\n    // Working variables\n    var ah = h0h, al = h0l, bh = h1h, bl = h1l,\n        ch = h2h, cl = h2l, dh = h3h, dl = h3l,\n        eh = h4h, el = h4l, fh = h5h, fl = h5l,\n        gh = h6h, gl = h6l, hh = h7h, hl = h7l;\n\n    for (i=0; i<80; i++) {\n      // load up the input word for this round\n      if (i<16) {\n        wrh = w[i * 2];\n        wrl = w[i * 2 + 1];\n      } else {\n        // Gamma0\n        var gamma0xh = w[(i-15) * 2];\n        var gamma0xl = w[(i-15) * 2 + 1];\n        var gamma0h =\n          ((gamma0xl << 31) | (gamma0xh >>> 1)) ^\n          ((gamma0xl << 24) | (gamma0xh >>> 8)) ^\n           (gamma0xh >>> 7);\n        var gamma0l =\n          ((gamma0xh << 31) | (gamma0xl >>> 1)) ^\n          ((gamma0xh << 24) | (gamma0xl >>> 8)) ^\n          ((gamma0xh << 25) | (gamma0xl >>> 7));\n\n        // Gamma1\n        var gamma1xh = w[(i-2) * 2];\n        var gamma1xl = w[(i-2) * 2 + 1];\n        var gamma1h =\n          ((gamma1xl << 13) | (gamma1xh >>> 19)) ^\n          ((gamma1xh << 3)  | (gamma1xl >>> 29)) ^\n           (gamma1xh >>> 6);\n        var gamma1l =\n          ((gamma1xh << 13) | (gamma1xl >>> 19)) ^\n          ((gamma1xl << 3)  | (gamma1xh >>> 29)) ^\n          ((gamma1xh << 26) | (gamma1xl >>> 6));\n\n        // Shortcuts\n        var wr7h = w[(i-7) * 2];\n        var wr7l = w[(i-7) * 2 + 1];\n\n        var wr16h = w[(i-16) * 2];\n        var wr16l = w[(i-16) * 2 + 1];\n\n        // W(round) = gamma0 + W(round - 7) + gamma1 + W(round - 16)\n        wrl = gamma0l + wr7l;\n        wrh = gamma0h + wr7h + ((wrl >>> 0) < (gamma0l >>> 0) ? 1 : 0);\n        wrl += gamma1l;\n        wrh += gamma1h + ((wrl >>> 0) < (gamma1l >>> 0) ? 1 : 0);\n        wrl += wr16l;\n        wrh += wr16h + ((wrl >>> 0) < (wr16l >>> 0) ? 1 : 0);\n      }\n\n      w[i*2]     = wrh |= 0;\n      w[i*2 + 1] = wrl |= 0;\n\n      // Ch\n      var chh = (eh & fh) ^ (~eh & gh);\n      var chl = (el & fl) ^ (~el & gl);\n\n      // Maj\n      var majh = (ah & bh) ^ (ah & ch) ^ (bh & ch);\n      var majl = (al & bl) ^ (al & cl) ^ (bl & cl);\n\n      // Sigma0\n      var sigma0h = ((al << 4) | (ah >>> 28)) ^ ((ah << 30) | (al >>> 2)) ^ ((ah << 25) | (al >>> 7));\n      var sigma0l = ((ah << 4) | (al >>> 28)) ^ ((al << 30) | (ah >>> 2)) ^ ((al << 25) | (ah >>> 7));\n\n      // Sigma1\n      var sigma1h = ((el << 18) | (eh >>> 14)) ^ ((el << 14) | (eh >>> 18)) ^ ((eh << 23) | (el >>> 9));\n      var sigma1l = ((eh << 18) | (el >>> 14)) ^ ((eh << 14) | (el >>> 18)) ^ ((el << 23) | (eh >>> 9));\n\n      // K(round)\n      var krh = k[i*2];\n      var krl = k[i*2+1];\n\n      // t1 = h + sigma1 + ch + K(round) + W(round)\n      var t1l = hl + sigma1l;\n      var t1h = hh + sigma1h + ((t1l >>> 0) < (hl >>> 0) ? 1 : 0);\n      t1l += chl;\n      t1h += chh + ((t1l >>> 0) < (chl >>> 0) ? 1 : 0);\n      t1l += krl;\n      t1h += krh + ((t1l >>> 0) < (krl >>> 0) ? 1 : 0);\n      t1l = t1l + wrl|0;   // FF32..FF34 perf issue https://bugzilla.mozilla.org/show_bug.cgi?id=1054972\n      t1h += wrh + ((t1l >>> 0) < (wrl >>> 0) ? 1 : 0);\n\n      // t2 = sigma0 + maj\n      var t2l = sigma0l + majl;\n      var t2h = sigma0h + majh + ((t2l >>> 0) < (sigma0l >>> 0) ? 1 : 0);\n\n      // Update working variables\n      hh = gh;\n      hl = gl;\n      gh = fh;\n      gl = fl;\n      fh = eh;\n      fl = el;\n      el = (dl + t1l) | 0;\n      eh = (dh + t1h + ((el >>> 0) < (dl >>> 0) ? 1 : 0)) | 0;\n      dh = ch;\n      dl = cl;\n      ch = bh;\n      cl = bl;\n      bh = ah;\n      bl = al;\n      al = (t1l + t2l) | 0;\n      ah = (t1h + t2h + ((al >>> 0) < (t1l >>> 0) ? 1 : 0)) | 0;\n    }\n\n    // Intermediate hash\n    h0l = h[1] = (h0l + al) | 0;\n    h[0] = (h0h + ah + ((h0l >>> 0) < (al >>> 0) ? 1 : 0)) | 0;\n    h1l = h[3] = (h1l + bl) | 0;\n    h[2] = (h1h + bh + ((h1l >>> 0) < (bl >>> 0) ? 1 : 0)) | 0;\n    h2l = h[5] = (h2l + cl) | 0;\n    h[4] = (h2h + ch + ((h2l >>> 0) < (cl >>> 0) ? 1 : 0)) | 0;\n    h3l = h[7] = (h3l + dl) | 0;\n    h[6] = (h3h + dh + ((h3l >>> 0) < (dl >>> 0) ? 1 : 0)) | 0;\n    h4l = h[9] = (h4l + el) | 0;\n    h[8] = (h4h + eh + ((h4l >>> 0) < (el >>> 0) ? 1 : 0)) | 0;\n    h5l = h[11] = (h5l + fl) | 0;\n    h[10] = (h5h + fh + ((h5l >>> 0) < (fl >>> 0) ? 1 : 0)) | 0;\n    h6l = h[13] = (h6l + gl) | 0;\n    h[12] = (h6h + gh + ((h6l >>> 0) < (gl >>> 0) ? 1 : 0)) | 0;\n    h7l = h[15] = (h7l + hl) | 0;\n    h[14] = (h7h + hh + ((h7l >>> 0) < (hl >>> 0) ? 1 : 0)) | 0;\n  }\n};\n\n\n/** @fileOverview HMAC implementation.\n *\n * @author Emily Stark\n * @author Mike Hamburg\n * @author Dan Boneh\n */\n\n/** HMAC with the specified hash function.\n * @constructor\n * @param {bitArray} key the key for HMAC.\n * @param {Object} [Hash=sjcl.hash.sha256] The hash function to use.\n */\nsjcl.misc.hmac = function (key, Hash) {\n  this._hash = Hash = Hash || sjcl.hash.sha256;\n  var exKey = [[],[]], i,\n      bs = Hash.prototype.blockSize / 32;\n  this._baseHash = [new Hash(), new Hash()];\n\n  if (key.length > bs) {\n    key = Hash.hash(key);\n  }\n  \n  for (i=0; i<bs; i++) {\n    exKey[0][i] = key[i]^0x36363636;\n    exKey[1][i] = key[i]^0x5C5C5C5C;\n  }\n  \n  this._baseHash[0].update(exKey[0]);\n  this._baseHash[1].update(exKey[1]);\n  this._resultHash = new Hash(this._baseHash[0]);\n};\n\n/** HMAC with the specified hash function.  Also called encrypt since it's a prf.\n * @param {bitArray|String} data The data to mac.\n */\nsjcl.misc.hmac.prototype.encrypt = sjcl.misc.hmac.prototype.mac = function (data) {\n  if (!this._updated) {\n    this.update(data);\n    return this.digest(data);\n  } else {\n    throw new sjcl.exception.invalid(\"encrypt on already updated hmac called!\");\n  }\n};\n\nsjcl.misc.hmac.prototype.reset = function () {\n  this._resultHash = new this._hash(this._baseHash[0]);\n  this._updated = false;\n};\n\nsjcl.misc.hmac.prototype.update = function (data) {\n  this._updated = true;\n  this._resultHash.update(data);\n};\n\nsjcl.misc.hmac.prototype.digest = function () {\n  var w = this._resultHash.finalize(), result = new (this._hash)(this._baseHash[1]).update(w).finalize();\n\n  this.reset();\n\n  return result;\n};\n; export default sjcl;","// eslint-disable-next-line import/no-extraneous-dependencies\nimport sjcl from 'sjcl'; // SJCL is included during compilation.\n\nimport { InternalUtils } from './utils';\n\n/**\n * An object containing some cryptography functions\n * with dirty workarounds for Node.js and browsers.\n * @private\n * @namespace Crypto\n * @type {Object}\n */\nexport const Crypto = {};\n\n/**\n * Returns random bytes.\n * @memberof Crypto\n * @method randomBytes\n * @param {number} size Size.\n * @returns {ArrayBuffer} Random bytes.\n */\nCrypto.randomBytes = undefined;\n\n/**\n * Calculates an HMAC digest.\n * In Node.js, the command `openssl list -digest-algorithms` displays the available digest algorithms.\n * @memberof Crypto\n * @method hmacDigest\n * @param {string} algorithm Algorithm.\n * @param {ArrayBuffer} key Key.\n * @param {ArrayBuffer} message Message.\n * @returns {ArrayBuffer} Digest.\n */\nCrypto.hmacDigest = undefined;\n\nif (InternalUtils.isNode) {\n\tconst NodeBuffer = InternalUtils.globalThis.Buffer;\n\tconst NodeCrypto = InternalUtils.require('crypto');\n\n\tlet nodeBufferFromArrayBuffer;\n\tif (typeof NodeBuffer.from === 'function') {\n\t\tnodeBufferFromArrayBuffer = NodeBuffer.from;\n\t} else {\n\t\t// Node.js < 5.10.0\n\t\tnodeBufferFromArrayBuffer = arrayBuffer => {\n\t\t\tconst nodeBuffer = new NodeBuffer(arrayBuffer.byteLength);\n\t\t\tconst uint8Array = new Uint8Array(arrayBuffer);\n\t\t\tfor (let i = 0; i < uint8Array.length; i++) {\n\t\t\t\tnodeBuffer[i] = uint8Array[i];\n\t\t\t}\n\t\t\treturn nodeBuffer;\n\t\t};\n\t}\n\n\tlet nodeBufferToArrayBuffer;\n\tif (NodeBuffer.prototype instanceof Uint8Array) {\n\t\tnodeBufferToArrayBuffer = nodeBuffer => nodeBuffer.buffer;\n\t} else {\n\t\t// Node.js < 4.0.0\n\t\tnodeBufferToArrayBuffer = nodeBuffer => {\n\t\t\tconst uint8Array = new Uint8Array(nodeBuffer.length);\n\t\t\tfor (let i = 0; i < uint8Array.length; i++) {\n\t\t\t\tuint8Array[i] = nodeBuffer[i];\n\t\t\t}\n\t\t\treturn uint8Array.buffer;\n\t\t};\n\t}\n\n\tCrypto.randomBytes = size => {\n\t\tconst randomBytes = NodeCrypto.randomBytes(size);\n\t\treturn nodeBufferToArrayBuffer(randomBytes);\n\t};\n\n\tCrypto.hmacDigest = (algorithm, key, message) => {\n\t\tconst hmac = NodeCrypto.createHmac(algorithm, nodeBufferFromArrayBuffer(key));\n\t\thmac.update(nodeBufferFromArrayBuffer(message));\n\t\treturn nodeBufferToArrayBuffer(hmac.digest());\n\t};\n} else {\n\tconst BrowserCrypto = InternalUtils.globalThis.crypto || InternalUtils.globalThis.msCrypto;\n\n\tlet getRandomValues;\n\tif (typeof BrowserCrypto !== 'undefined' && typeof BrowserCrypto.getRandomValues === 'function') {\n\t\tgetRandomValues = array => {\n\t\t\tBrowserCrypto.getRandomValues(array);\n\t\t};\n\t} else {\n\t\tInternalUtils.console.warn('Cryptography API not available, falling back to \\'Math.random\\'...');\n\t\tgetRandomValues = array => {\n\t\t\tfor (let i = 0; i < array.length; i++) {\n\t\t\t\tarray[i] = Math.floor(Math.random() * 256);\n\t\t\t}\n\t\t};\n\t}\n\n\tCrypto.randomBytes = size => {\n\t\tconst randomBytes = new Uint8Array(size);\n\t\tgetRandomValues(randomBytes);\n\t\treturn randomBytes.buffer;\n\t};\n\n\tCrypto.hmacDigest = (algorithm, key, message) => {\n\t\tconst hash = sjcl.hash[algorithm.toLowerCase()];\n\t\tif (typeof hash === 'undefined') {\n\t\t\tthrow new TypeError('Unknown hash function');\n\t\t}\n\t\t// eslint-disable-next-line new-cap\n\t\tconst hmac = new sjcl.misc.hmac(sjcl.codec.arrayBuffer.toBits(key), hash);\n\t\thmac.update(sjcl.codec.arrayBuffer.toBits(message));\n\t\treturn sjcl.codec.arrayBuffer.fromBits(hmac.digest(), false);\n\t};\n}\n","import { Utils } from './utils';\nimport { Crypto } from './crypto';\n\n/**\n * Secret key object.\n */\nexport class Secret {\n\t/**\n\t * @param {Object} [config] Configuration options.\n\t * @param {ArrayBuffer} [config.buffer=Crypto.randomBytes] Secret key.\n\t * @param {number} [config.size=20] Number of random bytes to generate, ignored if 'buffer' is provided.\n\t */\n\tconstructor({ buffer, size = 20 } = {}) {\n\t\t/**\n\t\t * Secret key.\n\t\t * @type {ArrayBuffer}\n\t\t */\n\t\tthis.buffer = typeof buffer === 'undefined'\n\t\t\t? Crypto.randomBytes(size)\n\t\t\t: buffer;\n\t}\n\n\t/**\n\t * Converts a raw string to a Secret object.\n\t * @param {string} str Raw string.\n\t * @returns {Secret} Secret object.\n\t */\n\tstatic fromRaw(str) {\n\t\treturn new Secret({ buffer: Utils.raw.encode(str) });\n\t}\n\n\t/**\n\t * Converts a base32 string to a Secret object.\n\t * @param {string} str Base32 string.\n\t * @returns {Secret} Secret object.\n\t */\n\tstatic fromB32(str) {\n\t\treturn new Secret({ buffer: Utils.b32.encode(str) });\n\t}\n\n\t/**\n\t * Converts a hexadecimal string to a Secret object.\n\t * @param {string} str Hexadecimal string.\n\t * @returns {Secret} Secret object.\n\t */\n\tstatic fromHex(str) {\n\t\treturn new Secret({ buffer: Utils.hex.encode(str) });\n\t}\n\n\t/**\n\t * String representation of secret key.\n\t * @type {string}\n\t */\n\tget raw() {\n\t\tObject.defineProperty(this, 'raw', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\twritable: true,\n\t\t\tvalue: Utils.raw.decode(this.buffer)\n\t\t});\n\n\t\treturn this.raw;\n\t}\n\n\t/**\n\t * Base32 representation of secret key.\n\t * @type {string}\n\t */\n\tget b32() {\n\t\tObject.defineProperty(this, 'b32', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\twritable: true,\n\t\t\tvalue: Utils.b32.decode(this.buffer)\n\t\t});\n\n\t\treturn this.b32;\n\t}\n\n\t/**\n\t * Hexadecimal representation of secret key.\n\t * @type {string}\n\t */\n\tget hex() {\n\t\tObject.defineProperty(this, 'hex', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\twritable: true,\n\t\t\tvalue: Utils.hex.decode(this.buffer)\n\t\t});\n\n\t\treturn this.hex;\n\t}\n}\n","import { Utils } from './utils';\nimport { Secret } from './secret';\n// eslint-disable-next-line import/no-cycle\nimport { HOTP, TOTP } from './otp';\n\n/**\n * Valid key URI parameters.\n * @private\n * @type {Array}\n */\nconst OTPURI_PARAMS = ['issuer', 'secret', 'algorithm', 'digits', 'counter', 'period'];\n\n/**\n * Key URI regex.\n *   otpauth://TYPE/[ISSUER:]LABEL?PARAMETERS\n * @private\n * @type {RegExp}\n */\nconst OTPURI_REGEX = new RegExp(`^otpauth:\\\\/\\\\/([ht]otp)\\\\/(.+)\\\\?((?:&?(?:${OTPURI_PARAMS.join('|')})=[^&]+)+)$`, 'i');\n\n/**\n * RFC 4648 base32 alphabet without pad.\n * @private\n * @type {string}\n */\nconst SECRET_REGEX = /^[2-7A-Z]+$/i;\n\n/**\n * Regex for supported algorithms.\n * @private\n * @type {RegExp}\n */\nconst ALGORITHM_REGEX = /^SHA(?:1|256|512)$/i;\n\n/**\n * Integer regex.\n * @private\n * @type {RegExp}\n */\nconst INTEGER_REGEX = /^[+-]?\\d+$/;\n\n/**\n * Positive integer regex.\n * @private\n * @type {RegExp}\n */\nconst POSITIVE_INTEGER_REGEX = /^\\+?[1-9]\\d*$/;\n\n/**\n * HOTP/TOTP object/string conversion.\n * @see https://github.com/google/google-authenticator/wiki/Key-Uri-Format\n */\nexport class URI {\n\t/**\n\t * Parses a Google Authenticator key URI and returns an HOTP/TOTP object.\n\t * @param {string} uri Google Authenticator Key URI.\n\t * @returns {HOTP|TOTP} HOTP/TOTP object.\n\t */\n\tstatic parse(uri) {\n\t\tlet uriGroups;\n\n\t\ttry {\n\t\t\turiGroups = uri.match(OTPURI_REGEX);\n\t\t} catch (error) { /* Handled below */ }\n\n\t\tif (!Array.isArray(uriGroups)) {\n\t\t\tthrow new URIError('Invalid URI format');\n\t\t}\n\n\t\t// Extract URI groups.\n\t\tconst uriType = uriGroups[1].toLowerCase();\n\t\tconst uriLabel = uriGroups[2].split(/:(.+)/, 2).map(decodeURIComponent);\n\t\tconst uriParams = uriGroups[3].split('&').reduce((acc, cur) => {\n\t\t\tconst pairArr = cur.split(/=(.+)/, 2).map(decodeURIComponent);\n\t\t\tconst pairKey = pairArr[0].toLowerCase();\n\t\t\tconst pairVal = pairArr[1];\n\t\t\tconst pairAcc = acc;\n\n\t\t\tpairAcc[pairKey] = pairVal;\n\t\t\treturn pairAcc;\n\t\t}, {});\n\n\t\t// 'OTP' will be instantiated with 'config' argument\n\t\tlet OTP;\n\t\tconst config = {};\n\n\t\tif (uriType === 'hotp') {\n\t\t\tOTP = HOTP;\n\n\t\t\t// Counter: required\n\t\t\tif (typeof uriParams.counter !== 'undefined' && INTEGER_REGEX.test(uriParams.counter)) {\n\t\t\t\tconfig.counter = parseInt(uriParams.counter, 10);\n\t\t\t} else {\n\t\t\t\tthrow new TypeError('Missing or invalid \\'counter\\' parameter');\n\t\t\t}\n\t\t} else if (uriType === 'totp') {\n\t\t\tOTP = TOTP;\n\n\t\t\t// Period: optional\n\t\t\tif (typeof uriParams.period !== 'undefined') {\n\t\t\t\tif (POSITIVE_INTEGER_REGEX.test(uriParams.period)) {\n\t\t\t\t\tconfig.period = parseInt(uriParams.period, 10);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new TypeError('Invalid \\'period\\' parameter');\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Unknown OTP type');\n\t\t}\n\n\t\t// Label: required\n\t\t// Issuer: optional\n\t\tif (uriLabel.length === 2) {\n\t\t\tconfig.label = uriLabel[1];\n\t\t\tif (typeof uriParams.issuer === 'undefined') {\n\t\t\t\tconfig.issuer = uriLabel[0];\n\t\t\t} else if (uriParams.issuer === uriLabel[0]) {\n\t\t\t\tconfig.issuer = uriParams.issuer;\n\t\t\t} else {\n\t\t\t\tthrow new TypeError('Invalid \\'issuer\\' parameter');\n\t\t\t}\n\t\t} else {\n\t\t\tconfig.label = uriLabel[0];\n\t\t\tif (typeof uriParams.issuer !== 'undefined') {\n\t\t\t\tconfig.issuer = uriParams.issuer;\n\t\t\t}\n\t\t}\n\n\t\t// Secret: required\n\t\tif (typeof uriParams.secret !== 'undefined' && SECRET_REGEX.test(uriParams.secret)) {\n\t\t\tconfig.secret = new Secret({ buffer: Utils.b32.encode(uriParams.secret) });\n\t\t} else {\n\t\t\tthrow new TypeError('Missing or invalid \\'secret\\' parameter');\n\t\t}\n\n\t\t// Algorithm: optional\n\t\tif (typeof uriParams.algorithm !== 'undefined') {\n\t\t\tif (ALGORITHM_REGEX.test(uriParams.algorithm)) {\n\t\t\t\tconfig.algorithm = uriParams.algorithm;\n\t\t\t} else {\n\t\t\t\tthrow new TypeError('Invalid \\'algorithm\\' parameter');\n\t\t\t}\n\t\t}\n\n\t\t// Digits: optional\n\t\tif (typeof uriParams.digits !== 'undefined') {\n\t\t\tif (POSITIVE_INTEGER_REGEX.test(uriParams.digits)) {\n\t\t\t\tconfig.digits = parseInt(uriParams.digits, 10);\n\t\t\t} else {\n\t\t\t\tthrow new TypeError('Invalid \\'digits\\' parameter');\n\t\t\t}\n\t\t}\n\n\t\treturn new OTP(config);\n\t}\n\n\t/**\n\t * Converts an HOTP/TOTP object to a Google Authenticator key URI.\n\t * @param {HOTP|TOTP} otp HOTP/TOTP object.\n\t * @param {Object} [config] Configuration options.\n\t * @param {boolean} [config.legacyIssuer=true] Set issuer label prefix.\n\t * @returns {string} Google Authenticator Key URI.\n\t */\n\tstatic stringify(otp, { legacyIssuer = true } = {}) {\n\t\tconst isHOTP = otp instanceof HOTP;\n\t\tconst isTOTP = otp instanceof TOTP;\n\n\t\tif (!isHOTP && !isTOTP) {\n\t\t\tthrow new TypeError('Invalid \\'HOTP/TOTP\\' object');\n\t\t}\n\n\t\t// Key URI format:\n\t\t// otpauth://TYPE/[ISSUER:]LABEL?PARAMETERS\n\t\tlet uri = 'otpauth://';\n\n\t\t// Type\n\t\turi += `${isTOTP ? 'totp' : 'hotp'}/`;\n\n\t\t// Label and optional issuer\n\t\tif (otp.issuer.length > 0) {\n\t\t\t// Legacy label prefix\n\t\t\tif (legacyIssuer) uri += `${encodeURIComponent(otp.issuer)}:`;\n\t\t\t// Label\n\t\t\turi += `${encodeURIComponent(otp.label)}?`;\n\t\t\t// Issuer\n\t\t\turi += `issuer=${encodeURIComponent(otp.issuer)}&`;\n\t\t} else {\n\t\t\t// Label\n\t\t\turi += `${encodeURIComponent(otp.label)}?`;\n\t\t}\n\n\t\t// Generic parameters\n\t\turi += `secret=${encodeURIComponent(otp.secret.b32)}`\n\t\t\t+ `&algorithm=${encodeURIComponent(otp.algorithm)}`\n\t\t\t+ `&digits=${encodeURIComponent(otp.digits)}`;\n\n\t\t// Extra parameters\n\t\tif (isTOTP) {\n\t\t\t// TOTP parameters\n\t\t\turi += `&period=${encodeURIComponent(otp.period)}`;\n\t\t} else {\n\t\t\t// HOTP parameters\n\t\t\turi += `&counter=${encodeURIComponent(otp.counter)}`;\n\t\t}\n\n\t\treturn uri;\n\t}\n}\n","import { Utils } from './utils';\nimport { Crypto } from './crypto';\nimport { Secret } from './secret';\n// eslint-disable-next-line import/no-cycle\nimport { URI } from './uri';\n\n/**\n * Default configuration.\n * @private\n * @type {Object}\n */\nconst defaults = {\n\tissuer: '',\n\tlabel: 'OTPAuth',\n\talgorithm: 'SHA1',\n\tdigits: 6,\n\tcounter: 0,\n\tperiod: 30,\n\twindow: 50\n};\n\n/**\n * HOTP: An HMAC-based One-time Password Algorithm (RFC 4226).\n * @see https://tools.ietf.org/html/rfc4226\n */\nexport class HOTP {\n\t/**\n\t * @param {Object} [config] Configuration options.\n\t * @param {string} [config.issuer=''] Account provider.\n\t * @param {string} [config.label='OTPAuth'] Account label.\n\t * @param {Secret|string} [config.secret=Secret] Secret key.\n\t * @param {string} [config.algorithm='SHA1'] HMAC hashing algorithm.\n\t * @param {number} [config.digits=6] Token length.\n\t * @param {number} [config.counter=0] Initial counter value.\n\t */\n\tconstructor({\n\t\tissuer = defaults.issuer,\n\t\tlabel = defaults.label,\n\t\tsecret = new Secret(),\n\t\talgorithm = defaults.algorithm,\n\t\tdigits = defaults.digits,\n\t\tcounter = defaults.counter\n\t} = {}) {\n\t\t/**\n\t\t * Account provider.\n\t\t * @type {string}\n\t\t */\n\t\tthis.issuer = issuer;\n\t\t/**\n\t\t * Account label.\n\t\t * @type {string}\n\t\t */\n\t\tthis.label = label;\n\t\t/**\n\t\t * Secret key.\n\t\t * @type {Secret}\n\t\t */\n\t\tthis.secret = typeof secret === 'string'\n\t\t\t? Secret.fromB32(secret)\n\t\t\t: secret;\n\t\t/**\n\t\t * HMAC hashing algorithm.\n\t\t * @type {string}\n\t\t */\n\t\tthis.algorithm = algorithm;\n\t\t/**\n\t\t * Token length.\n\t\t * @type {number}\n\t\t */\n\t\tthis.digits = digits;\n\t\t/**\n\t\t * Initial counter value.\n\t\t * @type {number}\n\t\t */\n\t\tthis.counter = counter;\n\t}\n\n\t/**\n\t * Generates an HOTP token.\n\t * @param {Object} config Configuration options.\n\t * @param {Secret} config.secret Secret key.\n\t * @param {string} [config.algorithm='SHA1'] HMAC hashing algorithm.\n\t * @param {number} [config.digits=6] Token length.\n\t * @param {number} [config.counter=0] Counter value.\n\t * @returns {string} Token.\n\t */\n\tstatic generate({\n\t\tsecret,\n\t\talgorithm = defaults.algorithm,\n\t\tdigits = defaults.digits,\n\t\tcounter = defaults.counter\n\t}) {\n\t\tconst digest = new Uint8Array(Crypto.hmacDigest(algorithm, secret.buffer, Utils.uint.encode(counter)));\n\t\tconst offset = digest[digest.byteLength - 1] & 15;\n\t\tconst otp = (\n\t\t\t((digest[offset] & 127) << 24)\n\t\t\t| ((digest[offset + 1] & 255) << 16)\n\t\t\t| ((digest[offset + 2] & 255) << 8)\n\t\t\t| (digest[offset + 3] & 255)\n\t\t) % (10 ** digits);\n\n\t\treturn Utils.pad(otp, digits);\n\t}\n\n\t/**\n\t * Generates an HOTP token.\n\t * @param {Object} [config] Configuration options.\n\t * @param {number} [config.counter=this.counter++] Counter value.\n\t * @returns {string} Token.\n\t */\n\tgenerate({\n\t\tcounter = this.counter++\n\t} = {}) {\n\t\treturn HOTP.generate({\n\t\t\tsecret: this.secret,\n\t\t\talgorithm: this.algorithm,\n\t\t\tdigits: this.digits,\n\t\t\tcounter\n\t\t});\n\t}\n\n\t/**\n\t * Validates an HOTP token.\n\t * @param {Object} config Configuration options.\n\t * @param {string} config.token Token value.\n\t * @param {Secret} config.secret Secret key.\n\t * @param {string} [config.algorithm='SHA1'] HMAC hashing algorithm.\n\t * @param {number} [config.counter=0] Counter value.\n\t * @param {number} [config.window=50] Window of counter values to test.\n\t * @returns {number|null} Token delta, or null if the token is not found.\n\t */\n\tstatic validate({\n\t\ttoken,\n\t\tsecret,\n\t\talgorithm,\n\t\tcounter = defaults.counter,\n\t\twindow = defaults.window\n\t}) {\n\t\tfor (let i = counter - window; i <= counter + window; ++i) {\n\t\t\tconst generatedToken = HOTP.generate({\n\t\t\t\tsecret,\n\t\t\t\talgorithm,\n\t\t\t\tdigits: token.length,\n\t\t\t\tcounter: i\n\t\t\t});\n\n\t\t\tif (token === generatedToken) {\n\t\t\t\treturn i - counter;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Validates an HOTP token.\n\t * @param {Object} config Configuration options.\n\t * @param {string} config.token Token value.\n\t * @param {number} [config.counter=this.counter] Counter value.\n\t * @param {number} [config.window=50] Window of counter values to test.\n\t * @returns {number|null} Token delta, or null if the token is not found.\n\t */\n\tvalidate({\n\t\ttoken,\n\t\tcounter = this.counter,\n\t\twindow\n\t}) {\n\t\treturn HOTP.validate({\n\t\t\ttoken: Utils.pad(token, this.digits),\n\t\t\tsecret: this.secret,\n\t\t\talgorithm: this.algorithm,\n\t\t\tcounter,\n\t\t\twindow\n\t\t});\n\t}\n\n\t/**\n\t * Returns a Google Authenticator key URI.\n\t * @returns {string} URI.\n\t */\n\ttoString() {\n\t\treturn URI.stringify(this);\n\t}\n}\n\n/**\n * TOTP: Time-Based One-Time Password Algorithm (RFC 6238).\n * @see https://tools.ietf.org/html/rfc6238\n */\nexport class TOTP {\n\t/**\n\t * @param {Object} [config] Configuration options.\n\t * @param {string} [config.issuer=''] Account provider.\n\t * @param {string} [config.label='OTPAuth'] Account label.\n\t * @param {Secret|string} [config.secret=Secret] Secret key.\n\t * @param {string} [config.algorithm='SHA1'] HMAC hashing algorithm.\n\t * @param {number} [config.digits=6] Token length.\n\t * @param {number} [config.period=30] Token time-step duration.\n\t */\n\tconstructor({\n\t\tissuer = defaults.issuer,\n\t\tlabel = defaults.label,\n\t\tsecret = new Secret(),\n\t\talgorithm = defaults.algorithm,\n\t\tdigits = defaults.digits,\n\t\tperiod = defaults.period\n\t} = {}) {\n\t\t/**\n\t\t * Account provider.\n\t\t * @type {string}\n\t\t */\n\t\tthis.issuer = issuer;\n\t\t/**\n\t\t * Account label.\n\t\t * @type {string}\n\t\t */\n\t\tthis.label = label;\n\t\t/**\n\t\t * Secret key.\n\t\t * @type {Secret}\n\t\t */\n\t\tthis.secret = typeof secret === 'string'\n\t\t\t? Secret.fromB32(secret)\n\t\t\t: secret;\n\t\t/**\n\t\t * HMAC hashing algorithm.\n\t\t * @type {string}\n\t\t */\n\t\tthis.algorithm = algorithm;\n\t\t/**\n\t\t * Token length.\n\t\t * @type {number}\n\t\t */\n\t\tthis.digits = digits;\n\t\t/**\n\t\t * Token time-step duration.\n\t\t * @type {number}\n\t\t */\n\t\tthis.period = period;\n\t}\n\n\t/**\n\t * Generates a TOTP token.\n\t * @param {Object} config Configuration options.\n\t * @param {Secret} config.secret Secret key.\n\t * @param {string} [config.algorithm='SHA1'] HMAC hashing algorithm.\n\t * @param {number} [config.digits=6] Token length.\n\t * @param {number} [config.period=30] Token time-step duration.\n\t * @param {number} [config.timestamp=Date.now] Timestamp value in milliseconds.\n\t * @returns {string} Token.\n\t */\n\tstatic generate({\n\t\tsecret,\n\t\talgorithm,\n\t\tdigits,\n\t\tperiod = defaults.period,\n\t\ttimestamp = Date.now()\n\t}) {\n\t\treturn HOTP.generate({\n\t\t\tsecret,\n\t\t\talgorithm,\n\t\t\tdigits,\n\t\t\tcounter: Math.floor(timestamp / 1000 / period)\n\t\t});\n\t}\n\n\t/**\n\t * Generates a TOTP token.\n\t * @param {Object} [config] Configuration options.\n\t * @param {number} [config.timestamp=Date.now] Timestamp value in milliseconds.\n\t * @returns {string} Token.\n\t */\n\tgenerate({\n\t\ttimestamp = Date.now()\n\t} = {}) {\n\t\treturn TOTP.generate({\n\t\t\tsecret: this.secret,\n\t\t\talgorithm: this.algorithm,\n\t\t\tdigits: this.digits,\n\t\t\tperiod: this.period,\n\t\t\ttimestamp\n\t\t});\n\t}\n\n\t/**\n\t * Validates a TOTP token.\n\t * @param {Object} config Configuration options.\n\t * @param {string} config.token Token value.\n\t * @param {Secret} config.secret Secret key.\n\t * @param {string} [config.algorithm='SHA1'] HMAC hashing algorithm.\n\t * @param {number} [config.period=30] Token time-step duration.\n\t * @param {number} [config.timestamp=Date.now] Timestamp value in milliseconds.\n\t * @param {number} [config.window=50] Window of counter values to test.\n\t * @returns {number|null} Token delta, or null if the token is not found.\n\t */\n\tstatic validate({\n\t\ttoken,\n\t\tsecret,\n\t\talgorithm,\n\t\tperiod = defaults.period,\n\t\ttimestamp = Date.now(),\n\t\twindow\n\t}) {\n\t\treturn HOTP.validate({\n\t\t\ttoken,\n\t\t\tsecret,\n\t\t\talgorithm,\n\t\t\tcounter: Math.floor(timestamp / 1000 / period),\n\t\t\twindow\n\t\t});\n\t}\n\n\t/**\n\t * Validates a TOTP token.\n\t * @param {Object} config Configuration options.\n\t * @param {string} config.token Token value.\n\t * @param {number} [config.timestamp=Date.now] Timestamp value in milliseconds.\n\t * @param {number} [config.window=50] Window of counter values to test.\n\t * @returns {number|null} Token delta, or null if the token is not found.\n\t */\n\tvalidate({\n\t\ttoken,\n\t\ttimestamp,\n\t\twindow\n\t}) {\n\t\treturn TOTP.validate({\n\t\t\ttoken: Utils.pad(token, this.digits),\n\t\t\tsecret: this.secret,\n\t\t\talgorithm: this.algorithm,\n\t\t\tperiod: this.period,\n\t\t\ttimestamp,\n\t\t\twindow\n\t\t});\n\t}\n\n\t/**\n\t * Returns a Google Authenticator key URI.\n\t * @returns {string} URI.\n\t */\n\ttoString() {\n\t\treturn URI.stringify(this);\n\t}\n}\n","/**\n * One Time Password (HOTP/TOTP) library for Node.js and browser.\n * @module OTPAuth\n * @author Héctor Molinero Fernández <hector@molinero.dev>\n */\nimport { HOTP, TOTP } from './otp';\nimport { URI } from './uri';\nimport { Secret } from './secret';\nimport { Utils } from './utils';\nimport { version } from './version';\n\nexport default { HOTP, TOTP, URI, Secret, Utils, version };\nexport { HOTP, TOTP, URI, Secret, Utils, version };\n","/**\n * Library version.\n * @type {string}\n */\nexport const version = process.env.VERSION;\n"],"sourceRoot":""}