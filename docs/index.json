[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/crypto.js",
    "content": "import sjcl from 'sjcl';\nimport {InternalUtils} from './utils.js';\n\n/**\n * Node.js Crypto module.\n * @private\n * @type {Object}\n */\nconst NodeCrypto = InternalUtils.require('crypto');\n\n/**\n * An object containing some cryptography functions\n * with dirty workarounds for Node.js and browsers.\n * @private\n * @type {Object}\n */\nexport const Crypto = {};\n\nif (NodeCrypto) {\n\tlet bufferFrom;\n\n\tif (typeof Buffer.from === 'function') {\n\t\tbufferFrom = Buffer.from;\n\t} else {\n\t\t// Node.js < 5.10.0\n\t\tbufferFrom = function (arrbuf) {\n\t\t\t// eslint-disable-next-line no-buffer-constructor, unicorn/no-new-buffer\n\t\t\tconst nodeBuf = new Buffer(arrbuf.byteLength);\n\t\t\tconst arr = new Uint8Array(arrbuf);\n\n\t\t\tfor (let i = 0; i < arr.length; i++) {\n\t\t\t\tnodeBuf[i] = arr[i];\n\t\t\t}\n\n\t\t\treturn nodeBuf;\n\t\t};\n\t}\n\n\tlet bufferTo;\n\n\tif (Buffer.prototype instanceof Uint8Array) {\n\t\tbufferTo = function (nodeBuf) {\n\t\t\treturn nodeBuf;\n\t\t};\n\t} else {\n\t\t// Node.js < 4.0.0\n\t\tbufferTo = function (nodeBuf) {\n\t\t\tconst arr = new Uint8Array(nodeBuf.length);\n\n\t\t\tfor (let i = 0; i < arr.length; i++) {\n\t\t\t\tarr[i] = nodeBuf[i];\n\t\t\t}\n\n\t\t\treturn arr;\n\t\t};\n\t}\n\n\tCrypto.randomBytes = function (size) {\n\t\treturn bufferTo(NodeCrypto.randomBytes(size));\n\t};\n\n\t// In Node.js, the command:\n\t//   $ openssl list-message-digest-algorithms\n\t// displays the available digest algorithms.\n\tCrypto.hmacDigest = function (algorithm, key, message) {\n\t\treturn bufferTo(NodeCrypto.createHmac(algorithm, bufferFrom(key))\n\t\t\t.update(bufferFrom(message))\n\t\t\t.digest());\n\t};\n} else {\n\tlet getRandomValues;\n\n\tif (typeof global.crypto !== 'undefined' && typeof global.crypto.getRandomValues === 'function') {\n\t\tgetRandomValues = function (arr) {\n\t\t\tglobal.crypto.getRandomValues(arr);\n\t\t};\n\t} else if (typeof global.msCrypto !== 'undefined' && typeof global.msCrypto.getRandomValues === 'function') {\n\t\tgetRandomValues = function (arr) {\n\t\t\tglobal.msCrypto.getRandomValues(arr);\n\t\t};\n\t} else {\n\t\tconsole.warn('Cryptography API not available, falling back to \\'Math.random\\'...');\n\t\tgetRandomValues = function (arr) {\n\t\t\tfor (let i = 0; i < arr.length; i++) {\n\t\t\t\tarr[i] = Math.floor(Math.random() * 256);\n\t\t\t}\n\t\t};\n\t}\n\n\tCrypto.randomBytes = function (size) {\n\t\tconst arr = new Uint8Array(size);\n\t\tgetRandomValues(arr);\n\t\treturn arr;\n\t};\n\n\tCrypto.hmacDigest = function (algorithm, key, message) {\n\t\tconst hash = sjcl.hash[algorithm.toLowerCase()];\n\t\tif (typeof hash === 'undefined') {\n\t\t\tthrow new TypeError('Unknown hash function');\n\t\t}\n\n\t\t// eslint-disable-next-line new-cap\n\t\tconst hmac = new sjcl.misc.hmac(sjcl.codec.arrayBuffer.toBits(key), hash);\n\t\thmac.update(sjcl.codec.arrayBuffer.toBits(message));\n\n\t\treturn sjcl.codec.arrayBuffer.fromBits(hmac.digest(), false);\n\t};\n}\n",
    "static": true,
    "longname": "/home/hectorm/Projects/otpauth/src/crypto.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "variable",
    "name": "NodeCrypto",
    "memberof": "src/crypto.js",
    "static": true,
    "longname": "src/crypto.js~NodeCrypto",
    "access": "private",
    "export": false,
    "importPath": "otpauth/src/crypto.js",
    "importStyle": null,
    "description": "Node.js Crypto module.",
    "lineNumber": 9,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 50,
    "kind": "variable",
    "name": "Crypto",
    "memberof": "src/crypto.js",
    "static": true,
    "longname": "src/crypto.js~Crypto",
    "access": "private",
    "export": true,
    "importPath": "otpauth/src/crypto.js",
    "importStyle": "{Crypto}",
    "description": "An object containing some cryptography functions\nwith dirty workarounds for Node.js and browsers.",
    "lineNumber": 17,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 51,
    "kind": "file",
    "name": "src/main.js",
    "content": "/**\n * One Time Password (HOTP/TOTP) library for Node.js and browser.\n * @module OTPAuth\n * @author Héctor Molinero Fernández <hector@molinero.dev>\n */\nexport {HOTP, TOTP} from './otp.js';\nexport {URI} from './uri.js';\nexport {Secret} from './secret.js';\nexport {Utils} from './utils.js';\n\n/**\n * Library version.\n * @type {string}\n */\nexport const version = process.env.VERSION;\n",
    "static": true,
    "longname": "/home/hectorm/Projects/otpauth/src/main.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 52,
    "kind": "variable",
    "name": "version",
    "memberof": "src/main.js",
    "static": true,
    "longname": "src/main.js~version",
    "access": "public",
    "export": true,
    "importPath": "otpauth/src/main.js",
    "importStyle": "{version}",
    "description": "Library version.",
    "lineNumber": 15,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 53,
    "kind": "file",
    "name": "src/otp.js",
    "content": "import {Utils} from './utils.js';\nimport {Crypto} from './crypto.js';\nimport {Secret} from './secret.js';\nimport {URI} from './uri.js';\n\n/**\n * Default configuration.\n * @private\n * @type {Object}\n */\nconst DC = {\n\tissuer: '',\n\tlabel: 'OTPAuth',\n\talgorithm: 'SHA1',\n\tdigits: 6,\n\tcounter: 0,\n\tperiod: 30,\n\twindow: 50,\n\tpad: true\n};\n\n/**\n * HOTP: An HMAC-based One-time Password Algorithm (RFC 4226).\n * @see https://tools.ietf.org/html/rfc4226\n */\nexport class HOTP {\n\t/**\n\t * @param {Object} [config] Configuration options.\n\t * @param {string} [config.issuer=''] Account provider.\n\t * @param {string} [config.label='OTPAuth'] Account label.\n\t * @param {Secret} [config.secret=Secret] Secret key.\n\t * @param {string} [config.algorithm='SHA1'] HMAC hashing algorithm.\n\t * @param {number} [config.digits=6] Token length.\n\t * @param {number} [config.counter=0] Initial counter value.\n\t */\n\tconstructor({issuer = DC.issuer, label = DC.label, secret = new Secret(), algorithm = DC.algorithm, digits = DC.digits, counter = DC.counter} = {}) {\n\t\t/**\n\t\t * Account provider.\n\t\t * @type {string}\n\t\t */\n\t\tthis.issuer = issuer;\n\t\t/**\n\t\t * Account label.\n\t\t * @type {string}\n\t\t */\n\t\tthis.label = label;\n\t\t/**\n\t\t * Secret key.\n\t\t * @type {Secret}\n\t\t */\n\t\tthis.secret = secret;\n\t\t/**\n\t\t * HMAC hashing algorithm.\n\t\t * @type {string}\n\t\t */\n\t\tthis.algorithm = algorithm;\n\t\t/**\n\t\t * Token length.\n\t\t * @type {number}\n\t\t */\n\t\tthis.digits = digits;\n\t\t/**\n\t\t * Initial counter value.\n\t\t * @type {number}\n\t\t */\n\t\tthis.counter = counter;\n\t}\n\n\t/**\n\t * Generates an HOTP token.\n\t * @param {Object} config Configuration options.\n\t * @param {Secret} config.secret Secret key.\n\t * @param {string} [config.algorithm='SHA1'] HMAC hashing algorithm.\n\t * @param {number} [config.digits=6] Token length.\n\t * @param {number} [config.counter=0] Counter value.\n\t * @param {boolean} [config.pad=true] Add leading zeros to result.\n\t * @returns {string|number} Token.\n\t */\n\tstatic generate({secret, algorithm = DC.algorithm, digits = DC.digits, counter = DC.counter, pad = DC.pad}) {\n\t\tconst digest = new Uint8Array(Crypto.hmacDigest(algorithm, secret.buffer, Utils.uint.encode(counter)));\n\t\tconst offset = digest[digest.byteLength - 1] & 15;\n\t\tconst otp = (\n\t\t\t((digest[offset] & 127) << 24) |\n\t\t\t((digest[offset + 1] & 255) << 16) |\n\t\t\t((digest[offset + 2] & 255) << 8) |\n\t\t\t(digest[offset + 3] & 255)\n\t\t) % (10 ** digits);\n\n\t\treturn pad\n\t\t\t? new Array(1 + digits - String(otp).length).join('0') + otp\n\t\t\t: otp;\n\t}\n\n\t/**\n\t * Generates an HOTP token.\n\t * @param {Object} [config] Configuration options.\n\t * @param {number} [config.counter=this.counter++] Counter value.\n\t * @param {boolean} [config.pad=true] Add leading zeros to result.\n\t * @returns {string|number} Token.\n\t */\n\tgenerate({counter = this.counter++, pad} = {}) {\n\t\treturn HOTP.generate({\n\t\t\tsecret: this.secret,\n\t\t\talgorithm: this.algorithm,\n\t\t\tdigits: this.digits,\n\t\t\tcounter: counter,\n\t\t\tpad: pad\n\t\t});\n\t}\n\n\t/**\n\t * Validates an HOTP token.\n\t * @param {Object} config Configuration options.\n\t * @param {string} config.token Token value.\n\t * @param {Secret} config.secret Secret key.\n\t * @param {string} [config.algorithm='SHA1'] HMAC hashing algorithm.\n\t * @param {number} [config.counter=0] Counter value.\n\t * @param {number} [config.window=50] Window of counter values to test.\n\t * @returns {number|null} Token delta, or null if the token is not found.\n\t */\n\tstatic validate({token, secret, algorithm, counter = DC.counter, window = DC.window}) {\n\t\tconst searchToken = parseInt(token, 10);\n\n\t\tfor (let i = counter - window; i <= counter + window; ++i) {\n\t\t\tconst generatedToken = HOTP.generate({\n\t\t\t\tsecret: secret,\n\t\t\t\talgorithm: algorithm,\n\t\t\t\tcounter: i,\n\t\t\t\tdigits: token.length,\n\t\t\t\tpad: false\n\t\t\t});\n\n\t\t\tif (searchToken === generatedToken) {\n\t\t\t\treturn i - counter;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Validates an HOTP token.\n\t * @param {Object} config Configuration options.\n\t * @param {string} config.token Token value.\n\t * @param {number} [config.counter=this.counter] Counter value.\n\t * @param {number} [config.window=50] Window of counter values to test.\n\t * @returns {number|null} Token delta, or null if the token is not found.\n\t */\n\tvalidate({token, counter = this.counter, window}) {\n\t\treturn HOTP.validate({\n\t\t\ttoken: token,\n\t\t\tsecret: this.secret,\n\t\t\talgorithm: this.algorithm,\n\t\t\tcounter: counter,\n\t\t\twindow: window\n\t\t});\n\t}\n\n\t/**\n\t * Returns a Google Authenticator key URI.\n\t * @returns {string} URI.\n\t */\n\ttoString() {\n\t\treturn URI.stringify(this);\n\t}\n}\n\n/**\n * TOTP: Time-Based One-Time Password Algorithm (RFC 6238).\n * @see https://tools.ietf.org/html/rfc6238\n */\nexport class TOTP {\n\t/**\n\t * @param {Object} [config] Configuration options.\n\t * @param {string} [config.issuer=''] Account provider.\n\t * @param {string} [config.label='OTPAuth'] Account label.\n\t * @param {Secret} [config.secret=Secret] Secret key.\n\t * @param {string} [config.algorithm='SHA1'] HMAC hashing algorithm.\n\t * @param {number} [config.digits=6] Token length.\n\t * @param {number} [config.period=30] Token time-step duration.\n\t */\n\tconstructor({issuer = DC.issuer, label = DC.label, secret = new Secret(), algorithm = DC.algorithm, digits = DC.digits, period = DC.period} = {}) {\n\t\t/**\n\t\t * Account provider.\n\t\t * @type {string}\n\t\t */\n\t\tthis.issuer = issuer;\n\t\t/**\n\t\t * Account label.\n\t\t * @type {string}\n\t\t */\n\t\tthis.label = label;\n\t\t/**\n\t\t * Secret key.\n\t\t * @type {string}\n\t\t */\n\t\tthis.secret = secret;\n\t\t/**\n\t\t * HMAC hashing algorithm.\n\t\t * @type {Secret}\n\t\t */\n\t\tthis.algorithm = algorithm;\n\t\t/**\n\t\t * Token length.\n\t\t * @type {number}\n\t\t */\n\t\tthis.digits = digits;\n\t\t/**\n\t\t * Token time-step duration.\n\t\t * @type {number}\n\t\t */\n\t\tthis.period = period;\n\t}\n\n\t/**\n\t * Generates a TOTP token.\n\t * @param {Object} config Configuration options.\n\t * @param {Secret} config.secret Secret key.\n\t * @param {string} [config.algorithm='SHA1'] HMAC hashing algorithm.\n\t * @param {number} [config.digits=6] Token length.\n\t * @param {number} [config.period=30] Token time-step duration.\n\t * @param {number} [config.timestamp=Date.now] Timestamp value in milliseconds.\n\t * @param {boolean} [config.pad=true] Add leading zeros to result.\n\t * @returns {string|number} Token.\n\t */\n\tstatic generate({secret, algorithm, digits, period = DC.period, timestamp = Date.now(), pad}) {\n\t\treturn HOTP.generate({\n\t\t\tsecret: secret,\n\t\t\talgorithm: algorithm,\n\t\t\tdigits: digits,\n\t\t\tcounter: Math.floor(timestamp / 1000 / period),\n\t\t\tpad: pad\n\t\t});\n\t}\n\n\t/**\n\t * Generates a TOTP token.\n\t * @param {Object} [config] Configuration options.\n\t * @param {number} [config.timestamp=Date.now] Timestamp value in milliseconds.\n\t * @param {boolean} [config.pad=true] Add leading zeros to result.\n\t * @returns {string|number} Token.\n\t */\n\tgenerate({timestamp = Date.now(), pad} = {}) {\n\t\treturn TOTP.generate({\n\t\t\tsecret: this.secret,\n\t\t\talgorithm: this.algorithm,\n\t\t\tdigits: this.digits,\n\t\t\tperiod: this.period,\n\t\t\ttimestamp: timestamp,\n\t\t\tpad: pad\n\t\t});\n\t}\n\n\t/**\n\t * Validates a TOTP token.\n\t * @param {Object} config Configuration options.\n\t * @param {string} config.token Token value.\n\t * @param {Secret} config.secret Secret key.\n\t * @param {string} [config.algorithm='SHA1'] HMAC hashing algorithm.\n\t * @param {number} [config.period=30] Token time-step duration.\n\t * @param {number} [config.timestamp=Date.now] Timestamp value in milliseconds.\n\t * @param {number} [config.window=50] Window of counter values to test.\n\t * @returns {number|null} Token delta, or null if the token is not found.\n\t */\n\tstatic validate({token, secret, algorithm, period = DC.period, timestamp = Date.now(), window}) {\n\t\treturn HOTP.validate({\n\t\t\ttoken: token,\n\t\t\tsecret: secret,\n\t\t\talgorithm: algorithm,\n\t\t\tcounter: Math.floor(timestamp / 1000 / period),\n\t\t\twindow: window\n\t\t});\n\t}\n\n\t/**\n\t * Validates a TOTP token.\n\t * @param {Object} config Configuration options.\n\t * @param {string} config.token Token value.\n\t * @param {number} [config.timestamp=Date.now] Timestamp value in milliseconds.\n\t * @param {number} [config.window=50] Window of counter values to test.\n\t * @returns {number|null} Token delta, or null if the token is not found.\n\t */\n\tvalidate({token, timestamp, window}) {\n\t\treturn TOTP.validate({\n\t\t\ttoken: token,\n\t\t\tsecret: this.secret,\n\t\t\talgorithm: this.algorithm,\n\t\t\tperiod: this.period,\n\t\t\ttimestamp: timestamp,\n\t\t\twindow: window\n\t\t});\n\t}\n\n\t/**\n\t * Returns a Google Authenticator key URI.\n\t * @returns {string} URI.\n\t */\n\ttoString() {\n\t\treturn URI.stringify(this);\n\t}\n}\n",
    "static": true,
    "longname": "/home/hectorm/Projects/otpauth/src/otp.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 54,
    "kind": "variable",
    "name": "DC",
    "memberof": "src/otp.js",
    "static": true,
    "longname": "src/otp.js~DC",
    "access": "private",
    "export": false,
    "importPath": "otpauth/src/otp.js",
    "importStyle": null,
    "description": "Default configuration.",
    "lineNumber": 11,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 55,
    "kind": "class",
    "name": "HOTP",
    "memberof": "src/otp.js",
    "static": true,
    "longname": "src/otp.js~HOTP",
    "access": "public",
    "export": true,
    "importPath": "otpauth/src/otp.js",
    "importStyle": "{HOTP}",
    "description": "HOTP: An HMAC-based One-time Password Algorithm (RFC 4226).",
    "see": [
      "https://tools.ietf.org/html/rfc4226"
    ],
    "lineNumber": 26,
    "interface": false
  },
  {
    "__docId__": 56,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/otp.js~HOTP",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/otp.js~HOTP#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 36,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "config",
        "description": "Configuration options."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "config.issuer",
        "description": "Account provider."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'OTPAuth'",
        "defaultRaw": "'OTPAuth'",
        "name": "config.label",
        "description": "Account label."
      },
      {
        "nullable": null,
        "types": [
          "Secret"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "Secret",
        "defaultRaw": "Secret",
        "name": "config.secret",
        "description": "Secret key."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'SHA1'",
        "defaultRaw": "'SHA1'",
        "name": "config.algorithm",
        "description": "HMAC hashing algorithm."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "6",
        "defaultRaw": 6,
        "name": "config.digits",
        "description": "Token length."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "config.counter",
        "description": "Initial counter value."
      }
    ]
  },
  {
    "__docId__": 57,
    "kind": "member",
    "name": "issuer",
    "memberof": "src/otp.js~HOTP",
    "static": false,
    "longname": "src/otp.js~HOTP#issuer",
    "access": "public",
    "description": "Account provider.",
    "lineNumber": 41,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 58,
    "kind": "member",
    "name": "label",
    "memberof": "src/otp.js~HOTP",
    "static": false,
    "longname": "src/otp.js~HOTP#label",
    "access": "public",
    "description": "Account label.",
    "lineNumber": 46,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 59,
    "kind": "member",
    "name": "secret",
    "memberof": "src/otp.js~HOTP",
    "static": false,
    "longname": "src/otp.js~HOTP#secret",
    "access": "public",
    "description": "Secret key.",
    "lineNumber": 51,
    "type": {
      "nullable": null,
      "types": [
        "Secret"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 60,
    "kind": "member",
    "name": "algorithm",
    "memberof": "src/otp.js~HOTP",
    "static": false,
    "longname": "src/otp.js~HOTP#algorithm",
    "access": "public",
    "description": "HMAC hashing algorithm.",
    "lineNumber": 56,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 61,
    "kind": "member",
    "name": "digits",
    "memberof": "src/otp.js~HOTP",
    "static": false,
    "longname": "src/otp.js~HOTP#digits",
    "access": "public",
    "description": "Token length.",
    "lineNumber": 61,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 62,
    "kind": "member",
    "name": "counter",
    "memberof": "src/otp.js~HOTP",
    "static": false,
    "longname": "src/otp.js~HOTP#counter",
    "access": "public",
    "description": "Initial counter value.",
    "lineNumber": 66,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 63,
    "kind": "method",
    "name": "generate",
    "memberof": "src/otp.js~HOTP",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/otp.js~HOTP.generate",
    "access": "public",
    "description": "Generates an HOTP token.",
    "lineNumber": 79,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|number} Token."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": "Configuration options."
      },
      {
        "nullable": null,
        "types": [
          "Secret"
        ],
        "spread": false,
        "optional": false,
        "name": "config.secret",
        "description": "Secret key."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'SHA1'",
        "defaultRaw": "'SHA1'",
        "name": "config.algorithm",
        "description": "HMAC hashing algorithm."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "6",
        "defaultRaw": 6,
        "name": "config.digits",
        "description": "Token length."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "config.counter",
        "description": "Counter value."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "config.pad",
        "description": "Add leading zeros to result."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "number"
      ],
      "spread": false,
      "description": "Token."
    }
  },
  {
    "__docId__": 64,
    "kind": "method",
    "name": "generate",
    "memberof": "src/otp.js~HOTP",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/otp.js~HOTP#generate",
    "access": "public",
    "description": "Generates an HOTP token.",
    "lineNumber": 101,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|number} Token."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "config",
        "description": "Configuration options."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "this.counter++",
        "defaultRaw": "this.counter++",
        "name": "config.counter",
        "description": "Counter value."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "config.pad",
        "description": "Add leading zeros to result."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "number"
      ],
      "spread": false,
      "description": "Token."
    }
  },
  {
    "__docId__": 65,
    "kind": "method",
    "name": "validate",
    "memberof": "src/otp.js~HOTP",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/otp.js~HOTP.validate",
    "access": "public",
    "description": "Validates an HOTP token.",
    "lineNumber": 121,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number|null} Token delta, or null if the token is not found."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": "Configuration options."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "config.token",
        "description": "Token value."
      },
      {
        "nullable": null,
        "types": [
          "Secret"
        ],
        "spread": false,
        "optional": false,
        "name": "config.secret",
        "description": "Secret key."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'SHA1'",
        "defaultRaw": "'SHA1'",
        "name": "config.algorithm",
        "description": "HMAC hashing algorithm."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "config.counter",
        "description": "Counter value."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "50",
        "defaultRaw": 50,
        "name": "config.window",
        "description": "Window of counter values to test."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number",
        "null"
      ],
      "spread": false,
      "description": "Token delta, or null if the token is not found."
    }
  },
  {
    "__docId__": 66,
    "kind": "method",
    "name": "validate",
    "memberof": "src/otp.js~HOTP",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/otp.js~HOTP#validate",
    "access": "public",
    "description": "Validates an HOTP token.",
    "lineNumber": 149,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number|null} Token delta, or null if the token is not found."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": "Configuration options."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "config.token",
        "description": "Token value."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "this.counter",
        "defaultRaw": "this.counter",
        "name": "config.counter",
        "description": "Counter value."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "50",
        "defaultRaw": 50,
        "name": "config.window",
        "description": "Window of counter values to test."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number",
        "null"
      ],
      "spread": false,
      "description": "Token delta, or null if the token is not found."
    }
  },
  {
    "__docId__": 67,
    "kind": "method",
    "name": "toString",
    "memberof": "src/otp.js~HOTP",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/otp.js~HOTP#toString",
    "access": "public",
    "description": "Returns a Google Authenticator key URI.",
    "lineNumber": 163,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} URI."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "URI."
    },
    "params": []
  },
  {
    "__docId__": 68,
    "kind": "class",
    "name": "TOTP",
    "memberof": "src/otp.js",
    "static": true,
    "longname": "src/otp.js~TOTP",
    "access": "public",
    "export": true,
    "importPath": "otpauth/src/otp.js",
    "importStyle": "{TOTP}",
    "description": "TOTP: Time-Based One-Time Password Algorithm (RFC 6238).",
    "see": [
      "https://tools.ietf.org/html/rfc6238"
    ],
    "lineNumber": 172,
    "interface": false
  },
  {
    "__docId__": 69,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/otp.js~TOTP",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/otp.js~TOTP#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 182,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "config",
        "description": "Configuration options."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "config.issuer",
        "description": "Account provider."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'OTPAuth'",
        "defaultRaw": "'OTPAuth'",
        "name": "config.label",
        "description": "Account label."
      },
      {
        "nullable": null,
        "types": [
          "Secret"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "Secret",
        "defaultRaw": "Secret",
        "name": "config.secret",
        "description": "Secret key."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'SHA1'",
        "defaultRaw": "'SHA1'",
        "name": "config.algorithm",
        "description": "HMAC hashing algorithm."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "6",
        "defaultRaw": 6,
        "name": "config.digits",
        "description": "Token length."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "30",
        "defaultRaw": 30,
        "name": "config.period",
        "description": "Token time-step duration."
      }
    ]
  },
  {
    "__docId__": 70,
    "kind": "member",
    "name": "issuer",
    "memberof": "src/otp.js~TOTP",
    "static": false,
    "longname": "src/otp.js~TOTP#issuer",
    "access": "public",
    "description": "Account provider.",
    "lineNumber": 187,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 71,
    "kind": "member",
    "name": "label",
    "memberof": "src/otp.js~TOTP",
    "static": false,
    "longname": "src/otp.js~TOTP#label",
    "access": "public",
    "description": "Account label.",
    "lineNumber": 192,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 72,
    "kind": "member",
    "name": "secret",
    "memberof": "src/otp.js~TOTP",
    "static": false,
    "longname": "src/otp.js~TOTP#secret",
    "access": "public",
    "description": "Secret key.",
    "lineNumber": 197,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 73,
    "kind": "member",
    "name": "algorithm",
    "memberof": "src/otp.js~TOTP",
    "static": false,
    "longname": "src/otp.js~TOTP#algorithm",
    "access": "public",
    "description": "HMAC hashing algorithm.",
    "lineNumber": 202,
    "type": {
      "nullable": null,
      "types": [
        "Secret"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 74,
    "kind": "member",
    "name": "digits",
    "memberof": "src/otp.js~TOTP",
    "static": false,
    "longname": "src/otp.js~TOTP#digits",
    "access": "public",
    "description": "Token length.",
    "lineNumber": 207,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 75,
    "kind": "member",
    "name": "period",
    "memberof": "src/otp.js~TOTP",
    "static": false,
    "longname": "src/otp.js~TOTP#period",
    "access": "public",
    "description": "Token time-step duration.",
    "lineNumber": 212,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 76,
    "kind": "method",
    "name": "generate",
    "memberof": "src/otp.js~TOTP",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/otp.js~TOTP.generate",
    "access": "public",
    "description": "Generates a TOTP token.",
    "lineNumber": 226,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|number} Token."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": "Configuration options."
      },
      {
        "nullable": null,
        "types": [
          "Secret"
        ],
        "spread": false,
        "optional": false,
        "name": "config.secret",
        "description": "Secret key."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'SHA1'",
        "defaultRaw": "'SHA1'",
        "name": "config.algorithm",
        "description": "HMAC hashing algorithm."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "6",
        "defaultRaw": 6,
        "name": "config.digits",
        "description": "Token length."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "30",
        "defaultRaw": 30,
        "name": "config.period",
        "description": "Token time-step duration."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "Date.now",
        "defaultRaw": "Date.now",
        "name": "config.timestamp",
        "description": "Timestamp value in milliseconds."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "config.pad",
        "description": "Add leading zeros to result."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "number"
      ],
      "spread": false,
      "description": "Token."
    }
  },
  {
    "__docId__": 77,
    "kind": "method",
    "name": "generate",
    "memberof": "src/otp.js~TOTP",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/otp.js~TOTP#generate",
    "access": "public",
    "description": "Generates a TOTP token.",
    "lineNumber": 243,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string|number} Token."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "config",
        "description": "Configuration options."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "Date.now",
        "defaultRaw": "Date.now",
        "name": "config.timestamp",
        "description": "Timestamp value in milliseconds."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "config.pad",
        "description": "Add leading zeros to result."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "number"
      ],
      "spread": false,
      "description": "Token."
    }
  },
  {
    "__docId__": 78,
    "kind": "method",
    "name": "validate",
    "memberof": "src/otp.js~TOTP",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/otp.js~TOTP.validate",
    "access": "public",
    "description": "Validates a TOTP token.",
    "lineNumber": 265,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number|null} Token delta, or null if the token is not found."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": "Configuration options."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "config.token",
        "description": "Token value."
      },
      {
        "nullable": null,
        "types": [
          "Secret"
        ],
        "spread": false,
        "optional": false,
        "name": "config.secret",
        "description": "Secret key."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'SHA1'",
        "defaultRaw": "'SHA1'",
        "name": "config.algorithm",
        "description": "HMAC hashing algorithm."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "30",
        "defaultRaw": 30,
        "name": "config.period",
        "description": "Token time-step duration."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "Date.now",
        "defaultRaw": "Date.now",
        "name": "config.timestamp",
        "description": "Timestamp value in milliseconds."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "50",
        "defaultRaw": 50,
        "name": "config.window",
        "description": "Window of counter values to test."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number",
        "null"
      ],
      "spread": false,
      "description": "Token delta, or null if the token is not found."
    }
  },
  {
    "__docId__": 79,
    "kind": "method",
    "name": "validate",
    "memberof": "src/otp.js~TOTP",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/otp.js~TOTP#validate",
    "access": "public",
    "description": "Validates a TOTP token.",
    "lineNumber": 283,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number|null} Token delta, or null if the token is not found."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": "Configuration options."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "config.token",
        "description": "Token value."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "Date.now",
        "defaultRaw": "Date.now",
        "name": "config.timestamp",
        "description": "Timestamp value in milliseconds."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "50",
        "defaultRaw": 50,
        "name": "config.window",
        "description": "Window of counter values to test."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number",
        "null"
      ],
      "spread": false,
      "description": "Token delta, or null if the token is not found."
    }
  },
  {
    "__docId__": 80,
    "kind": "method",
    "name": "toString",
    "memberof": "src/otp.js~TOTP",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/otp.js~TOTP#toString",
    "access": "public",
    "description": "Returns a Google Authenticator key URI.",
    "lineNumber": 298,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} URI."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "URI."
    },
    "params": []
  },
  {
    "__docId__": 81,
    "kind": "file",
    "name": "src/secret.js",
    "content": "import {Utils} from './utils.js';\nimport {Crypto} from './crypto.js';\n\n/**\n * Secret key object.\n */\nexport class Secret {\n\t/**\n\t * @param {Object} [config] Configuration options.\n\t * @param {ArrayBuffer} [config.buffer=Crypto.randomBytes] Secret key.\n\t * @param {number} [config.size=20] Number of random bytes to generate, ignored if 'buffer' is provided.\n\t */\n\tconstructor({buffer, size = 20} = {}) {\n\t\t/**\n\t\t * Secret key.\n\t\t * @type {ArrayBuffer}\n\t\t */\n\t\tthis.buffer = typeof buffer === 'undefined'\n\t\t\t? Crypto.randomBytes(size).buffer\n\t\t\t: buffer;\n\t}\n\n\t/**\n\t * Converts a raw string to a Secret object.\n\t * @method fromRaw\n\t * @param {string} str Raw string.\n\t * @returns {Secret} Secret object.\n\t */\n\tstatic fromRaw(str) {\n\t\treturn new this({buffer: Utils.raw.encode(str)});\n\t}\n\n\t/**\n\t * Converts a base32 string to a Secret object.\n\t * @method fromB32\n\t * @param {string} str Base32 string.\n\t * @returns {Secret} Secret object.\n\t */\n\tstatic fromB32(str) {\n\t\treturn new this({buffer: Utils.b32.encode(str)});\n\t}\n\n\t/**\n\t * Converts a hexadecimal string to a Secret object.\n\t * @method fromHex\n\t * @param {string} str Hexadecimal string.\n\t * @returns {Secret} Secret object.\n\t */\n\tstatic fromHex(str) {\n\t\treturn new this({buffer: Utils.hex.encode(str)});\n\t}\n\n\t/**\n\t * String representation of secret key.\n\t * @type {string}\n\t */\n\tget raw() {\n\t\tObject.defineProperty(this, 'raw', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\twritable: true,\n\t\t\tvalue: Utils.raw.decode(this.buffer)\n\t\t});\n\n\t\treturn this.raw;\n\t}\n\n\t/**\n\t * Base32 representation of secret key.\n\t * @type {string}\n\t */\n\tget b32() {\n\t\tObject.defineProperty(this, 'b32', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\twritable: true,\n\t\t\tvalue: Utils.b32.decode(this.buffer)\n\t\t});\n\n\t\treturn this.b32;\n\t}\n\n\t/**\n\t * Hexadecimal representation of secret key.\n\t * @type {string}\n\t */\n\tget hex() {\n\t\tObject.defineProperty(this, 'hex', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\twritable: true,\n\t\t\tvalue: Utils.hex.decode(this.buffer)\n\t\t});\n\n\t\treturn this.hex;\n\t}\n}\n",
    "static": true,
    "longname": "/home/hectorm/Projects/otpauth/src/secret.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 82,
    "kind": "class",
    "name": "Secret",
    "memberof": "src/secret.js",
    "static": true,
    "longname": "src/secret.js~Secret",
    "access": "public",
    "export": true,
    "importPath": "otpauth/src/secret.js",
    "importStyle": "{Secret}",
    "description": "Secret key object.",
    "lineNumber": 7,
    "interface": false
  },
  {
    "__docId__": 83,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/secret.js~Secret",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/secret.js~Secret#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "config",
        "description": "Configuration options."
      },
      {
        "nullable": null,
        "types": [
          "ArrayBuffer"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "Crypto.randomBytes",
        "defaultRaw": "Crypto.randomBytes",
        "name": "config.buffer",
        "description": "Secret key."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "20",
        "defaultRaw": 20,
        "name": "config.size",
        "description": "Number of random bytes to generate, ignored if 'buffer' is provided."
      }
    ]
  },
  {
    "__docId__": 84,
    "kind": "member",
    "name": "buffer",
    "memberof": "src/secret.js~Secret",
    "static": false,
    "longname": "src/secret.js~Secret#buffer",
    "access": "public",
    "description": "Secret key.",
    "lineNumber": 18,
    "type": {
      "nullable": null,
      "types": [
        "ArrayBuffer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 85,
    "kind": "method",
    "name": "fromRaw",
    "memberof": "src/secret.js~Secret",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/secret.js~Secret.fromRaw",
    "access": "public",
    "description": "Converts a raw string to a Secret object.",
    "lineNumber": 29,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": "fromRaw"
      },
      {
        "tagName": "@returns",
        "tagValue": "{Secret} Secret object."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": "Raw string."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Secret"
      ],
      "spread": false,
      "description": "Secret object."
    }
  },
  {
    "__docId__": 86,
    "kind": "method",
    "name": "fromB32",
    "memberof": "src/secret.js~Secret",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/secret.js~Secret.fromB32",
    "access": "public",
    "description": "Converts a base32 string to a Secret object.",
    "lineNumber": 39,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": "fromB32"
      },
      {
        "tagName": "@returns",
        "tagValue": "{Secret} Secret object."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": "Base32 string."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Secret"
      ],
      "spread": false,
      "description": "Secret object."
    }
  },
  {
    "__docId__": 87,
    "kind": "method",
    "name": "fromHex",
    "memberof": "src/secret.js~Secret",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/secret.js~Secret.fromHex",
    "access": "public",
    "description": "Converts a hexadecimal string to a Secret object.",
    "lineNumber": 49,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": "fromHex"
      },
      {
        "tagName": "@returns",
        "tagValue": "{Secret} Secret object."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": "Hexadecimal string."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Secret"
      ],
      "spread": false,
      "description": "Secret object."
    }
  },
  {
    "__docId__": 88,
    "kind": "get",
    "name": "raw",
    "memberof": "src/secret.js~Secret",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/secret.js~Secret#raw",
    "access": "public",
    "description": "String representation of secret key.",
    "lineNumber": 57,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 89,
    "kind": "get",
    "name": "b32",
    "memberof": "src/secret.js~Secret",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/secret.js~Secret#b32",
    "access": "public",
    "description": "Base32 representation of secret key.",
    "lineNumber": 72,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 90,
    "kind": "get",
    "name": "hex",
    "memberof": "src/secret.js~Secret",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/secret.js~Secret#hex",
    "access": "public",
    "description": "Hexadecimal representation of secret key.",
    "lineNumber": 87,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 91,
    "kind": "file",
    "name": "src/uri.js",
    "content": "import {Utils} from './utils.js';\nimport {Secret} from './secret.js';\nimport {HOTP, TOTP} from './otp.js';\n\n/**\n * Valid key URI parameters.\n * @private\n * @type {Array}\n */\nconst OTPURI_PARAMS = ['issuer', 'label', 'secret', 'algorithm', 'digits', 'counter', 'period'];\n\n/**\n * Key URI regex.\n *   otpauth://TYPE/[ISSUER:]LABEL?PARAMETERS\n * @private\n * @type {RegExp}\n */\nconst OTPURI_REGEX = new RegExp(`^otpauth:\\\\/\\\\/([ht]otp)\\\\/(.+)\\\\?((?:&?(?:${OTPURI_PARAMS.join('|')})=[^&]+)+)$`, 'i');\n\n/**\n * RFC 4648 base32 alphabet without pad.\n * @private\n * @type {string}\n */\nconst SECRET_REGEX = /^[2-7A-Z]+$/i;\n\n/**\n * Regex for supported algorithms.\n * @private\n * @type {RegExp}\n */\nconst ALGORITHM_REGEX = /^SHA(?:1|256|512)$/i;\n\n/**\n * Integer regex.\n * @private\n * @type {RegExp}\n */\nconst INTEGER_REGEX = /^[+-]?\\d+$/;\n\n/**\n * Positive integer regex.\n * @private\n * @type {RegExp}\n */\nconst POSITIVE_INTEGER_REGEX = /^\\+?[1-9]\\d*$/;\n\n/**\n * HOTP/TOTP object/string conversion.\n * @see https://github.com/google/google-authenticator/wiki/Key-Uri-Format\n */\nexport class URI {\n\t/**\n\t * Parses a Google Authenticator key URI and returns an HOTP/TOTP object.\n\t * @method parse\n\t * @param {string} uri Google Authenticator Key URI.\n\t * @returns {Object} HOTP/TOTP object.\n\t */\n\tstatic parse(uri) {\n\t\tlet uriGroups;\n\n\t\ttry {\n\t\t\turiGroups = decodeURIComponent(uri).match(OTPURI_REGEX);\n\t\t} catch (error) {}\n\n\t\tif (!Array.isArray(uriGroups)) {\n\t\t\tthrow new URIError('Invalid URI format');\n\t\t}\n\n\t\t// Extract URI groups\n\t\tconst uriType = uriGroups[1].toLowerCase();\n\t\tconst uriLabel = uriGroups[2].split(/:(.+)/, 2);\n\t\tconst uriParams = uriGroups[3].split('&').reduce(function (acc, cur) {\n\t\t\tconst pairArr = cur.split(/=(.+)/, 2);\n\t\t\tconst pairKey = pairArr[0].toLowerCase();\n\t\t\tconst pairVal = pairArr[1];\n\t\t\tconst pairAcc = acc;\n\n\t\t\tpairAcc[pairKey] = pairVal;\n\t\t\treturn pairAcc;\n\t\t}, {});\n\n\t\t// 'OTP' will be instantiated with 'config' argument\n\t\tlet OTP;\n\t\tlet config = {};\n\n\t\tif (uriType === 'hotp') {\n\t\t\tOTP = HOTP;\n\n\t\t\t// Counter: required\n\t\t\tif (typeof uriParams.counter !== 'undefined' && INTEGER_REGEX.test(uriParams.counter)) {\n\t\t\t\tconfig.counter = parseInt(uriParams.counter, 10);\n\t\t\t} else {\n\t\t\t\tthrow new TypeError('Missing or invalid \\'counter\\' parameter');\n\t\t\t}\n\t\t} else if (uriType === 'totp') {\n\t\t\tOTP = TOTP;\n\n\t\t\t// Period: optional\n\t\t\tif (typeof uriParams.period !== 'undefined') {\n\t\t\t\tif (POSITIVE_INTEGER_REGEX.test(uriParams.period)) {\n\t\t\t\t\tconfig.period = parseInt(uriParams.period, 10);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new TypeError('Invalid \\'period\\' parameter');\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Unknown OTP type');\n\t\t}\n\n\t\t// Label: required\n\t\t// Issuer: optional\n\t\tif (uriLabel.length === 2) {\n\t\t\tconfig.label = uriLabel[1];\n\t\t\tif (typeof uriParams.issuer === 'undefined') {\n\t\t\t\tconfig.issuer = uriLabel[0];\n\t\t\t} else if (uriParams.issuer === uriLabel[0]) {\n\t\t\t\tconfig.issuer = uriParams.issuer;\n\t\t\t} else {\n\t\t\t\tthrow new TypeError('Invalid \\'issuer\\' parameter');\n\t\t\t}\n\t\t} else {\n\t\t\tconfig.label = uriLabel[0];\n\t\t\tif (typeof uriParams.issuer !== 'undefined') {\n\t\t\t\tconfig.issuer = uriParams.issuer;\n\t\t\t}\n\t\t}\n\n\t\t// Secret: required\n\t\tif (typeof uriParams.secret !== 'undefined' && SECRET_REGEX.test(uriParams.secret)) {\n\t\t\tconfig.secret = new Secret({buffer: Utils.b32.encode(uriParams.secret)});\n\t\t} else {\n\t\t\tthrow new TypeError('Missing or invalid \\'secret\\' parameter');\n\t\t}\n\n\t\t// Algorithm: optional\n\t\tif (typeof uriParams.algorithm !== 'undefined') {\n\t\t\tif (ALGORITHM_REGEX.test(uriParams.algorithm)) {\n\t\t\t\tconfig.algorithm = uriParams.algorithm;\n\t\t\t} else {\n\t\t\t\tthrow new TypeError('Invalid \\'algorithm\\' parameter');\n\t\t\t}\n\t\t}\n\n\t\t// Digits: optional\n\t\tif (typeof uriParams.digits !== 'undefined') {\n\t\t\tif (POSITIVE_INTEGER_REGEX.test(uriParams.digits)) {\n\t\t\t\tconfig.digits = parseInt(uriParams.digits, 10);\n\t\t\t} else {\n\t\t\t\tthrow new TypeError('Invalid \\'digits\\' parameter');\n\t\t\t}\n\t\t}\n\n\t\treturn new OTP(config);\n\t}\n\n\t/**\n\t * Converts an HOTP/TOTP object to a Google Authenticator key URI.\n\t * @method stringify\n\t * @param {Object} otp HOTP/TOTP object.\n\t * @param {Object} [config] Configuration options.\n\t * @param {boolean} [config.legacyIssuer=true] Set issuer label prefix.\n\t * @returns {string} Google Authenticator Key URI.\n\t */\n\tstatic stringify(otp, {legacyIssuer = true} = {}) {\n\t\tconst isHOTP = otp instanceof HOTP;\n\t\tconst isTOTP = otp instanceof TOTP;\n\n\t\tif (!isHOTP && !isTOTP) {\n\t\t\tthrow new TypeError('Invalid \\'HOTP/TOTP\\' object');\n\t\t}\n\n\t\t// Key URI format:\n\t\t// otpauth://TYPE/[ISSUER:]LABEL?PARAMETERS\n\t\tlet uri = 'otpauth://';\n\n\t\t// Type\n\t\turi += (isTOTP ? 'totp' : 'hotp') + '/';\n\n\t\t// Label and optional issuer\n\t\tif (otp.issuer.length > 0) {\n\t\t\t// Issuer label prefix\n\t\t\tif (legacyIssuer) {\n\t\t\t\turi += `${otp.issuer}:`;\n\t\t\t}\n\n\t\t\turi += `${otp.label}?issuer=${otp.issuer}&`;\n\t\t} else {\n\t\t\t// No issuer\n\t\t\turi += `${otp.label}?`;\n\t\t}\n\n\t\t// Generic parameters\n\t\turi += `secret=${otp.secret.b32}` +\n\t\t\t`&algorithm=${otp.algorithm}` +\n\t\t\t`&digits=${otp.digits}`;\n\n\t\t// Extra parameters\n\t\tif (isTOTP) {\n\t\t\t// TOTP parameters\n\t\t\turi += `&period=${otp.period}`;\n\t\t} else {\n\t\t\t// HOTP parameters\n\t\t\turi += `&counter=${otp.counter}`;\n\t\t}\n\n\t\treturn encodeURI(uri);\n\t}\n}\n",
    "static": true,
    "longname": "/home/hectorm/Projects/otpauth/src/uri.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 92,
    "kind": "variable",
    "name": "OTPURI_PARAMS",
    "memberof": "src/uri.js",
    "static": true,
    "longname": "src/uri.js~OTPURI_PARAMS",
    "access": "private",
    "export": false,
    "importPath": "otpauth/src/uri.js",
    "importStyle": null,
    "description": "Valid key URI parameters.",
    "lineNumber": 10,
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 93,
    "kind": "variable",
    "name": "OTPURI_REGEX",
    "memberof": "src/uri.js",
    "static": true,
    "longname": "src/uri.js~OTPURI_REGEX",
    "access": "private",
    "export": false,
    "importPath": "otpauth/src/uri.js",
    "importStyle": null,
    "description": "Key URI regex.\n  otpauth://TYPE/[ISSUER:]LABEL?PARAMETERS",
    "lineNumber": 18,
    "type": {
      "nullable": null,
      "types": [
        "RegExp"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 94,
    "kind": "variable",
    "name": "SECRET_REGEX",
    "memberof": "src/uri.js",
    "static": true,
    "longname": "src/uri.js~SECRET_REGEX",
    "access": "private",
    "export": false,
    "importPath": "otpauth/src/uri.js",
    "importStyle": null,
    "description": "RFC 4648 base32 alphabet without pad.",
    "lineNumber": 25,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 95,
    "kind": "variable",
    "name": "ALGORITHM_REGEX",
    "memberof": "src/uri.js",
    "static": true,
    "longname": "src/uri.js~ALGORITHM_REGEX",
    "access": "private",
    "export": false,
    "importPath": "otpauth/src/uri.js",
    "importStyle": null,
    "description": "Regex for supported algorithms.",
    "lineNumber": 32,
    "type": {
      "nullable": null,
      "types": [
        "RegExp"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 96,
    "kind": "variable",
    "name": "INTEGER_REGEX",
    "memberof": "src/uri.js",
    "static": true,
    "longname": "src/uri.js~INTEGER_REGEX",
    "access": "private",
    "export": false,
    "importPath": "otpauth/src/uri.js",
    "importStyle": null,
    "description": "Integer regex.",
    "lineNumber": 39,
    "type": {
      "nullable": null,
      "types": [
        "RegExp"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 97,
    "kind": "variable",
    "name": "POSITIVE_INTEGER_REGEX",
    "memberof": "src/uri.js",
    "static": true,
    "longname": "src/uri.js~POSITIVE_INTEGER_REGEX",
    "access": "private",
    "export": false,
    "importPath": "otpauth/src/uri.js",
    "importStyle": null,
    "description": "Positive integer regex.",
    "lineNumber": 46,
    "type": {
      "nullable": null,
      "types": [
        "RegExp"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 98,
    "kind": "class",
    "name": "URI",
    "memberof": "src/uri.js",
    "static": true,
    "longname": "src/uri.js~URI",
    "access": "public",
    "export": true,
    "importPath": "otpauth/src/uri.js",
    "importStyle": "{URI}",
    "description": "HOTP/TOTP object/string conversion.",
    "see": [
      "https://github.com/google/google-authenticator/wiki/Key-Uri-Format"
    ],
    "lineNumber": 52,
    "interface": false
  },
  {
    "__docId__": 99,
    "kind": "method",
    "name": "parse",
    "memberof": "src/uri.js~URI",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/uri.js~URI.parse",
    "access": "public",
    "description": "Parses a Google Authenticator key URI and returns an HOTP/TOTP object.",
    "lineNumber": 59,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": "parse"
      },
      {
        "tagName": "@returns",
        "tagValue": "{Object} HOTP/TOTP object."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "uri",
        "description": "Google Authenticator Key URI."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "HOTP/TOTP object."
    }
  },
  {
    "__docId__": 100,
    "kind": "method",
    "name": "stringify",
    "memberof": "src/uri.js~URI",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/uri.js~URI.stringify",
    "access": "public",
    "description": "Converts an HOTP/TOTP object to a Google Authenticator key URI.",
    "lineNumber": 165,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": "stringify"
      },
      {
        "tagName": "@returns",
        "tagValue": "{string} Google Authenticator Key URI."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "otp",
        "description": "HOTP/TOTP object."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "config",
        "description": "Configuration options."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "config.legacyIssuer",
        "description": "Set issuer label prefix."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "Google Authenticator Key URI."
    }
  },
  {
    "__docId__": 101,
    "kind": "file",
    "name": "src/utils.js",
    "content": "/**\n * An object containing some utilities.\n * @type {Object}\n */\nexport const Utils = {};\n\n/**\n * UInt conversion.\n * @type {Object}\n */\nUtils.uint = {};\n\n/**\n * Converts an ArrayBuffer to an integer.\n * @param {ArrayBuffer} buf ArrayBuffer.\n * @returns {number} Integer.\n */\nUtils.uint.decode = function (buf) {\n\tconst arr = new Uint8Array(buf);\n\tlet num = 0;\n\n\tfor (let i = 0; i < arr.length; i++) {\n\t\tif (arr[i] === 0) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tnum *= 256;\n\t\tnum += arr[i];\n\t}\n\n\treturn num;\n};\n\n/**\n * Converts an integer to an ArrayBuffer.\n * @param {number} num Integer.\n * @returns {ArrayBuffer} ArrayBuffer.\n */\nUtils.uint.encode = function (num) {\n\tconst buf = new ArrayBuffer(8);\n\tconst arr = new Uint8Array(buf);\n\tlet acc = num;\n\n\tfor (let i = 7; i >= 0; i--) {\n\t\tif (acc === 0) {\n\t\t\tbreak;\n\t\t}\n\n\t\tarr[i] = acc & 255;\n\t\tacc -= arr[i];\n\t\tacc /= 256;\n\t}\n\n\treturn buf;\n};\n\n/**\n * Raw string conversion.\n * @type {Object}\n */\nUtils.raw = {};\n\n/**\n * Converts an ArrayBuffer to a string.\n * @param {ArrayBuffer} buf ArrayBuffer.\n * @returns {string} String.\n */\nUtils.raw.decode = function (buf) {\n\tconst arr = new Uint8Array(buf);\n\tlet str = '';\n\n\tfor (let i = 0; i < arr.length; i++) {\n\t\tstr += String.fromCharCode(arr[i]);\n\t}\n\n\treturn str;\n};\n\n/**\n * Converts a string to an ArrayBuffer.\n * @param {string} str String.\n * @returns {ArrayBuffer} ArrayBuffer.\n */\nUtils.raw.encode = function (str) {\n\tconst buf = new ArrayBuffer(str.length);\n\tconst arr = new Uint8Array(buf);\n\n\tfor (let i = 0; i < str.length; i++) {\n\t\tarr[i] = str.charCodeAt(i);\n\t}\n\n\treturn buf;\n};\n\n/**\n * Base32 string conversion.\n * @type {Object}\n */\nUtils.b32 = {};\n\n/**\n * RFC 4648 base32 alphabet without pad.\n * @type {string}\n */\nUtils.b32.alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567';\n\n/**\n * Converts an ArrayBuffer to a base32 string (RFC 4648).\n * @see https://github.com/LinusU/base32-decode\n * @param {ArrayBuffer} buf ArrayBuffer.\n * @returns {string} Base32 string.\n */\nUtils.b32.decode = function (buf) {\n\tconst arr = new Uint8Array(buf);\n\n\tlet bits = 0;\n\tlet value = 0;\n\tlet str = '';\n\n\tfor (let i = 0; i < arr.length; i++) {\n\t\tvalue = (value << 8) | arr[i];\n\t\tbits += 8;\n\n\t\twhile (bits >= 5) {\n\t\t\tstr += Utils.b32.alphabet[(value >>> bits - 5) & 31];\n\t\t\tbits -= 5;\n\t\t}\n\t}\n\n\tif (bits > 0) {\n\t\tstr += Utils.b32.alphabet[(value << 5 - bits) & 31];\n\t}\n\n\treturn str;\n};\n\n/**\n * Converts a base32 string to an ArrayBuffer (RFC 4648).\n * @see https://github.com/LinusU/base32-encode\n * @param {string} str Base32 string.\n * @returns {ArrayBuffer} ArrayBuffer.\n */\nUtils.b32.encode = function (str) {\n\tconst strUpp = str.toUpperCase();\n\tconst buf = new ArrayBuffer(str.length * 5 / 8 | 0);\n\tconst arr = new Uint8Array(buf);\n\n\tlet bits = 0;\n\tlet value = 0;\n\tlet index = 0;\n\n\tfor (let i = 0; i < strUpp.length; i++) {\n\t\tlet idx = Utils.b32.alphabet.indexOf(strUpp[i]);\n\n\t\tif (idx === -1) {\n\t\t\tthrow new TypeError('Invalid character found: ' + strUpp[i]);\n\t\t}\n\n\t\tvalue = (value << 5) | idx;\n\t\tbits += 5;\n\n\t\tif (bits >= 8) {\n\t\t\tarr[index++] = (value >>> bits - 8) & 255;\n\t\t\tbits -= 8;\n\t\t}\n\t}\n\n\treturn buf;\n};\n\n/**\n * Hexadecimal string conversion.\n * @type {Object}\n */\nUtils.hex = {};\n\n/**\n * Converts an ArrayBuffer to a hexadecimal string.\n * @param {ArrayBuffer} buf ArrayBuffer.\n * @returns {string} Hexadecimal string.\n */\nUtils.hex.decode = function (buf) {\n\tconst arr = new Uint8Array(buf);\n\tlet str = '';\n\n\tfor (let i = 0; i < arr.length; i++) {\n\t\tconst hexByte = arr[i].toString(16);\n\n\t\tstr += hexByte.length === 1\n\t\t\t? '0' + hexByte\n\t\t\t: hexByte;\n\t}\n\n\treturn str.toUpperCase();\n};\n\n/**\n * Converts a hexadecimal string to an ArrayBuffer.\n * @param {string} str Hexadecimal string.\n * @returns {ArrayBuffer} ArrayBuffer.\n */\nUtils.hex.encode = function (str) {\n\tconst buf = new ArrayBuffer(str.length / 2);\n\tconst arr = new Uint8Array(buf);\n\n\tfor (let i = 0; i < arr.length; i++) {\n\t\tarr[i] = parseInt(str.substr(i * 2, 2), 16);\n\t}\n\n\treturn buf;\n};\n\n/**\n * An object containing some utilities (for internal use only).\n * @private\n * @type {Object}\n */\nexport const InternalUtils = {};\n\n/**\n * Detect if running in \"Node.js\".\n * @type {boolean}\n */\n// eslint-disable-next-line dot-notation\nInternalUtils.isNode = Object.prototype.toString.call(global['process']) === '[object process]';\n\n/**\n * Dynamically import \"Node.js\" modules.\n * @param {string} name Name.\n * @returns {Object} Module.\n */\nInternalUtils.require = function (name) {\n\t// eslint-disable-next-line no-eval\n\treturn InternalUtils.isNode ? eval('require')(name) : null;\n};\n",
    "static": true,
    "longname": "/home/hectorm/Projects/otpauth/src/utils.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 102,
    "kind": "variable",
    "name": "Utils",
    "memberof": "src/utils.js",
    "static": true,
    "longname": "src/utils.js~Utils",
    "access": "public",
    "export": true,
    "importPath": "otpauth/src/utils.js",
    "importStyle": "{Utils}",
    "description": "An object containing some utilities.",
    "lineNumber": 5,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 103,
    "kind": "function",
    "name": "decode",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~decode",
    "access": "public",
    "export": false,
    "importPath": "otpauth/src/utils.js",
    "importStyle": null,
    "description": "Converts an ArrayBuffer to an integer.",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} Integer."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ArrayBuffer"
        ],
        "spread": false,
        "optional": false,
        "name": "buf",
        "description": "ArrayBuffer."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Integer."
    },
    "ignore": true
  },
  {
    "__docId__": 104,
    "kind": "function",
    "name": "encode",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~encode",
    "access": "public",
    "export": false,
    "importPath": "otpauth/src/utils.js",
    "importStyle": null,
    "description": "Converts an integer to an ArrayBuffer.",
    "lineNumber": 39,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ArrayBuffer} ArrayBuffer."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "num",
        "description": "Integer."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ArrayBuffer"
      ],
      "spread": false,
      "description": "ArrayBuffer."
    },
    "ignore": true
  },
  {
    "__docId__": 105,
    "kind": "function",
    "name": "decode",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~decode",
    "access": "public",
    "export": false,
    "importPath": "otpauth/src/utils.js",
    "importStyle": null,
    "description": "Converts an ArrayBuffer to a string.",
    "lineNumber": 68,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} String."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ArrayBuffer"
        ],
        "spread": false,
        "optional": false,
        "name": "buf",
        "description": "ArrayBuffer."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "String."
    },
    "ignore": true
  },
  {
    "__docId__": 106,
    "kind": "function",
    "name": "encode",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~encode",
    "access": "public",
    "export": false,
    "importPath": "otpauth/src/utils.js",
    "importStyle": null,
    "description": "Converts a string to an ArrayBuffer.",
    "lineNumber": 84,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ArrayBuffer} ArrayBuffer."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": "String."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ArrayBuffer"
      ],
      "spread": false,
      "description": "ArrayBuffer."
    },
    "ignore": true
  },
  {
    "__docId__": 107,
    "kind": "function",
    "name": "decode",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~decode",
    "access": "public",
    "export": false,
    "importPath": "otpauth/src/utils.js",
    "importStyle": null,
    "description": "Converts an ArrayBuffer to a base32 string (RFC 4648).",
    "see": [
      "https://github.com/LinusU/base32-decode"
    ],
    "lineNumber": 113,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} Base32 string."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ArrayBuffer"
        ],
        "spread": false,
        "optional": false,
        "name": "buf",
        "description": "ArrayBuffer."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "Base32 string."
    },
    "ignore": true
  },
  {
    "__docId__": 108,
    "kind": "function",
    "name": "encode",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~encode",
    "access": "public",
    "export": false,
    "importPath": "otpauth/src/utils.js",
    "importStyle": null,
    "description": "Converts a base32 string to an ArrayBuffer (RFC 4648).",
    "see": [
      "https://github.com/LinusU/base32-encode"
    ],
    "lineNumber": 143,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ArrayBuffer} ArrayBuffer."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": "Base32 string."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ArrayBuffer"
      ],
      "spread": false,
      "description": "ArrayBuffer."
    },
    "ignore": true
  },
  {
    "__docId__": 109,
    "kind": "function",
    "name": "decode",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~decode",
    "access": "public",
    "export": false,
    "importPath": "otpauth/src/utils.js",
    "importStyle": null,
    "description": "Converts an ArrayBuffer to a hexadecimal string.",
    "lineNumber": 182,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} Hexadecimal string."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ArrayBuffer"
        ],
        "spread": false,
        "optional": false,
        "name": "buf",
        "description": "ArrayBuffer."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "Hexadecimal string."
    },
    "ignore": true
  },
  {
    "__docId__": 110,
    "kind": "function",
    "name": "encode",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~encode",
    "access": "public",
    "export": false,
    "importPath": "otpauth/src/utils.js",
    "importStyle": null,
    "description": "Converts a hexadecimal string to an ArrayBuffer.",
    "lineNumber": 202,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ArrayBuffer} ArrayBuffer."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": "Hexadecimal string."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ArrayBuffer"
      ],
      "spread": false,
      "description": "ArrayBuffer."
    },
    "ignore": true
  },
  {
    "__docId__": 111,
    "kind": "variable",
    "name": "InternalUtils",
    "memberof": "src/utils.js",
    "static": true,
    "longname": "src/utils.js~InternalUtils",
    "access": "private",
    "export": true,
    "importPath": "otpauth/src/utils.js",
    "importStyle": "{InternalUtils}",
    "description": "An object containing some utilities (for internal use only).",
    "lineNumber": 218,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 112,
    "kind": "function",
    "name": "require",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~require",
    "access": "public",
    "export": false,
    "importPath": "otpauth/src/utils.js",
    "importStyle": null,
    "description": "Dynamically import \"Node.js\" modules.",
    "lineNumber": 232,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} Module."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Name."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "Module."
    },
    "ignore": true
  },
  {
    "kind": "index",
    "content": "[![Last version](https://img.shields.io/github/tag/hectorm/otpauth.svg)][tags]\n[![Dependencies status](https://img.shields.io/david/hectorm/otpauth.svg)][dependencies]\n[![Dev dependencies status](https://img.shields.io/david/dev/hectorm/otpauth.svg)][devDependencies]\n[![NPM status](https://img.shields.io/npm/dm/otpauth.svg)][npm]\n[![Documentation](https://hectorm.github.io/otpauth/badge.svg)][docs]\n\n***\n\n# OTPAuth\nOne Time Password (HOTP/TOTP) library for Node.js and browser.\n\n## Installation\nInstall the module via `npm`.\n\n```sh\nnpm install otpauth\n```\n\n## Usage\n\n### Node.js\n```javascript\nconst OTPAuth = require('otpauth');\n\nlet totp = new OTPAuth.TOTP({\n\tissuer: 'ACME',\n\tlabel: 'AzureDiamond',\n\talgorithm: 'SHA1',\n\tdigits: 6,\n\tperiod: 30,\n\tsecret: OTPAuth.Secret.fromB32('NB2W45DFOIZA')\n});\n\n// Generate TOTP token.\nlet token = totp.generate();\n\n// Validate TOTP token.\nlet delta = totp.validate({\n\ttoken: token,\n\twindow: 10\n});\n\n// Convert to Google Authenticator key URI:\n//   otpauth://totp/ACME:AzureDiamond?issuer=ACME&secret=NB2W45DFOIZA&algorithm=SHA1&digits=6&period=30\nlet uri = totp.toString();\n```\n\n### Browser\n```html\n<script src=\"otpauth.min.js\"></script>\n<script>\n\t// Same as above...\n</script>\n```\n\n## Supported hashing algorithms\nIn Node.js, the same algorithms as [`Crypto.createHmac`][createHmac] function are supported, since it is used internally.\nIn browsers, the `SHA1`, `SHA256` and `SHA512` algorithms are supported by using the [Stanford Javascript Crypto Library][sjcl].\n\n## Documentation\nSee the [documentation][docs] page.\n\n## License\n[MIT License][license] © [Héctor Molinero Fernández](https://molinero.dev/).\n\n[docs]: https://hectorm.github.io/otpauth/index.html\n[license]: https://github.com/hectorm/otpauth/blob/master/LICENSE.md\n[tags]: https://github.com/hectorm/otpauth/tags\n[npm]: https://www.npmjs.com/package/otpauth\n[dependencies]: https://david-dm.org/hectorm/otpauth\n[devDependencies]: https://david-dm.org/hectorm/otpauth?type=dev\n[createHmac]: https://nodejs.org/api/crypto.html#crypto_crypto_createhmac_algorithm_key\n[sjcl]: https://github.com/bitwiseshiftleft/sjcl\n",
    "longname": "/home/hectorm/Projects/otpauth/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"otpauth\",\n  \"version\": \"3.2.3\",\n  \"description\": \"One Time Password (HOTP/TOTP) library for Node.js and browser\",\n  \"keywords\": [\n    \"otp\",\n    \"hotp\",\n    \"totp\",\n    \"one time password\",\n    \"2fa\",\n    \"2 factor\",\n    \"two factor\",\n    \"two-factor\",\n    \"2step\",\n    \"2 step\",\n    \"two step\",\n    \"two-step\",\n    \"auth\",\n    \"authenticator\",\n    \"google authenticator\"\n  ],\n  \"author\": \"Héctor Molinero Fernández <hector@molinero.dev>\",\n  \"license\": \"MIT\",\n  \"homepage\": \"https://github.com/hectorm/otpauth\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/hectorm/otpauth.git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/hectorm/otpauth/issues\"\n  },\n  \"main\": \"dist/otpauth.js\",\n  \"files\": [\n    \"/dist\",\n    \"/src\"\n  ],\n  \"scripts\": {\n    \"lint\": \"eslint .\",\n    \"build\": \"webpack --display-reasons\",\n    \"test:browser:unminified\": \"karma start\",\n    \"test:browser:minified\": \"IS_MINIFIED=true karma start\",\n    \"test:browser\": \"run-s test:browser:*\",\n    \"test:node:unminified\": \"mocha --reporter dot\",\n    \"test:node:minified\": \"IS_MINIFIED=true mocha --reporter dot\",\n    \"test:node\": \"run-s test:node:*\",\n    \"test\": \"run-s test:*\",\n    \"docs\": \"rimraf docs && esdoc2\",\n    \"dist\": \"run-s lint build test docs\",\n    \"version\": \"run-s dist && git add -A dist docs\"\n  },\n  \"dependencies\": {},\n  \"devDependencies\": {\n    \"chai\": \"~4.2.0\",\n    \"closure-webpack-plugin\": \"~2.0.1\",\n    \"esdoc2-standard-plugin\": \"~2.1.2\",\n    \"esdoc2\": \"~2.1.5\",\n    \"eslint-config-xo\": \"~0.26.0\",\n    \"eslint-config-zant\": \"~2.1.0\",\n    \"eslint-plugin-import\": \"~2.16.0\",\n    \"eslint-plugin-unicorn\": \"~7.1.0\",\n    \"eslint\": \"~5.15.1\",\n    \"google-closure-compiler\": \"~20190301.0.0\",\n    \"karma-chai\": \"~0.1.0\",\n    \"karma-chrome-launcher\": \"~2.2.0\",\n    \"karma-firefox-launcher\": \"~1.1.0\",\n    \"karma-mocha\": \"~1.3.0\",\n    \"karma\": \"~4.0.1\",\n    \"mocha\": \"~6.0.2\",\n    \"npm-run-all\": \"~4.1.5\",\n    \"rimraf\": \"~2.6.3\",\n    \"sjcl\": \"1.0.8\",\n    \"tmp\": \"~0.0.33\",\n    \"webpack-cli\": \"~3.2.3\",\n    \"webpack\": \"~4.29.6\"\n  }\n}\n",
    "longname": "/home/hectorm/Projects/otpauth/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]